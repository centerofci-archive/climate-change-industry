{"version":3,"sources":["components/Map/map.png","utils.js","constants.js","components/Icon/Icon.jsx","components/Network/NetworkSearch.jsx","components/CircleText.jsx","components/Network/NetworkBubbles.jsx","components/Network/NetworkFilters.jsx","components/Network/NetworkList.jsx","components/Network/NetworkTooltip.jsx","components/Network/StatusPill.jsx","components/Network/NetworkModal.jsx","group-options.js","components/Network/Network.jsx","components/Map/MapTooltip.jsx","components/Map/Globe.jsx","components/Map/MapTooltipCountry.jsx","components/Map/GlobeCountry.jsx","components/Network/CountryModal.jsx","components/Map/MapCountry.jsx","components/Map/MapWrapper.jsx","components/Benchmarks/constants.js","components/Benchmarks/Timeline.jsx","components/Benchmarks/Benchmarks.jsx","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","move","x","y","arguments","length","undefined","isAttr","transform","concat","getSpiralPositions","n","pointRadius","angleDiff","distance","angle","points","Array","fill","map","_","i","radius","Math","sqrt","asin","PI","cos","sin","r","d","Object","objectSpread","centerX","min","apply","toConsumableArray","slice","max","centerY","runningId","getUniqueId","flatten","arr","reduce","a","b","getPointFromAngleAndDistance","getAngleFromPoints","p1","p2","atan2","getDistanceFromXY","_ref","_ref2","slicedToArray","pow","scaleCanvas","canvas","context","width","height","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","style","scale","keepBetween","value","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","boundedHeight","boundedWidth","useChartDimensions","passedSettings","ref","useRef","_useState","useState","_useState2","changeWidth","_useState3","_useState4","changeHeight","useEffect","element","current","resizeObserver","ResizeObserver","entries","isArray","entry","contentRect","observe","unobserve","newSettings","fromPairs","res","forEach","getUrlParams","parts","location","search","split","params","part","_part$split","_part$split2","key","decodeURIComponent","paramsObjectToString","obj","keys","values","encodeURIComponent","join","filter","useQueryParams","_useState5","_useState6","localParams","setLocalParams","currentParams","setParams","newParams","newUrl","protocol","host","pathname","history","pushState","path","types","getContributionArea","Set","sort","data","type","rawData","mainContributionArea","colors","accentColors","typeColors","contributionAreas","contributionAreaColorsList","contributionAreaColors","contributionArea","contributionAreaColorCombos","handleCombo","areaNames","slug","push","otherContributionArea","statusColors","Active","fieldLabels","Entity Type","typeShapes","Interventions","shapes","Investments","Actors","Organizations","Regulations","cx","cy","relationships","directions","contributionAreaDescriptions","Mitigation","Adaptation","Geoengineering","sizes","xs","s","m","l","xl","Icon","name","_ref$size","size","_ref$direction","direction","className","props","objectWithoutProperties","dimension","react_default","createElement","assign","viewBox","iconPaths","arrow","controls","info","pause","Fragment","play","refresh","minus","plus","NetworkSearch","searchTerm","setSearchTerm","searchTermLocal","setSearchTermLocal","isOpen","setIsOpen","allItems","useMemo","debouncedSearchTerm","delay","_useState7","_useState8","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","didMount","setDidMount","uniqueStringsPerField","fields","field","items","collection","func","object","create","item","countBy","fieldToAccessorMap","searchTermLocalLower","filteredStringsPerField","includes","onKeydown","e","addEventListener","removeEventListener","onChange","newSearchTerm","target","placeholder","onFocus","components_Icon_Icon","onClick","CircleText","_ref$r","_ref$rotate","rotate","children","id","pointerEvents","textAnchor","href","startOffset","NetworkBubbles","groupType","groupMeta","activeFilters","onFocusItem","focusedItem","hoveredItem","onHoverItem","focusedNode","setFocusedNodeId","_useChartDimensions","_useChartDimensions2","dms","timeout","simulationClusters","simulationClustersData","simulation","simulationData","tickIteration","groups","setGroups","links","cachedGroupPositions","canvasElement","zoom","topLeftCornerPosition","setTopLeftCornerPosition","dragStartMousePosition","startTopLeftCornerPosition","clusterByKey","getClusterName","getSize","baseCircleSize","dashOffset","setDashOffset","_useMemo","clusters","clusterName","group","count","area","numberOfGroups","groupPositions","forceSimulation","force","forceX","strength","forceY","forceCollide","stop","tick","clusterPositions","getClusterPosition","positions","avg","linkKeys","initialLinks","_ref3","_ref4","tableName","typeOfLink","targetId","find","source","index","nodes","isMain","link","getId","getMatches","investments","startsWith","has","cachedPosition","clusterPosition","matchTypes","matches","getMatchTypes","color","getColor","numberOfLinks","node","linkedNodeIds","newFocusedNode","matchingLinks","matchingIds","nextLevelMatchingLinks","nextLevelMatchingIds","getDistanceFromFocusedNode","isAttachedToFocusedNode","forceLink","iterations","alphaMin","alpha","on","onTick","groupBubbles","_ref5","_ref5$items","position","hull","polygonHull","top","secondaryNodesOnNodeRunningCount","spiralPositions","linkedNodes","polygonCentroid","Number","isNaN","linkedId","spiralPosition","updateTooltip","getItemOpacity","label","isFinite","isInHoveredPointNetwork","_ref8","filterValue","getFilterFromItem","console","log","ctx","getContext","onZoom","diff","newZoom","zoomDiff","translate","onPan","newTopLeftCornerPosition","topLeftCornerDiff","callback","onKeyDown","useCallback","useKeyPress","panMovement","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","ctrlKey","metaKey","stopPropagation","preventDefault","savedCallback","setInterval","clearInterval","useInterval","clearRect","fillStyle","strokeStyle","lineJoin","globalAlpha","_ref9","lineWidth","drawShape","lineDashOffset","pathDString","_ref6","reverseAngle","startDiff","targetDiff","reverse","getLinkPath","opacity","arrowDString","_ref7","_svgpath$rotate","targetPoint","arrowPoints","arrowHeight","svgpath","toString","getLinkArrowPath","globalCompositeOperation","setLineDash","beginPath","arc","shape","gradient","createLinearGradient","addColorStop","shapePart","translatedPath","onDragThrottle","throttle","clientX","clientY","draggable","onWheel","delta","deltaY","onDragStart","onDrag","_ref10","components_CircleText","len","truncate","floor","onMouseEnter","onMouseLeave","path2d","Path2D","stroke","NetworkFilters","filters","onUpdateFilters","parsedFilters","state","activeFilterOfType","getFilterState","otherActiveFilters","newFilters","onClickItem","--override-color","NetworkList","setActiveFilters","isItemActive","onSetFilter","getFilterValue","_useMemo2","actors","organizations","isSelected","NetworkTooltip","isFocused","format","StatusPill","status","--status-color","background","NetworkModal","_ref$info","backCountry","backMitigationArea","onChangeState","onClose","components_Network_StatusPill","rel","amountSizeScale","scaleLog","domain","range","clamp","groupOptions","pluralNoun","accessor","clusterBy","indexOf","groupOptionsById","Network","areFiltersShowing","setAreFiltersShowing","isAboutShowing","setIsAboutShowing","newItem","newTerm","onCloseFocusedItem","contributionAreaText","areaName","about","dangerouslySetInnerHTML","__html","components_Network_NetworkList","components_Network_NetworkSearch","components_Network_NetworkFilters","components_Network_NetworkBubbles","components_Network_NetworkTooltip","components_Network_NetworkModal","countryAccessor","MapTooltip","dashGap","fromId","toName","fromName","getCentroid","country","countryCentersMap","GlobeWrapper","allData","setFocusedItem","imageName","setHoveredItem","globeElement","bubbles","countryName","lookupName","countryNamesMap","countryShapes","properties","geounit","centroid","lng","lat","alt","getActorObject","actorName","getActorCountry","actorObject","getCountryOffset","filteredCountries","findIndex","investment","fromObject","toObject","from","to","fromOffset","toOffset","offset","startLat","startLng","endLat","endLng","toId","animatedTime","dashLength","altitudeAutoScale","initialColor","collaborations","actor","collaborator","arcs","filteredArcs","React","isHighlighted","sortOrder","multiplyRgbaOpacity","components_Map_MapTooltip","react_globe_gl_module","globeImageUrl","bumpImageUrl","backgroundColor","pointsData","pointAltitude","pointColor","onPointHover","f","Boolean","arcsData","arcColor","arcStroke","arcAltitudeAutoScale","arcDashLength","arcDashGap","arcDashAnimateTime","arcsTransitionDuration","onGlobeReady","scene","intensity","rotation","onPointClick","rgb","opacityMultiplier","newOpacity","mitigationAreaPositions","mitigationArea","relevantActors","fromColor","toColor","MapTooltipCountry","react","fontWeight","_ref$country","_ref$actors","sphere","MapWrapper","projectionName","blankMap","setBlankMap","arcsRef","projectionFunction","projectionNameOptionsMap","maxHeight","innerHeight","projection","fitSize","_pathGenerator$bounds","geoPath","bounds","_pathGenerator$bounds2","_pathGenerator$bounds3","_pathGenerator$bounds4","pathGenerator","drawPath","save","clip","geoGraticule10","restore","drawMap","getImageData","voronoi","Delaunay","putImageData","coordinates","invert","strokeWidth","onMouseMove","_pointer","pointer","_pointer2","pointIndex","point","_pointer3","_pointer4","natural earth","geoNaturalEarth1","mercator","geoMercator","equal earth","geoEqualEarth","armadillo","geoArmadillo","baker","geoBaker","berghaus","geoBerghaus","eckert","geoEckert3","fahey","geoFahey","gilbert","geoGilbert","gingery","geoGingery","healpix","geoHealpix","ginzberg","geoGinzburg9","hufnagel","geoHufnagel","interrupted homolosine","geoInterruptedHomolosine","mollweide split","geoInterruptedMollweideHemispheres","polyhedral waterman","geoPolyhedralWaterman","projectionNameOptionsParsed","projectionNameOption","_ref$data","focusedCountry","focusedMitigationArea","typeOptions","parsedData","groupedData","setFocusedCountry","newCountry","react_select_esm","options","newProjection","filterFields","Map_Globe","GlobeCountry","MapCountry","CountryModal","benchmarkData","seaLevels","co2","ch4","temp","forest","benchmarkInfo","sourceUrl","fact","Timeline","xAccessor","yAccessor","yMinAccessor","yMaxAccessor","timelineId","uniqueId","deltaAccessor","xExtent","extent","yearsExtent","getFullYear","xScale","scaleTime","numberOfDecades","xTicks","ticks","yExtent","yScale","scaleLinear","maxDelta","abs","deltaScale","areaUndertaintyD","y0","y1","curve","curveMonotoneX","lineD","line","areaD","lineDeltaD","curveStep","deltaZero","areaDeltaD","year","x1","x2","y2","stopColor","Date","month","day","level","Benchmarks","benchmarks","getDate","timeFormat","formatDate","benchmarkName","levels","latestValue","toLocaleString","unit","components_Benchmarks_Timeline","App","_useQueryParams","_useQueryParams2","updateParams","newState","defineProperty","viz","isEmbed","itemGroupType","matchingItem","onChangeViz","components_Network_Network","components_Benchmarks_Benchmarks","components_Map_MapWrapper","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.174baaeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.237b420e.png\";","import { useEffect, useRef, useState, useCallback } from \"react\";\nimport { timer } from \"d3\";\nimport { scaleLinear } from \"d3-scale\";\nimport { format } from \"d3-format\";\nimport { timeParse } from \"d3-time-format\";\n\nexport const move = (x, y = 0, isAttr = false) => ({\n  transform: `translate(${x}${isAttr ? \"\" : \"px\"}, ${y}${isAttr ? \"\" : \"px\"})`,\n});\n\nexport const getRandomBetween = (min, max) => min + Math.random() * (max - min);\n\nexport const moveCentered = (x, y = 0) => ({\n  transform: `translate(calc(${x}px - 50%), calc(${y}px - 50%))`,\n});\n\nexport const moveTooltip = (x, y = 0) => ({\n  transform: `translate(calc(${x}px - 50%), calc(${y}px - 100%))`,\n});\n\nexport const getSpiralPositions = (\n  n = 100,\n  pointRadius = 5,\n  angleDiff = 2,\n  distance = 1.5\n) => {\n  let angle = 0;\n  let points = new Array(n).fill(0).map((_, i) => {\n    const radius = Math.sqrt(i + 0.6) * pointRadius * distance;\n    angle += Math.asin(1 / radius) * pointRadius * angleDiff;\n    angle = angle % (Math.PI * 2);\n    const x = Math.cos(angle) * radius;\n    const y = Math.sin(angle) * radius;\n    return {\n      x: i ? x : x * 0.3,\n      y: i ? y : y * 1,\n      angle,\n      r: radius,\n    };\n  });\n  // let firstPoint = points[0];\n  return points.map((d, i) => ({\n    ...d,\n    // x: d[\"x\"] - firstPoint[\"x\"],\n    // y: d[\"y\"] - firstPoint[\"y\"],\n    centerX:\n      (Math.min(...points.slice(0, i).map((d) => d[\"x\"])) +\n        Math.max(...points.slice(0, i).map((d) => d[\"x\"]))) /\n      2,\n    centerY:\n      (Math.min(...points.slice(0, i).map((d) => d[\"y\"])) +\n        Math.max(...points.slice(0, i).map((d) => d[\"y\"]))) /\n      2,\n  }));\n};\n\nlet runningId = 0;\nexport const getUniqueId = () => {\n  runningId++;\n  return runningId;\n};\n\nexport const flatten = (arr) => arr.reduce((a, b) => [...a, ...b], []);\n\nexport const getPointFromAngleAndDistance = (angle, distance) => ({\n  x: Math.cos((angle * Math.PI) / 180) * distance,\n  y: Math.sin((angle * Math.PI) / 180) * distance,\n});\n\nexport const getAngleFromPoints = (p1, p2) =>\n  Math.atan2(p1.y - p2.y, p1.x - p2.x) * (180 / Math.PI);\n\nexport const getAngleFromRadiusAndDistance = (r, distance) =>\n  Math.atan(distance / (2 * r)) * 2 * (180 / Math.PI);\n\nexport const sum = (arr) => arr.reduce((a, b) => a + b, 0);\n\nexport const getDistanceFromXY = ([x, y]) =>\n  Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\nexport const getNumberWithUnits = (d, numDecimals = 1) => {\n  const siUnits = Math.floor((d / 10).toFixed(0).toString().length);\n  return siUnits >= 15\n    ? format(`.${numDecimals}f`)(d / 1000000000000000) + \" quadrillion\"\n    : siUnits >= 12\n      ? format(`.${numDecimals}f`)(d / 1000000000000) + \" trillion\"\n      : siUnits >= 9\n        ? format(`.${numDecimals}f`)(d / 1000000000) + \" billion\"\n        : siUnits >= 6\n          ? format(`.${numDecimals}f`)(d / 1000000) + \" million\"\n          : siUnits >= 3\n            ? format(`.${numDecimals}f`)(d / 1000) + \" thousand\"\n            : d < 0.001\n              ? 0\n              : d < 0.1\n                ? format(`,.2f`)(d)\n                : format(`,.02f`)(d);\n};\n\n// grabbed from https://gist.github.com/callumlocke/cc258a193839691f60dd\nexport const scaleCanvas = (canvas, context, width, height) => {\n  // assume the device pixel ratio is 1 if the browser doesn't specify it\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // determine the 'backing store ratio' of the canvas context\n  const backingStoreRatio =\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  // determine the actual ratio we want to draw at\n  const ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    // set the 'real' canvas size to the higher width/height\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n\n    // ...then scale it back down with CSS\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n  } else {\n    // this is a normal 1:1 device; just scale it simply\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = \"\";\n    canvas.style.height = \"\";\n  }\n\n  // scale the drawing context so everything will work at the higher ratio\n  context.scale(ratio, ratio);\n};\n\n// from https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport const debounce = (func, wait, immediate) => {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport const getDomainNameFromUrl = (url) => {\n  var hostname;\n  //find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf(\"//\") > -1) {\n    hostname = url.split(\"/\")[2];\n  } else {\n    hostname = url.split(\"/\")[0];\n  }\n\n  //find & remove port number\n  hostname = hostname.split(\":\")[0];\n  hostname = hostname.replace(\"www.\", \"\");\n  //find & remove \"?\"\n  hostname = hostname.split(\"?\")[0];\n\n  return hostname;\n};\n\nexport const groupBy = function (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n\nexport const parseDate = (date) => {\n  if (!date) return null;\n  const numberOfSlashes = date.split(/\\//g).length - 1;\n  const dateFormat = numberOfSlashes === 2 ? \"%m/%d/%Y\" : \"%Y\";\n  return timeParse(dateFormat)(date);\n};\n\nexport const sortBy = (arr, key) =>\n  arr.sort((a, b) =>\n    (typeof key === \"function\" ? key(a) : a[key]) >\n      (typeof key === \"function\" ? key(b) : b[key])\n      ? 1\n      : -1\n  );\nexport const sortByFunction = (key) => (a, b) =>\n  (typeof key === \"function\" ? key(a) : a[key]) >\n    (typeof key === \"function\" ? key(b) : b[key])\n    ? 1\n    : -1;\n\nexport const keepBetween = (value, min, max) =>\n  Math.max(min, Math.min(max, value));\n\nexport function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nexport const combineChartDimensions = (dimensions) => {\n  let parsedDimensions = {\n    marginTop: 0,\n    marginRight: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    ...dimensions,\n  };\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n      parsedDimensions.marginTop -\n      parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n      parsedDimensions.marginLeft -\n      parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nexport const useChartDimensions = (passedSettings) => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n\n  const [width, changeWidth] = useState(0);\n  const [height, changeHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n\n      const entry = entries[0];\n\n      if (width !== entry.contentRect.width)\n        changeWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        changeHeight(entry.contentRect.height);\n    });\n\n    resizeObserver.observe(element);\n\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n\nexport const fromPairs = (arr) => {\n  let res = {};\n  arr.forEach((d) => {\n    res[d[0]] = d[1];\n  });\n  return res;\n};\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport const getUrlParams = () => {\n  const parts = window.location.search.slice(1).split(\"&\");\n  if (!parts) return;\n  let params = {};\n  parts.forEach((part) => {\n    const [key, value] = part.split(\"=\");\n    if (!key) return;\n    params[key] = decodeURIComponent(value);\n  });\n  return params;\n};\n\nconst paramsObjectToString = (obj) => {\n  const keys = Object.keys(obj);\n  const values = Object.values(obj);\n  return keys\n    .map((key, i) => [key, values[i]].map(encodeURIComponent).join(\"=\"))\n    .filter((d, i) => values[i] != null)\n    .join(\"&\");\n};\n\nexport const useQueryParams = () => {\n  const [localParams, setLocalParams] = useState(getUrlParams);\n  const currentParams = useRef({});\n\n  useEffect(() => {\n    const params = getUrlParams();\n    setLocalParams(params);\n    currentParams.current = params;\n  }, []);\n\n  const updateParams = (newParams) => {\n    setParams({\n      ...currentParams.current,\n      ...newParams,\n    });\n  };\n\n  const setParams = (newParams) => {\n    const newUrl = [\n      window.location.protocol,\n      \"//\",\n      window.location.host,\n      window.location.pathname,\n      \"?\",\n      paramsObjectToString(newParams),\n    ].join(\"\");\n    window.history.pushState({ path: newUrl }, \"\", newUrl);\n    setLocalParams(newParams);\n    currentParams.current = newParams;\n  };\n\n  return [localParams, updateParams, setParams];\n};\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function countBy(collection, func) {\n  var object = Object.create(null);\n\n  collection.forEach(function (item) {\n    var key = func(item);\n    if (key in object) {\n      ++object[key];\n    } else {\n      object[key] = 1;\n    }\n  });\n\n  return object;\n}\n\nexport const truncate = (str, len = 23) =>\n  str.length > len - 2 ? str.slice(0, len) + \"...\" : str;\n\nexport const getOrdinal = (n) => (\n  n % 100 == 11 || n % 10 == 1 ? \"st\"\n    : n % 100 == 12 || n % 10 == 2 ? \"nd\"\n      : n % 100 == 13 || n % 10 == 3 ? \"rd\"\n        : \"th\"\n);\n\nexport function useTween(number = 0, duration = 500) {\n  const currentNumber = useRef(number);\n  // const [currentNumber, setCurrentNumber] = useState(number);\n  const currentTimer = useRef()\n\n  useEffect(() => {\n    if (currentTimer.current) currentTimer.current.stop();\n    const timeScale = scaleLinear()\n      .domain([0, duration])\n      .range([currentNumber.current, number])\n      .clamp(true)\n    console.log([currentNumber.current, number])\n\n    currentTimer.current = timer(elapsed => {\n      if (currentNumber.current === number) return\n      const newNumber = timeScale(elapsed)\n      currentNumber.current = newNumber\n\n      if (elapsed > duration) {\n        currentTimer.current.stop()\n        currentNumber.current = number\n      }\n    })\n    return () => {\n      currentTimer.current.stop()\n    }\n  }, [number])\n  return currentNumber.current\n}\n\n\nexport const useKeyPress = (callback) => {\n  const onKeyDown = useCallback(callback, [callback])\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [callback]);\n}","import React from \"react\";\nimport { Group, Shape, Circle } from 'react-konva';\nimport rawData from \"./data.json\";\nimport { fromPairs } from \"./utils\";\n\nexport const types = [\"Interventions\", \"Investments\", \"Actors\"];\n\nconst getContributionArea = (d) => {\n  return [\n    ...new Set(d[\"Topical Contribution Area\"].map((d) => d.split(\":\")[0])),\n  ].sort();\n  // .join(\" & \");\n};\nexport const data = fromPairs(\n  types.map((type) => [\n    type,\n    rawData[type].map((d) => ({\n      ...d,\n      mainContributionArea: d[\"Topical Contribution Area\"]\n        ? getContributionArea(d)\n        : null,\n    })),\n  ])\n);\n\nconst colors = [\"#4d405a\", \"#4d405a\", \"#4d405a\", \"#4d405a\"];\n\nexport const accentColors = [\n  \"\",\n  \"#afb9c5\",\n  \"#008b94\",\n  \"#5da17c\",\n  \"#866fac\",\n]\n\nlet typeColors = {};\ntypes.forEach((type, i) => {\n  typeColors[type] = colors[i % colors.length];\n});\nexport { typeColors };\n\nexport const contributionAreas = [\"Mitigation\", \"Geoengineering\", \"Adaptation\"];\n// const contributionAreaColorsList = [\"#89b792\", \"#4d405a\", \"#F79F1F\"];\nconst contributionAreaColorsList = [\n  accentColors[2],\n  accentColors[3],\n  accentColors[4],\n];\nlet contributionAreaColors = {};\ncontributionAreas.forEach((contributionArea, i) => {\n  contributionAreaColors[contributionArea] =\n    contributionAreaColorsList[i % colors.length];\n});\nlet contributionAreaColorCombos = [];\nconst handleCombo = (areaNames) => {\n  const slug = areaNames.sort().join(\"--\");\n  contributionAreaColorCombos.push({\n    slug,\n    colors: areaNames.map((d) => contributionAreaColors[d]),\n  });\n  contributionAreaColors[slug] = `url(#${slug})`;\n};\ncontributionAreas.forEach((contributionArea, i) => {\n  contributionAreas.slice(i + 1).forEach((otherContributionArea) => {\n    const areaNames = [contributionArea, otherContributionArea];\n    handleCombo(areaNames);\n  });\n});\nhandleCombo(contributionAreas);\nexport { contributionAreaColors, contributionAreaColorCombos };\n\nexport const statusColors = {\n  Active: \"#89b792\",\n};\n\nexport const fieldLabels = {\n  mainContributionArea: \"Main contribution area\",\n  \"Entity Type\": \"actor type\",\n};\n\nexport const sceneFunctionDrawShape = (path) => (context, shape) => {\n  context.fillStrokeShape(shape)\n  const path2D = new Path2D(path)\n  context._context.stroke(path2D);\n  context._context.fill(path2D);\n}\n\nexport const typeShapes = {\n  Interventions: {\n    x: -50, y: -50, shapes: [\n      \"M50,5C25.2,5,5,25.2,5,50s20.2,45,45,45s45-20.2,45-45S74.8,5,50,5z M50,85c-19.3,0-35-15.7-35-35s15.7-35,35-35   s35,15.7,35,35S69.3,85,50,85z\",\n      \"M50,20c-16.5,0-30,13.5-30,30s13.5,30,30,30s30-13.5,30-30S66.5,20,50,20z M50,70c-11,0-20-9-20-20s9-20,20-20s20,9,20,20   S61,70,50,70z\",\n      \"M50,35c-8.3,0-15,6.7-15,15s6.7,15,15,15s15-6.7,15-15S58.3,35,50,35z M50,55c-2.8,0-5-2.2-5-5s2.2-5,5-5s5,2.2,5,5   S52.8,55,50,55z\",\n    ]\n  },\n  Investments: {\n    x: -50, y: -50, shapes: [\n      \"M68.27,28.08H31.73S6.15,50,6.15,75.58c0,14.61,11,21.92,18.27,21.92H75.58c7.3,0,18.27-7.31,18.27-21.92C93.85,50,68.27,28.08,68.27,28.08ZM53.65,78.86v5.85h-7.3V78.88c-5.38-1-8.76-4.32-9-9.14h6.33c.31,2.53,2.86,4.16,6.55,4.16,3.4,0,5.81-1.65,5.81-4,0-2-1.56-3.14-5.4-4l-4.07-.87c-5.7-1.19-8.5-4.16-8.5-8.93s3.18-8.21,8.24-9.34V40.87h7.3v5.9c4.94,1.1,8.23,4.47,8.39,9H55.89c-.31-2.47-2.61-4.12-5.77-4.12s-5.44,1.52-5.44,3.9c0,1.93,1.49,3,5.16,3.82l3.77.8c6.29,1.32,9,4,9,8.89C62.61,74.29,59.25,77.79,53.65,78.86Z\",\n      \"M68.27,6.15H58.17a11,11,0,0,0-16.34,0H31.73a3.66,3.66,0,0,0-3.39,5l3.39,9.61H68.27l3.39-9.61A3.66,3.66,0,0,0,68.27,6.15Z\",\n    ]\n  },\n  Actors: {\n    x: -50, y: -50, shapes: [\n      { x: 47.5, y: 30.028, r: 22.623, },\n      \"M68.213,49.752c-5.217,5.477-12.57,8.898-20.713,8.898s-15.496-3.422-20.713-8.898c-8.004,3.217-13.162,8.25-13.162,13.911   c0,9.712,15.166,23.932,33.875,23.932s33.875-14.22,33.875-23.932C81.375,58.002,76.217,52.969,68.213,49.752z\"\n    ]\n  },\n  Organizations: {\n    x: -12.5, y: -12.5, scale: 4, shapes: [\n      \"M18,22 L22,22 L22,13 L18,13 L18,22 Z M13,10 L11,10 C10.447,10 10,9.552 10,9 C10,8.448 10.447,8 11,8 L13,8 C13.553,8 14,8.448 14,9 C14,9.552 13.553,10 13,10 L13,10 Z M13,14 L11,14 C10.447,14 10,13.552 10,13 C10,12.448 10.447,12 11,12 L13,12 C13.553,12 14,12.448 14,13 C14,13.552 13.553,14 13,14 L13,14 Z M13,18 L11,18 C10.447,18 10,17.552 10,17 C10,16.448 10.447,16 11,16 L13,16 C13.553,16 14,16.448 14,17 C14,17.552 13.553,18 13,18 L13,18 Z M2,22 L6,22 L6,8 L2,8 L2,22 Z M23,11 L22,11 L22,9 C22,8.448 21.553,8 21,8 C20.447,8 20,8.448 20,9 L20,11 L18,11 L18,4 C18,3.448 17.553,3 17,3 L13,3 L13,1 C13,0.448 12.553,0 12,0 C11.447,0 11,0.448 11,1 L11,3 L7,3 C6.447,3 6,3.448 6,4 L6,6 L4,6 L4,4 C4,3.448 3.553,3 3,3 C2.447,3 2,3.448 2,4 L2,6 L1,6 C0.447,6 0,6.448 0,7 L0,23 C0,23.552 0.447,24 1,24 L7,24 L17,24 L23,24 C23.553,24 24,23.552 24,23 L24,12 C24,11.448 23.553,11 23,11 L23,11 Z\"\n    ]\n  },\n  Regulations: {\n    x: -50, y: -50, shapes: [\n      { cx: 50, cy: 50, r: 50, },\n      \"M68.213,49.752c-5.217,5.477-12.57,8.898-20.713,8.898s-15.496-3.422-20.713-8.898c-8.004,3.217-13.162,8.25-13.162,13.911   c0,9.712,15.166,23.932,33.875,23.932s33.875-14.22,33.875-23.932C81.375,58.002,76.217,52.969,68.213,49.752z\"\n    ]\n  },\n};\n\nexport const relationships = {\n  Interventions: \"associated investments, funders, and actors\",\n  Investments: \"source, recipient, and addressed interventions\",\n  Actors:\n    \"partners, associated organizations, funded & undertaken interventions, and made & received investments\",\n};\n\nexport const directions = {\n  Interventions:\n    \"Hover or filter to isolate an intervention's primary connections, or click to see more details about an intervention.\",\n  Investments:\n    \"Hover or filter to isolate an investment's primary connections, or click to see more details about an investment.\",\n  Actors: \"Select an actor to see its primary and secondary connections.\",\n};\n\nexport const contributionAreaDescriptions = {\n  Mitigation: `climate interventions that reduce carbon (primarily) and other greenhouse gas emissions, either through reduction of production of emissions or through innovative techniques for emissions capture. This can be thought of as addressing the root causes.`,\n  Adaptation: `climate interventions that take an active role in improving robustness and resiliency of habitats and occupants (humans, animals, plant life, etc.) in the face of climate changes (e.g. sea-level rise) and extreme weather. This can be thought of as preparing to ride-out the changes that are already coming, given the modeled levels of warming and expected climate consequences.`,\n  Geoengineering: `human-engineered interventions, typically at a global or large ecosystem level (e.g. solar radiation management via introduction of atmospheric aerosols), to control or influence the Earth-climate system with the goal of reducing negative climate change impacts. This can be thought of as \"clean-up control\" or trying to partially reverse or reduce the impact of climate change; note there is considerable debate around how to define, scope and regulate geo-engineering, with many ethical and governance considerations to address. We anticipate that geoengineering tools will likely need to be among humanity's (thoughtfully considered) arrows in our climate-response quiver.`,\n};\n","import React from \"react\";\n\nimport \"./Icon.css\";\n\nconst sizes = {\n  xs: 9,\n  s: 12,\n  m: 19,\n  l: 25,\n  xl: 45,\n};\nconst Icon = ({ name, size = \"m\", direction = \"e\", className, ...props }) => {\n  const dimension = sizes[size];\n\n  return (\n    <svg\n      className={`Icon Icon--direction-${direction} ${className}`}\n      width={dimension}\n      height={dimension}\n      viewBox=\"0 0 25 25\"\n      {...props}\n    >\n      {iconPaths[name]}\n    </svg>\n  );\n};\n\nexport default Icon;\n\nconst iconPaths = {\n  arrow: (\n    <path d=\"M12.1454 0.796729C13.1125 -0.0711128 14.5999 0.00929699 15.4678 0.976329L24.3983 10.9276C25.2006 11.8216 25.2006 13.1763 24.3983 14.0703L15.4678 24.0216C14.5999 24.9886 13.1125 25.069 12.1454 24.2012C11.1784 23.3333 11.098 21.8459 11.9658 20.8788L17.0146 15.253H2.35268C1.05333 15.253 0 14.1996 0 12.9003C0 11.601 1.05333 10.5476 2.35268 10.5476H17.735L11.9658 4.11906C11.098 3.15203 11.1784 1.66457 12.1454 0.796729Z\" />\n  ),\n  controls: (\n    <path d=\"M4.4384 3C5.01369 3 5.48006 3.46637 5.48006 4.04167V11.3333C5.48006 11.9086 5.01369 12.375 4.4384 12.375C3.8631 12.375 3.39673 11.9086 3.39673 11.3333V4.04167C3.39673 3.46637 3.8631 3 4.4384 3ZM3.39673 16.5417V22.7917C3.39673 23.367 3.8631 23.8333 4.4384 23.8333C5.01369 23.8333 5.48006 23.367 5.48006 22.7917V16.5417H7.5634C8.13869 16.5417 8.60506 16.0753 8.60506 15.5C8.60506 14.9247 8.13869 14.4583 7.5634 14.4583H4.4384H1.3134C0.738099 14.4583 0.271729 14.9247 0.271729 15.5C0.271729 16.0753 0.738099 16.5417 1.3134 16.5417H3.39673ZM13.8134 13.4167C13.8134 12.8414 13.347 12.375 12.7717 12.375C12.1964 12.375 11.7301 12.8414 11.7301 13.4167V22.7917C11.7301 23.367 12.1964 23.8333 12.7717 23.8333C13.347 23.8333 13.8134 23.367 13.8134 22.7917V13.4167ZM12.7717 3C13.347 3 13.8134 3.46637 13.8134 4.04167V8.20833H15.8967C16.472 8.20833 16.9384 8.6747 16.9384 9.25C16.9384 9.8253 16.472 10.2917 15.8967 10.2917L12.7717 10.2917L9.64673 10.2917C9.07143 10.2917 8.60506 9.8253 8.60506 9.25C8.60506 8.6747 9.07143 8.20833 9.64673 8.20833H11.7301V4.04167C11.7301 3.46637 12.1964 3 12.7717 3ZM21.1051 16.5417H24.2301C24.8054 16.5417 25.2717 17.008 25.2717 17.5833C25.2717 18.1586 24.8054 18.625 24.2301 18.625H22.1467V22.7917C22.1467 23.367 21.6804 23.8333 21.1051 23.8333C20.5298 23.8333 20.0634 23.367 20.0634 22.7917V18.625H17.9801C17.4048 18.625 16.9384 18.1586 16.9384 17.5833C16.9384 17.008 17.4048 16.5417 17.9801 16.5417H21.1051ZM21.1051 3C21.6804 3 22.1467 3.46637 22.1467 4.04167V13.4167C22.1467 13.992 21.6804 14.4583 21.1051 14.4583C20.5298 14.4583 20.0634 13.992 20.0634 13.4167V4.04167C20.0634 3.46637 20.5298 3 21.1051 3Z\" />\n  ),\n  info: (\n    <g>\n      <path d=\"M15.3729 0.578613C16.1032 0.578613 16.7157 0.831852 17.2104 1.33833C17.7169 1.84481 17.9701 2.45729 17.9701 3.17579C17.9701 3.89428 17.7169 4.50676 17.2104 5.01324C16.7039 5.51972 16.0914 5.77296 15.3729 5.77296C14.6662 5.77296 14.0596 5.51972 13.5531 5.01324C13.0467 4.50676 12.7934 3.89428 12.7934 3.17579C12.7934 2.45729 13.0408 1.84481 13.5355 1.33833C14.0419 0.831852 14.6544 0.578613 15.3729 0.578613ZM16.4683 8.70582L12.8464 21.2677C12.6462 21.9862 12.5461 22.4573 12.5461 22.6811C12.5461 22.8107 12.5991 22.9343 12.7051 23.0521C12.8111 23.1581 12.923 23.2111 13.0408 23.2111C13.241 23.2111 13.4412 23.1228 13.6415 22.9461C14.1715 22.5103 14.8075 21.7211 15.5496 20.5786L16.1503 20.932C14.3717 24.0297 12.4813 25.5786 10.4789 25.5786C9.71332 25.5786 9.10083 25.3666 8.64147 24.9426C8.19389 24.5068 7.97009 23.9591 7.97009 23.2995C7.97009 22.8637 8.07021 22.3101 8.27045 21.6387L10.7263 13.1935C10.9618 12.3807 11.0796 11.7682 11.0796 11.356C11.0796 11.0969 10.9677 10.8672 10.7439 10.667C10.5202 10.4667 10.2139 10.3666 9.82522 10.3666C9.64854 10.3666 9.43652 10.3725 9.18917 10.3843L9.41886 9.67755L15.4083 8.70582H16.4683Z\" />\n    </g>\n  ),\n  pause: (\n    <>\n      <path d=\"M9.5 21.9092V3.15918C9.5 1.43329 8.10089 0.0341797 6.375 0.0341797C4.64911 0.0341797 3.25 1.43329 3.25 3.15918V21.9092C3.25 23.6351 4.64911 25.0342 6.375 25.0342C8.10089 25.0342 9.5 23.6351 9.5 21.9092Z\" />\n      <path d=\"M22 21.9092V3.15918C22 1.43329 20.6009 0.0341797 18.875 0.0341797C17.1491 0.0341797 15.75 1.43329 15.75 3.15918V21.9092C15.75 23.6351 17.1491 25.0342 18.875 25.0342C20.6009 25.0342 22 23.6351 22 21.9092Z\" />\n    </>\n  ),\n  play: (\n    <path d=\"M2.15039 4.29245C2.15039 1.59772 5.1315 -0.029815 7.39825 1.42738L21.5358 10.5158C23.6214 11.8565 23.6214 14.9052 21.5358 16.2459L7.39825 25.3343C5.1315 26.7915 2.15039 25.164 2.15039 22.4693V4.29245Z\" />\n  ),\n  refresh: (\n    <path d=\"M6.97937 3.40529C8.70577 2.45337 10.6948 2.08834 12.6467 2.36521C14.5986 2.64207 16.4076 3.54582 17.8012 4.94028C17.8093 4.94841 17.8176 4.95642 17.8259 4.9643L21.0026 7.95574H17.048C16.4203 7.95574 15.9115 8.4646 15.9115 9.09231C15.9115 9.72002 16.4203 10.2289 17.048 10.2289H23.8643H23.8675C24.0269 10.2289 24.1787 10.196 24.3165 10.1367C24.4544 10.0775 24.5828 9.98985 24.6925 9.874C24.7014 9.86462 24.7102 9.85508 24.7187 9.8454C24.9095 9.62998 25.0041 9.36088 25.004 9.09232C25.004 9.09121 25.004 9.09009 25.004 9.08898V2.27288C25.004 1.64517 24.4952 1.13631 23.8675 1.13631C23.2397 1.13631 22.7309 1.64517 22.7309 2.27288V6.46082L19.3966 3.32095C17.6563 1.58497 15.4 0.45984 12.9659 0.11459C10.526 -0.231487 8.03977 0.224801 5.88178 1.4147C3.72379 2.60459 2.01099 4.46363 1.00148 6.71166C-0.00803095 8.9597 -0.259554 11.4749 0.284811 13.8784C0.829176 16.2818 2.13994 18.4432 4.01957 20.0368C5.89921 21.6305 8.24589 22.5701 10.706 22.714C13.1661 22.8579 15.6063 22.1984 17.6589 20.8347C19.7116 19.4711 21.2654 17.4773 22.0863 15.1538C22.2954 14.5619 21.9851 13.9126 21.3933 13.7035C20.8014 13.4944 20.1521 13.8047 19.943 14.3966C19.2863 16.2554 18.0432 17.8504 16.4011 18.9413C14.759 20.0322 12.8068 20.5599 10.8387 20.4447C8.87066 20.3296 6.99332 19.5779 5.48961 18.303C3.9859 17.0281 2.93729 15.299 2.5018 13.3762C2.06631 11.4535 2.26753 9.44129 3.07513 7.64286C3.88274 5.84443 5.25298 4.35721 6.97937 3.40529Z\" />\n  ),\n  x: (\n    <path d=\"M24.7678 4.76777C25.7441 3.79146 25.7441 2.20854 24.7678 1.23223C23.7915 0.255922 22.2085 0.255922 21.2322 1.23223L13 9.46447L4.76777 1.23223C3.79146 0.255922 2.20854 0.255922 1.23223 1.23223C0.255923 2.20854 0.255923 3.79146 1.23223 4.76777L9.46447 13L1.23223 21.2322C0.255923 22.2085 0.255923 23.7915 1.23223 24.7678C2.20854 25.7441 3.79146 25.7441 4.76777 24.7678L13 16.5355L21.2322 24.7678C22.2085 25.7441 23.7915 25.7441 24.7678 24.7678C25.7441 23.7915 25.7441 22.2085 24.7678 21.2322L16.5355 13L24.7678 4.76777Z\" />\n  ),\n  minus: (\n    <path d=\"M0 12.2059C0 10.9876 0.987607 10 2.20588 10H22.7941C24.0124 10 25 10.9876 25 12.2059C25 13.4242 24.0124 14.4118 22.7941 14.4118H2.20588C0.987607 14.4118 0 13.4242 0 12.2059Z\" />\n  ),\n  plus: (\n    <path d=\"M14.7058 2.91169C14.7058 1.69342 13.7182 0.705811 12.4999 0.705811C11.2817 0.705811 10.294 1.69342 10.294 2.91169V11H2.20588C0.987607 11 0 11.9876 0 13.2059C0 14.4242 0.987607 15.4118 2.20588 15.4118H10.294V23.4999C10.294 24.7182 11.2817 25.7058 12.4999 25.7058C13.7182 25.7058 14.7058 24.7182 14.7058 23.4999V15.4118H22.7941C24.0124 15.4118 25 14.4242 25 13.2059C25 11.9876 24.0124 11 22.7941 11H14.7058V2.91169Z\" />\n  ),\n};\n","import React, { useEffect, useState, useMemo } from \"react\";\n\nimport {\n  countBy,\n  flatten,\n  useDebounce,\n  sortByFunction,\n  fromPairs,\n} from \"./../../utils\";\nimport { types } from \"./../../constants\";\nimport Icon from \"./../Icon/Icon\";\n\nimport \"./NetworkSearch.css\";\n\nconst NetworkSearch = ({ data, searchTerm, setSearchTerm }) => {\n  const [searchTermLocal, setSearchTermLocal] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const allItems = useMemo(\n    () => flatten(types.map((type) => data[type].map((d) => ({ ...d, type })))),\n    [data]\n  );\n\n  useEffect(() => {\n    setSearchTermLocal(searchTerm);\n  }, [searchTerm]);\n\n  const debouncedSearchTerm = useDebounce(searchTermLocal, 300);\n\n  const [didMount, setDidMount] = useState(false);\n  useEffect(() => {\n    if (!didMount) {\n      setDidMount(true);\n      return;\n    }\n    setSearchTerm(searchTermLocal ? searchTermLocal : null);\n  }, [debouncedSearchTerm]);\n\n  const onSearchTermChange = (e) => {\n    const newSearchTerm = e.target.value;\n    setSearchTermLocal(newSearchTerm);\n  };\n\n  const uniqueStringsPerField = useMemo(() => {\n    let uniqueStringsPerField = {};\n    fields.forEach((field) => {\n      const items = countBy(allItems, fieldToAccessorMap[field]);\n      uniqueStringsPerField[field] = Object.keys(items)\n        .filter((d) => d)\n        .sort(sortByFunction((d) => -items[d]));\n    });\n    return uniqueStringsPerField;\n  }, [allItems]);\n\n  const searchTermLocalLower = searchTermLocal.toLowerCase();\n\n  const filteredStringsPerField = fromPairs(\n    fields.map((field) => [\n      field,\n      uniqueStringsPerField[field].filter((d) =>\n        d.toLowerCase().includes(searchTermLocalLower)\n      ),\n    ])\n  );\n\n  useEffect(() => {\n    const onKeydown = (e) => {\n      if (e.key !== \"Escape\") return;\n      setIsOpen(false);\n    };\n    window.addEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, []);\n\n  return (\n    <div className=\"NetworkSearch\">\n      <div className=\"NetworkSearch__input\">\n        <input\n          value={searchTermLocal}\n          onChange={onSearchTermChange}\n          placeholder=\"Search for a name\"\n          onFocus={() => setIsOpen(true)}\n        />\n        {!!searchTermLocal && (\n          <Icon\n            className=\"NetworkSearch__input__close\"\n            name=\"x\"\n            size=\"s\"\n            onClick={() => setSearchTerm(\"\")}\n          />\n        )}\n      </div>\n      {isOpen && (\n        <>\n          <div className=\"NetworkSearch__modal\">\n            {fields.map((field) => (\n              <div className=\"NetworkSearch__field\" key={field}>\n                <h6>{field}</h6>\n                <div className=\"NetworkSearch__options\">\n                  {filteredStringsPerField[field].slice(0, 5).map((item) => (\n                    <button\n                      className=\"NetworkSearch__option\"\n                      key={item}\n                      onClick={() => setSearchTerm(item)}\n                    >\n                      {item}\n                    </button>\n                  ))}\n                  {filteredStringsPerField[field].length > 4 && (\n                    <div className=\"NetworkSearch__more\">\n                      + {filteredStringsPerField[field].length - 4} more\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"NetworkSearch__modal__background\"\n            onClick={() => setIsOpen(false)}\n          ></div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NetworkSearch;\n\nconst fieldToAccessorMap = {\n  Interventions: (d) => [d[\"type\"] == \"Interventions\" ? d[\"label\"] : undefined],\n  Investments: (d) => [d[\"type\"] == \"Investments\" ? d[\"label\"] : undefined],\n  Actors: (d) => [d[\"type\"] == \"Actors\" ? d[\"label\"] : undefined],\n  Regulations: (d) => [d[\"type\"] == \"Regulations\" ? d[\"label\"] : undefined],\n};\nconst fields = Object.keys(fieldToAccessorMap);\n","import React, { useMemo } from \"react\";\nimport { getUniqueId } from \"./../utils\";\n\nconst CircleText = ({ r = 10, rotate = 0, children, ...props }) => {\n  const id = useMemo(getUniqueId, []);\n\n  return (\n    <>\n      <path\n        fill=\"transparent\"\n        d={[\n          [\"M\", 0, r].join(\" \"),\n          [\"A\", r, r, 0, 0, 1, 0, -r].join(\" \"),\n          [\"A\", r, r, 0, 0, 1, 0, r].join(\" \"),\n        ].join(\" \")}\n        id={id}\n        transform={`rotate(${rotate})`}\n        style={{ pointerEvents: \"none\" }}\n      ></path>\n      <text textAnchor=\"middle\" {...props}>\n        <textPath href={`#${id}`} startOffset=\"50%\">\n          {children}\n        </textPath>\n      </text>\n    </>\n  );\n};\n\nexport default CircleText;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport svgpath from \"svgpath\"\nimport throttle from \"lodash/throttle\"\nimport {\n  forceSimulation,\n  forceX,\n  forceY,\n  forceCollide,\n  forceLink,\n} from \"d3-force\";\nimport { polygonCentroid, polygonHull } from \"d3\";\n\nimport {\n  keepBetween,\n  truncate,\n  move,\n  getAngleFromPoints,\n  getPointFromAngleAndDistance,\n  flatten,\n  fromPairs,\n  useChartDimensions,\n  useInterval,\n  scaleCanvas,\n  useKeyPress,\n} from \"./../../utils\";\nimport {\n  types,\n  contributionAreaColors,\n  typeShapes,\n  accentColors,\n} from \"./../../constants\";\nimport CircleText from \"./../CircleText\";\nimport Icon from \"./../Icon/Icon\";\n\nimport \"./NetworkBubbles.css\";\n\nconst NetworkBubbles = ({\n  data,\n  groupType,\n  groupMeta,\n  searchTerm,\n  activeFilters,\n  focusedItem,\n  onFocusItem,\n  hoveredItem,\n  onHoverItem,\n  focusedNode,\n  setFocusedNodeId,\n}) => {\n  const [ref, dms] = useChartDimensions();\n  const timeout = useRef();\n  const simulationClusters = useRef();\n  const simulationClustersData = useRef();\n  const simulation = useRef();\n  const simulationData = useRef();\n  const tickIteration = useRef();\n  const [groups, setGroups] = useState([]);\n  const links = useRef([]);\n  const cachedGroupPositions = useRef({});\n  const canvasElement = useRef(null);\n  const zoom = useRef(1);\n  const [topLeftCornerPosition, setTopLeftCornerPosition] = useState([0, 0])\n  const dragStartMousePosition = useRef([0, 0]);\n  const startTopLeftCornerPosition = useRef([0, 0]);\n  const clusterByKey = (groupMeta || {})[\"clusterBy\"];\n  const getClusterName =\n    (groupMeta || {})[\"getClusterName\"] || ((d) => d[clusterByKey]);\n  const getColor = (d) => d[\"mainContributionArea\"] ? d[\"mainContributionArea\"].sort().map(d => contributionAreaColors[d]) : \"#888\";\n  const getSize = (groupMeta || {})[\"getSize\"] || (() => 1);\n\n  const baseCircleSize =\n    (dms.width * dms.height * 0.0008) / (data[groupType].length + 30);\n  const [dashOffset, setDashOffset] = useState(0);\n\n  const { clusters, clusterPositions } = useMemo(() => {\n    if (!data) return [];\n    let groups = {};\n    let clusters = [];\n    if (!clusterByKey) {\n      clusters = [\n        {\n          clusters: data[groupType].map((d) => ({\n            ...d,\n            name: \"\",\n            group: 1,\n            value: 10,\n          })),\n        },\n      ];\n    } else {\n      data[groupType].forEach((d) => {\n        let clusterName = getClusterName(d);\n        if (clusterName && clusterName.length > 1) return;\n        if (!groups[clusterName]) groups[clusterName] = [];\n        groups[clusterName].push({\n          ...d,\n          group: clusterName,\n          value: baseCircleSize * 70,\n        });\n      });\n      Object.keys(groups).forEach((group) => {\n        const items = groups[group];\n        const count = items.length;\n        const area = items.reduce((a, b) => (a.value || 0) + (b.value || 0), 0);\n        clusters.push({\n          name: group,\n          count,\n          r: Math.sqrt(area / Math.PI) * 1,\n          items,\n        });\n      });\n    }\n    const numberOfGroups = clusters.length;\n\n    const groupPositions = new Array(numberOfGroups)\n      .fill(0)\n      .map((_, i) =>\n        getPointFromAngleAndDistance(\n          (360 / numberOfGroups) * i + 180,\n          baseCircleSize * 6\n        )\n      )\n      .map((d, i) => ({\n        ...d,\n        ...clusters[i],\n        x: d.x + dms.width / 2,\n        y: d.y + dms.height / 2,\n      }));\n\n    simulationClustersData.current = [...groupPositions.map((d) => ({ ...d }))];\n    simulationClusters.current = forceSimulation(simulationClustersData.current)\n      .force(\n        \"x\",\n        forceX(dms.width / 2).strength(dms.width < dms.height ? 0.1 : 0.05)\n      )\n      .force(\n        \"y\",\n        forceY(dms.height / 2).strength(dms.width < dms.height ? 0.05 : 0.1)\n      )\n      .force(\n        \"collide\",\n        forceCollide((d) => d[\"r\"] + baseCircleSize * 8)\n      )\n      .stop();\n    new Array(60).fill(0).forEach(() => {\n      simulationClusters.current.tick();\n    });\n    let clusterPositions = {};\n    clusters.forEach(({ name }, i) => {\n      clusterPositions[name] = [\n        simulationClustersData.current[i].x,\n        simulationClustersData.current[i].y,\n      ];\n    });\n    return { clusters, clusterPositions };\n  }, [data, dms.width + dms.height, groupMeta]);\n\n  const getClusterPosition = (d = {}) => {\n    const clusterName = getClusterName(d);\n    if (clusterName && clusterName.length > 1) {\n      const positions = clusterName\n        .map((name) => clusterPositions[name])\n        .filter((d) => d);\n      const avg = (arr) => arr.reduce((a, b) => a + b, 0) / arr.length;\n      return [avg(positions.map((d) => d[0])), avg(positions.map((d) => d[1]))];\n    }\n    const position = clusterPositions[clusterName];\n    return position || [dms.width / 2, dms.height / 2];\n  };\n\n  useEffect(() => {\n    cachedGroupPositions.current = {};\n  }, [dms.width, dms.height]);\n\n  useEffect(() => {\n    if (!data) return;\n    if (!dms.width) return;\n    if (!groupMeta) return;\n    // if (focusedItem) return;\n\n    if (simulation.current) {\n      simulation.current.stop();\n    }\n\n    const linkKeys = groupMeta[\"links\"];\n\n    let initialLinks = [];\n    data[groupType].map((d) => {\n      linkKeys.map(([key, tableName, typeOfLink]) => {\n        const targetIds = d[key] || [];\n        targetIds.forEach((targetId) => {\n          const id = `${tableName}--${targetId}`;\n          const target = data[tableName].find((d) => d[\"id\"] == id);\n          if (!target) return;\n          initialLinks.push({\n            source: d[\"id\"],\n            target: id,\n            index: initialLinks.length,\n            type: typeOfLink,\n          });\n        });\n      });\n    });\n\n    let nodes = flatten(\n      types.map((type) =>\n        data[type].map((d) => ({ ...d, type, isMain: type == groupType }))\n      )\n    ).filter(\n      (d) =>\n        d[\"type\"] == groupType ||\n        initialLinks.find((link) => link[\"target\"] == d[\"id\"])\n    );\n\n    // const spiralPositions = getSpiralPositions(\n    //   nodes.length,\n    //   baseCircleSize,\n    //   Math.sqrt(baseCircleSize) * 1,\n    //   Math.sqrt(baseCircleSize) * 0.56\n    // );\n\n    const getId = (d) => (typeof d == \"object\" ? d[\"id\"] : d);\n    const getMatches = (d = {}) => {\n      if (!d) return [];\n      let links = initialLinks.filter(\n        (link) =>\n          getId(link[\"target\"]) == d[\"id\"] || getId(link[\"source\"]) == d[\"id\"]\n      );\n      // grab the investment targets as well\n      const investments = new Set(\n        links\n          .map((d) => getId(d[\"target\"]))\n          .filter((d) => d.startsWith(\"Investments--\"))\n      );\n\n      links = [\n        ...links,\n        ...initialLinks.filter(\n          (link) =>\n            investments.has(getId(link[\"target\"])) ||\n            investments.has(getId(link[\"source\"]))\n        ),\n      ];\n      return links;\n    };\n    const getMatchTypes = (d) => {\n      const matches = initialLinks.filter((link) => link[\"target\"] == d[\"id\"]);\n      return [...new Set(matches.map((d) => d[\"type\"]))].sort();\n    };\n\n    nodes = nodes\n      .map((d, i) => {\n        let cachedPosition = cachedGroupPositions.current[d[\"id\"]];\n        if (!cachedPosition)\n          cachedPosition = d.clusterPosition || [dms.width / 2, dms.height / 2];\n        const matchTypes = getMatchTypes(d).join(\"--\");\n        const color = d.isMain ? getColor(d) : accentColors[1];\n        const clusterPosition = getClusterPosition(d);\n        // {\n        //     from: fromColor,\n        //     to: toColor,\n        //     \"from--to\": \"url(#from-to)\",\n        //   }[matchTypes] || \"#95afc0\";\n        return {\n          ...d,\n          // x: dms.width / 2 + spiralPositions[i].x,\n          // y: dms.height / 2 + spiralPositions[i].y,\n          // x: cachedPosition[0],\n          // y: cachedPosition[1],\n          r:\n            (d[\"type\"] == groupType\n              ? baseCircleSize * 1.5\n              : baseCircleSize * 0.7) * getSize(d),\n          numberOfLinks: getMatches(d).length,\n          color,\n          matchTypes,\n          clusterPosition,\n          x: clusterPosition[0],\n          y: clusterPosition[1],\n        };\n      })\n      .sort((a, b) => b.numberOfLinks - a.numberOfLinks);\n    nodes = nodes.map((node) => ({\n      ...node,\n      linkedNodeIds: node.isMain\n        ? []\n        : [\n          ...new Set(\n            getMatches(node).map(\n              (d) => [d.source, d.target].filter((d) => d != node.id)[0]\n            )\n          ),\n        ],\n    }));\n\n    const newFocusedNode = focusedNode || nodes.find((d) => d.isMain);\n    if (!hoveredItem && groupType == \"Actors\") {\n      onHoverItem(newFocusedNode);\n    }\n    if (newFocusedNode) setFocusedNodeId(newFocusedNode[\"id\"]);\n\n    // filter to just 2nd & 3rd relatives\n    if (groupType == \"Actors\") {\n      const matchingLinks = getMatches(newFocusedNode);\n      const matchingIds = new Set([\n        ...matchingLinks.map((d) => d[\"source\"]),\n        ...matchingLinks.map((d) => d[\"target\"]),\n      ]);\n      const nextLevelMatchingLinks = initialLinks.filter(\n        (link) => matchingIds.has(link.target) || matchingIds.has(link.source)\n      );\n      const nextLevelMatchingIds = new Set([\n        ...nextLevelMatchingLinks.map((d) => d[\"source\"]),\n        ...nextLevelMatchingLinks.map((d) => d[\"target\"]),\n      ]);\n      const getDistanceFromFocusedNode = (d) =>\n        d.id == newFocusedNode.id ? 0 : matchingIds.has(d.id) ? 1 : 2;\n      const isAttachedToFocusedNode = (d) => nextLevelMatchingIds.has(d);\n      nodes = nodes\n        .filter((d) => isAttachedToFocusedNode(d[\"id\"]))\n        .map((d) => ({ ...d, distance: getDistanceFromFocusedNode(d) }));\n      initialLinks = initialLinks.filter(\n        (link) =>\n          isAttachedToFocusedNode(link[\"source\"]) &&\n          isAttachedToFocusedNode(link[\"target\"])\n      );\n    }\n\n    tickIteration.current = 0;\n    links.current = [...initialLinks];\n    simulationData.current = [...nodes];\n    simulation.current = forceSimulation(simulationData.current)\n      .force(\n        \"x\",\n        forceX((d) => d.clusterPosition[0]).strength(\n          groupType == \"Actors\" ? 0.3 : (d) => (d.isMain ? 0.2 : 0)\n        )\n      )\n      .force(\n        \"y\",\n        forceY(\n          (d) =>\n            d.clusterPosition[1] +\n            (d.matchTypes == \"from\" ? -30 : d.matchTypes == \"to\" ? 30 : 0)\n        ).strength(groupType == \"Actors\" ? 0.3 : (d) => (d.isMain ? 0.2 : 0))\n      )\n      .force(\n        \"link\",\n        forceLink(links.current)\n          .id((d) => d[\"id\"])\n          .distance(baseCircleSize * 2.6)\n          .strength(0.4)\n      )\n      .force(\n        \"collide\",\n        forceCollide(\n          (d) =>\n            d[\"r\"] +\n            baseCircleSize *\n            (groupType == \"Actors\" ? 3 : 1.2) *\n            (d.isMain ? 1.3 : 0.6)\n        )\n          .strength(0.7)\n          // .iterations(groupType == \"Actors\" ? 10 : 6)\n          .iterations(1)\n      )\n      .alphaMin(0.001)\n      .alpha(groupType == \"Actors\" ? 0.1 : 1)\n      .on(\"tick\", onTick);\n  }, [\n    dms.width,\n    dms.height,\n    data,\n    groupType,\n    // !!focusedItem,\n    groupType == \"Actors\" ? focusedNode : \"\",\n  ]);\n\n  useEffect(() => {\n    if (groupType != \"Actors\") return;\n    if (!focusedNode) return;\n    onHoverItem(focusedNode);\n  }, [groupType == \"Actors\" ? focusedNode : \"\"]);\n\n  const groupBubbles =\n    groupType == \"Actors\"\n      ? []\n      : clusters.map(({ name, items = [] }) => {\n        const position = getClusterPosition(items[0]);\n        if (!position) return [];\n        const points = groups\n          .filter((d) => getClusterName(d) == name && d.isMain)\n          .map((d) => [d.x, d.y]);\n        let hull = polygonHull(points) || [];\n        if (!hull.length) hull = points;\n        const top = [\n          keepBetween(\n            points.map((d) => d[0]).reduce((a, b) => a + b, 0) /\n            points.length,\n            50,\n            dms.width - 50\n          ),\n          keepBetween(\n            Math.min(...points.map((d) => d[1])) - baseCircleSize * 5,\n            10,\n            dms.height - 10\n          ),\n        ];\n        return {\n          name,\n          path: hull.length\n            ? \"M\" + hull.map((d) => d.join(\" \")).join(\" L \") + \"Z\"\n            : \"\",\n          top,\n          position,\n        };\n      });\n\n  function onTick(d) {\n    const padding = 20;\n    let secondaryNodesOnNodeRunningCount = {};\n    const numberOfPositions = 5;\n    const spiralPositions = new Array(numberOfPositions)\n      .fill(0)\n      .map((_, i) =>\n        getPointFromAngleAndDistance(\n          (360 / numberOfPositions) * i,\n          baseCircleSize * 2\n        )\n      );\n    simulationData.current.forEach((d) => {\n      d[\"x\"] = keepBetween(\n        d[\"x\"],\n        d[\"r\"] + padding,\n        dms.width - d[\"r\"] - padding\n      );\n      d[\"y\"] = keepBetween(\n        d[\"y\"],\n        d[\"r\"] + padding,\n        dms.height - d[\"r\"] - padding\n      );\n      if (groupType != \"Actors\" && tickIteration.current < 20 && !d.isMain) {\n        let position = [dms.width / 2, dms.height / 2];\n        const linkedNodes = d.linkedNodeIds.map((link) =>\n          simulationData.current.find((d) => d.id == link)\n        );\n\n        if (linkedNodes.length > 1) {\n          position = polygonCentroid(linkedNodes.map((d) => [d.x, d.y]));\n        }\n        if (linkedNodes.length == 1 || Number.isNaN(position[0])) {\n          let linkedId = linkedNodes[0].id;\n          if (!secondaryNodesOnNodeRunningCount[linkedId])\n            secondaryNodesOnNodeRunningCount[linkedId] = 0;\n          const spiralPosition =\n            spiralPositions[\n            secondaryNodesOnNodeRunningCount[linkedId] %\n            spiralPositions.length\n            ];\n          position = [\n            linkedNodes[0].x + spiralPosition.x,\n            linkedNodes[0].y + spiralPosition.y,\n          ];\n          secondaryNodesOnNodeRunningCount[linkedId]++;\n        }\n        d[\"x\"] = position[0];\n        d[\"y\"] = position[1];\n      }\n    });\n    setGroups([...simulationData.current]);\n\n    cachedGroupPositions.current = {\n      ...cachedGroupPositions.current,\n      ...fromPairs(\n        groups.map((item) => [item[\"id\"], [item[\"x\"], item[\"y\"]]])\n      ),\n    };\n    tickIteration.current++;\n\n    // forceUpdate();\n    // setGroups(simulationData.current);\n  }\n\n  const updateTooltip = (item) => {\n    if (item) {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n        timeout.current = null;\n      }\n      onHoverItem(item);\n    } else {\n      timeout.current = setTimeout(() => {\n        onHoverItem(null);\n        timeout.current = null;\n      }, 300);\n    }\n  };\n\n  const getLinkPath = ({ source, target, type }) => {\n    const angle = getAngleFromPoints(source, target);\n    const reverseAngle = getAngleFromPoints(target, source);\n    const startDiff = getPointFromAngleAndDistance(angle, source.r + 2);\n    const targetDiff = getPointFromAngleAndDistance(reverseAngle, target.r + 2);\n    let points = [\n      [source.x - startDiff.x, source.y - startDiff.y],\n      [target.x - targetDiff.x, target.y - targetDiff.y],\n    ];\n    if (type == \"to\") points.reverse();\n    return `M ${points[0].join(\" \")} L ${points[1].join(\" \")}`;\n  };\n\n  const getLinkArrowPath = ({ source, target, type }) => {\n    const angle = getAngleFromPoints(source, target);\n    const reverseAngle = getAngleFromPoints(target, source);\n    const startDiff = getPointFromAngleAndDistance(angle, source.r + 2);\n    const targetDiff = getPointFromAngleAndDistance(reverseAngle, target.r + 2);\n    let points = [\n      [source.x - startDiff.x, source.y - startDiff.y],\n      [target.x - targetDiff.x, target.y - targetDiff.y],\n    ];\n    if (type == \"to\") points.reverse();\n    const targetPoint = points[0]\n    const arrowWidth = 5\n    const arrowHeight = 3\n    const arrowPoints = [\n      [-arrowWidth, arrowHeight * 2],\n      [arrowWidth, arrowHeight * 2],\n      [0, 0],\n    ]\n\n    return svgpath(`M ${arrowPoints.map(d => d.join(\" \")).join(\" L \")}`)\n      .rotate((type == \"to\" ? reverseAngle : angle) + 90)\n      .translate(...targetPoint)\n      .toString()\n  };\n\n  const isInHoveredPointNetwork = (item, source) => {\n    if (item.id == hoveredItem.id) return 1;\n    const inNetworkMatches = links.current.filter(\n      (d) => d.source.id == hoveredItem.id || d.target.id == hoveredItem.id\n    );\n    const doesHaveAMatch = !!inNetworkMatches.find(\n      (d) =>\n        (d.target.id == item.id || d.source.id == item.id) &&\n        (!source || d.source.id == source.id)\n    );\n    return doesHaveAMatch ? 0.9 : 0.13;\n  };\n\n  const getItemOpacity = (item, source = null) => {\n    if (searchTerm)\n      return item.label.toLowerCase().includes(searchTerm) ? 1 : 0.13;\n    if (Number.isFinite(item.distance)) {\n      return [1, 0.9, 0.3][item.distance];\n    }\n    if (hoveredItem) return isInHoveredPointNetwork(item, source);\n    if (!activeFilters.length) return 1;\n\n    const unsatisifiedActiveFilters = activeFilters.filter(\n      ({ type, value: filterValue }) => {\n        const value = getFilterFromItem(item, type);\n        if (!value.length) return true;\n        if (source) {\n          const sourceValue = getFilterFromItem(source, type);\n          if (!sourceValue.includes(filterValue)) return true;\n          return false;\n        }\n        if (value.includes(filterValue)) return false;\n        return true;\n      }\n    );\n    return unsatisifiedActiveFilters.length ? 0.13 : 1;\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect\")\n    const ctx = canvasElement.current.getContext(\"2d\");\n    scaleCanvas(canvasElement.current, ctx, dms.width, dms.height)\n  }, [dms.width, dms.height])\n\n  const onZoom = (diff) => {\n    const newZoom = Math.max(0.1, Math.min(zoom.current * diff, 10));\n    const zoomDiff = newZoom / zoom.current;\n    const ctx = canvasElement.current.getContext(\"2d\");\n    ctx.translate(-topLeftCornerPosition[0], -topLeftCornerPosition[1]);\n    ctx.scale(zoomDiff, zoomDiff);\n    zoom.current = newZoom;\n    ctx.translate(topLeftCornerPosition[0], topLeftCornerPosition[1]);\n  }\n\n  const onPan = (diff) => {\n    const ctx = canvasElement.current.getContext(\"2d\");\n    const newTopLeftCornerPosition = [\n      topLeftCornerPosition[0] + diff[0],\n      topLeftCornerPosition[1] + diff[1],\n    ];\n    const topLeftCornerDiff = [\n      (newTopLeftCornerPosition[0] - topLeftCornerPosition[0]),\n      (newTopLeftCornerPosition[1] - topLeftCornerPosition[1]),\n    ];\n    setTopLeftCornerPosition(newTopLeftCornerPosition);\n    ctx.translate(...topLeftCornerDiff);\n  }\n\n  useKeyPress(e => {\n    const panMovement = {\n      \"ArrowLeft\": [-dms.width * 0.1, 0],\n      \"ArrowRight\": [dms.width * 0.1, 0],\n      \"ArrowUp\": [0, dms.height * 0.1],\n      \"ArrowDown\": [0, -dms.height * 0.1],\n    }[e.key];\n    if (panMovement) {\n      onPan(panMovement);\n      return\n    }\n\n    if (!e.ctrlKey && !e.metaKey) return\n    if (e.key === \"=\") {\n      onZoom(1.1)\n      e.stopPropagation()\n      e.preventDefault()\n    } else if (e.key === \"-\") {\n      onZoom(0.9)\n      e.stopPropagation()\n      e.preventDefault()\n    }\n  })\n\n  const onScroll = e => {\n    const delta = e.deltaY\n    onZoom(delta > 0 ? 0.9 : 1.1)\n  }\n\n  const onDraw = () => {\n    const ctx = canvasElement.current.getContext(\"2d\");\n    ctx.clearRect(\n      -topLeftCornerPosition[0] * zoom.current * 2,\n      -topLeftCornerPosition[1] * zoom.current * 2,\n      (dms.width + topLeftCornerPosition[0]) * zoom.current * 2,\n      (dms.height + topLeftCornerPosition[1]) * zoom.current * 2\n    );\n    ctx.clearRect(0, 0, dms.width, dms.height);\n\n    ctx.fillStyle = \"#fff\"\n    ctx.strokeStyle = \"#fff\"\n    ctx.lineJoin = \"round\"\n    ctx.globalAlpha = 1\n    groupBubbles.forEach(({ name, path, top }) => {\n      ctx.lineWidth = baseCircleSize / 7 * 36\n      drawShape(ctx, path)\n    })\n\n    ctx.strokeStyle = \"#a8a4a4\"\n    ctx.fillStyle = \"transparent\"\n    ctx.lineDashOffset = dashOffset\n    links.current.forEach(link => {\n      ctx.strokeStyle = \"#a8a4a4\"\n      const pathDString = getLinkPath(link)\n      const opacity = getItemOpacity(link.target, link.source)\n      ctx.globalAlpha = opacity\n\n      ctx.lineWidth = 1\n      drawShape(ctx, pathDString)\n\n      if (link[\"type\"] !== \"equal\") {\n        ctx.strokeStyle = \"transparent\"\n        ctx.fillStyle = \"#a8a4a4\"\n        const arrowDString = getLinkArrowPath(link)\n        drawShape(ctx, arrowDString)\n\n        ctx.fillStyle = \"transparent\"\n        ctx.strokeStyle = \"#fff\"\n        ctx.globalCompositeOperation = \"color-dodge\"\n        ctx.globalAlpha = 0.7\n        ctx.setLineDash([8, 6])\n        drawShape(ctx, pathDString)\n\n      }\n      ctx.setLineDash([])\n      ctx.globalAlpha = 1\n      ctx.globalCompositeOperation = \"normal\"\n\n\n    })\n    setDashOffset(d => d + 3)\n\n    groups.forEach(item => {\n      const x = item.x\n      const y = item.y\n\n      ctx.globalAlpha = getItemOpacity(item)\n\n      if (groupType === \"Actors\" &&\n        item[\"id\"] === (focusedNode || {})[\"id\"]) {\n        ctx.fillStyle = \"white\"\n        ctx.beginPath();\n        ctx.arc(x, y, item.r * 1.7, 0, 2 * Math.PI, false)\n        ctx.fill()\n      }\n\n      const shape = item[\"type\"] == \"Actors\" &&\n        item[\"Person or Org\"] == \"Organization\"\n        ? typeShapes[\"Organizations\"]\n        : typeShapes[item[\"type\"]]\n\n      if (typeof item[\"color\"] === \"string\") {\n        ctx.fillStyle = item[\"color\"]\n      } else if (item[\"color\"].length === 1) {\n        ctx.fillStyle = item[\"color\"][0]\n      } else {\n        const gradient = ctx.createLinearGradient(x + -item.r, 0, x + item.r, 0);\n        item[\"color\"].forEach(function (color, i) {\n          gradient.addColorStop(i / (item[\"color\"].length - 1), color);\n        })\n        ctx.fillStyle = gradient\n      }\n      ctx.strokeStyle = \"transparent\"\n      shape.shapes.forEach(shapePart => {\n        if (typeof shapePart !== \"string\") {\n          shapePart = svgpath(getCirclePath(shapePart.r))\n            .translate(shapePart.x, shapePart.y)\n            .toString()\n        }\n        const translatedPath = svgpath(shapePart)\n          .translate(shape.x, shape.y)\n          .scale(item[\"r\"] / 50)\n          .scale(shape[\"scale\"] || 1)\n          .translate(x, y)\n          .toString()\n        drawShape(ctx, translatedPath)\n      })\n\n    })\n\n    // ctx.globalAlpha = 1\n    // ctx.font = '13px sans-serif 700';\n    // groupBubbles.forEach(({ name, path, top }) => {\n    //   const text = (name || \"\").toUpperCase()\n\n    //   ctx.fillStyle = \"#afb9c5\"\n    //   // letterSpacing=\"0.16em\"\n    //   // align=\"center\"\n    //   ctx.fillText(text, top[0], top[1]);\n    // })\n  }\n\n  useInterval(onDraw, 50)\n\n  const onDrag = e => {\n    if (!e.clientX && !e.clientY) return\n    const diff = [\n      e.clientX - dragStartMousePosition.current[0],\n      e.clientY - dragStartMousePosition.current[1]\n    ]\n    dragStartMousePosition.current = [e.clientX, e.clientY]\n    onPan(diff)\n  }\n  const onDragThrottle = throttle(onDrag, 100)\n\n  return (\n    <div\n      ref={ref}\n      className={`NetworkBubbles NetworkBubbles--${activeFilters.length || searchTerm ? \"is\" : \"is-not\"\n        }-hovering`}\n    >\n      <div className=\"NetworkBubbles__wrapper\">\n        <canvas ref={canvasElement} width={dms.width} height={dms.height} />\n\n        <div className=\"NetworkBubbles__drag-layer\"\n          draggable=\"true\"\n          onWheel={onScroll}\n          onDragStart={e => {\n            dragStartMousePosition.current = [e.clientX, e.clientY]\n            startTopLeftCornerPosition.current = topLeftCornerPosition\n          }}\n          onDrag={onDragThrottle} />\n\n        <svg className=\"NetworkBubbles__overlay\"\n          width={dms.width}\n          height={dms.height}\n          viewBox={[\n            -topLeftCornerPosition[0],\n            -topLeftCornerPosition[1],\n            dms.width / zoom.current,\n            dms.height / zoom.current,\n          ].join(\" \")}>\n          {groupBubbles.map(({ name, top }, i) => (\n            <text\n              key={name}\n              className=\"NetworkBubbles__cluster-name\"\n              x={top[0]}\n              y={top[1]}\n            // style={{\n            //   transform: `translate(calc(${top[0]}px - 50%), ${top[1]}px)`,\n            // }}\n            >\n              {name || \"\"}\n            </text>\n          ))}\n\n          {groups.map((item) => {\n            const r = item[\"r\"] * 1.6\n            const opacity = getItemOpacity(item)\n\n            return (\n              <>\n                {groupType === item[\"type\"] && (\n                  <g className=\"NetworkBubbles__annotation-text\" style={{\n                    ...move(item[\"x\"], item[\"y\"]),\n                    opacity,\n                  }}>\n                    <CircleText r={item[\"r\"] + 6}>\n                      {truncate(item[\"label\"], Math.floor(item[\"r\"] * 0.36))}\n                    </CircleText>\n                  </g>\n                )}\n\n                <rect className=\"NetworkBubbles__mouse-target\"\n                  x={item[\"x\"] - r}\n                  y={item[\"y\"] - r}\n                  width={r * 2}\n                  height={r * 2}\n                  fill=\"transparent\"\n\n                  //   style={{\n                  //   ...move(item[\"x\"] - r, item[\"y\"] - r),\n                  //   width: r * 2,\n                  //   height: r * 2,\n\n                  // }}\n\n                  onMouseEnter={() => updateTooltip(item)}\n                  onMouseLeave={() =>\n                    groupType == \"Actors\"\n                      ? updateTooltip(focusedNode)\n                      : updateTooltip(null)\n                  }\n                  onClick={() =>\n                    groupType == \"Actors\"\n                      ? setFocusedNodeId(item[\"id\"])\n                      : onFocusItem(item[\"id\"])\n                  }\n                />\n              </>\n            )\n          })}\n        </svg>\n\n        <div className=\"NetworkBubbles__controls\">\n          <button className=\"NetworkBubbles__control\" onClick={() => onPan([0, -dms.height * 0.1])}>\n            <Icon name=\"arrow\" size=\"s\" direction=\"n\" />\n          </button>\n          <div className=\"NetworkBubbles__control-row\">\n\n            <button className=\"NetworkBubbles__control\" onClick={() => onPan([-dms.width * 0.1, 0])}>\n              <Icon name=\"arrow\" size=\"s\" direction=\"w\" />\n            </button>\n            <button className=\"NetworkBubbles__control\" onClick={() => onPan([dms.width * 0.1, 0])}>\n              <Icon name=\"arrow\" size=\"s\" direction=\"e\" />\n            </button>\n          </div>\n          <button className=\"NetworkBubbles__control\" onClick={() => onPan([0, dms.height * 0.1])}>\n            <Icon name=\"arrow\" size=\"s\" direction=\"s\" />\n          </button>\n          <button className=\"NetworkBubbles__control\" onClick={() => onZoom(0.9)}>\n            <Icon name=\"minus\" size=\"s\" />\n          </button>\n          <button className=\"NetworkBubbles__control\" onClick={() => onZoom(1.1)}>\n            <Icon name=\"plus\" size=\"s\" />\n          </button>\n\n        </div>\n\n        {/* {groups && (\n        <>\n          {/* {topLeftDot && (\n              <div\n                className=\"NetworkBubbles__annotation\"\n                style={move(\n                  topLeftDot[\"position\"][0] + topLeftGroup[\"x\"],\n                  topLeftDot[\"position\"][1] + topLeftGroup[\"y\"]\n                )}\n              >\n                <svg\n                  className=\"NetworkBubbles__annotation-line\"\n                  viewBox=\"0 0 1 1\"\n                  preserveAspectRatio=\"none\"\n                >\n                  <path\n                    vectorEffect=\"non-scaling-stroke\"\n                    d=\"M 0 0 C 0 0.5 0.5 1 1 1\"\n                  ></path>\n                </svg>\n                <div className=\"NetworkBubbles__annotation-text\">\n                  Each dot is a Item\n                  <br />\n                  <i>hover to see details</i>\n                </div>\n              </div>\n            )}\n        <Stage width={dms.width} height={dms.height}>\n        <Layer>\n      {/* <defs>\n                <linearGradient id={`from-to`}>\n                  {[fromColor, toColor].map((color, i) => (\n                    <stop key={i} stopColor={color} offset={i * 100 + \"%\"} />\n                  ))}\n                </linearGradient>\n\n                {contributionAreaColorCombos.map(({ slug, colors }) => (\n                  <linearGradient key={slug} id={slug}>\n                    {colors.map((color, i) => (\n                      <stop key={i} stopColor={color} offset={i * 100 + \"%\"} />\n                    ))}\n                  </linearGradient>\n                ))}\n\n                <marker\n                  id=\"NetworkBubbles__arrow\"\n                  className=\"NetworkBubbles__arrow\"\n                  viewBox=\"0 0 10 10\"\n                  refX=\"5\"\n                  refY=\"5\"\n                  markerWidth=\"12\"\n                  markerHeight=\"12\"\n                  orient=\"auto-start-reverse\"\n                >\n                  <path d=\"M 0 1 L 6 5 L 0 9 z\" />\n                </marker>\n\n                <filter\n                  id=\"noise\"\n                  x={-dms.width}\n                  y={-dms.height}\n                  // width=\"600%\"\n                  // height=\"600%\"\n                  width={dms.width * 2}\n                  height={dms.height * 2}\n                >\n                  <feTurbulence\n                    baseFrequency=\"0.03 0.03\"\n                    result=\"NOISE\"\n                    numOctaves=\"2\"\n                  ></feTurbulence>\n                  <feDisplacementMap\n                    in=\"SourceGraphic\"\n                    in2=\"NOISE\"\n                    scale=\"13\"\n                    xChannelSelector=\"R\"\n                    yChannelSelector=\"R\"\n                  ></feDisplacementMap>\n                </filter>\n              </defs>\n\n            {groupBubbles.map(({ name, path, top }, i) => (\n              <Shape\n                key={name}\n                // className={`NetworkBubbles__cluster`}\n\n                strokeWidth={baseCircleSize * 7}\n                fill=\"#fff\"\n                stroke=\"#fff\"\n                lineJoin=\"round\"\n                // stroke-linejoin=\"round\"\n                // filter=\"url(#noise)\"\n                sceneFunc={sceneFunctionDrawShape(path)}\n              />\n            ))}\n\n            {links.current.map((link, i) => {\n              const pathDString = getLinkPath(link)\n              const opacity = getItemOpacity(link.target, link.source)\n              return (\n                <Group key={i}>\n                  <Shape\n                    className={`NetworkBubbles__link NetworkBubbles__link--${link[\"type\"]}`}\n                    fill=\"none\"\n                    stroke=\"#a8a4a4\"\n                    strokeWidth={1}\n                    lineJoin=\"round\"\n                    sceneFunc={sceneFunctionDrawShape(pathDString)}\n                    markerStart={\n                      link[\"type\"] == \"equal\"\n                        ? null\n                        : \"url(#NetworkBubbles__arrow)\"\n                    }\n                    opacity={opacity}\n                  />\n                  {link[\"type\"] !== \"equal\" && (\n                    // todo: animate path2D like NetworkBubbles__link__pulse\n                    <Shape\n                      fill=\"none\"\n                      stroke=\"#a8a4a4\"\n                      strokeWidth={2.7}\n                      lineJoin=\"round\"\n                      // mix-blend-mode: color-dodge;\n                      sceneFunc={sceneFunctionDrawShape(pathDString)}\n                      opacity={opacity}\n                    />\n                  )}\n                </Group>\n              )\n            })}\n\n            {groups.map((item) => (\n              <Group\n                key={item[\"id\"]}\n                className={`NetworkBubbles__group-g`}\n                x={item[\"x\"]}\n                y={item[\"y\"]}\n                opacity={getItemOpacity(item)}\n\n                onMouseEnter={e => {\n                  // style stage container:\n                  const container = e.target.getStage().container();\n                  container.style.cursor = \"pointer\";\n                }}\n                onMouseLeave={e => {\n                  const container = e.target.getStage().container();\n                  container.style.cursor = \"default\";\n                }}\n                onClick={() =>\n                  groupType == \"Actors\"\n                    ? setFocusedNodeId(item[\"id\"])\n                    : onFocusItem(item[\"id\"])\n                }\n              >\n                <Group\n                  onMouseEnter={() => updateTooltip(item)}\n                  onMouseLeave={() =>\n                    svg>= \"Actors\"\n                      ? updateTooltip(focusedNode)\n                      : updateTooltip(null)\n                  }\n                >\n                  <Circle\n                    fill={\n                      groupType == \"Actors\" &&\n                        item[\"id\"] == (focusedNode || {})[\"id\"]\n                        ? \"white\"\n                        : \"transparent\"\n                    }\n                    r={item[\"r\"] * 1.6}\n                  />\n                  <Group\n                  >\n                    {item[\"type\"] == \"Actors\" &&\n                      item[\"Person or Org\"] == \"Organization\"\n                      ? typeShapes[\"Organizations\"](item[\"color\"])\n                      : typeShapes[item[\"type\"]](item[\"color\"])}\n                  </Group>\n                </Group>\n\n                {/* {groupType == item[\"type\"] && (\n                    <CircleText r={item[\"r\"] + 6}>\n                      {truncate(item[\"label\"], Math.floor(item[\"r\"] * 0.36))}\n                    </CircleText>\n                  )}\n              </Group>\n            ))}\n            {groupBubbles.map(({ name, path, top }, i) => (\n              <Text\n                key={name}\n                x={top[0]}\n                y={top[1]}\n                fill=\"#d4b46b\"\n                fontWeight=\"700\"\n                letterSpacing=\"0.16em\"\n                align=\"center\"\n                text={(name || \"\").toUpperCase()}\n              />\n            ))}\n          </Layer>\n        </Stage>\n      </>\n      )}*/}\n      </div>\n    </div >\n  );\n};\n\nexport default NetworkBubbles;\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n}\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n\nfunction drawShape(ctx, path) {\n  const path2d = new Path2D(path);\n  ctx.fill(path2d);\n  ctx.stroke(path2d);\n}\n\nfunction getCirclePath(r) {\n  return [\n    [\"M\", 0, r].join(\" \"),\n    [\"A\", r, r, 0, 0, 1, 0, -r].join(\" \"),\n    [\"A\", r, r, 0, 0, 1, 0, r].join(\" \"),\n  ].join(\" \")\n}\n","import React, { useMemo } from \"react\";\n\nimport Icon from \"./../Icon/Icon\";\n\nimport {\n  fieldLabels,\n  contributionAreaColors,\n  contributionAreaDescriptions,\n} from \"./../../constants\";\nimport { flatten, toTitleCase } from \"./../../utils\";\n\nimport \"./NetworkFilters.css\";\n\nconst NetworkFilters = ({ data, filters, activeFilters, onUpdateFilters }) => {\n  const parsedFilters = useMemo(\n    () =>\n      filters.map((filter) => {\n        const values = [\n          ...new Set(flatten(data.map((d) => getFilterFromItem(d, filter)))),\n        ];\n        return { name: filter, values };\n      }),\n    [data, filters]\n  );\n\n  const onClickItem = (type, value) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    if (!activeFilterOfType) {\n      onUpdateFilters([...activeFilters, { type, value }]);\n      return;\n    }\n    const otherActiveFilters = activeFilters.filter(\n      (filter) => filter.type != type\n    );\n\n    const isActiveFilter = activeFilterOfType[\"value\"] == value;\n    const newFilters = isActiveFilter\n      ? otherActiveFilters\n      : [...otherActiveFilters, { type, value }];\n\n    onUpdateFilters(newFilters);\n  };\n  // const onMouseLeaveItem = (type, item) => {\n  //   onUpdateFilters(type, item);\n  // };\n\n  const getFilterState = (type, value) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    if (!activeFilterOfType) return \"normal\";\n    return activeFilterOfType[\"value\"] == value ? \"selected\" : \"unselected\";\n  };\n\n  return (\n    <div className=\"NetworkFilters\">\n      {parsedFilters.map(({ name, values }) => (\n        <div className=\"NetworkFilters__filter\" key={name}>\n          <h6>{fieldLabels[name] || name}</h6>\n          {values.map((value) => {\n            const state = getFilterState(name, value);\n            return (\n              <div\n                className={`NetworkFilters__filter__item NetworkFilters__filter__item--is-${state}`}\n                key={value}\n                onClick={() => onClickItem(name, value)}\n                style={\n                  name == \"mainContributionArea\"\n                    ? { \"--override-color\": contributionAreaColors[value] }\n                    : {}\n                }\n                // onMouseLeave={() => onMouseLeaveItem(name, null)}\n              >\n                {toTitleCase(value)}\n                {state == \"selected\" && <Icon name=\"x\" size=\"s\" />}\n                {name === \"mainContributionArea\" && (\n                  <div className=\"NetworkFilters__filter__item__info\">\n                    <b>{toTitleCase(value)}</b>:{\" \"}\n                    {contributionAreaDescriptions[value]}.\n                    <br />\n                    <br />\n                    <i>\n                      These are CCI's working definitions, subject to change,\n                      and we note there is still ample industry debate on the\n                      delineation of these framings.\n                    </i>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default NetworkFilters;\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import React, { useMemo, useState } from \"react\";\n\nimport Icon from \"./../Icon/Icon\";\n\nimport { fieldLabels } from \"./../../constants\";\nimport { flatten, toTitleCase } from \"./../../utils\";\n\nimport \"./NetworkList.css\";\n\nconst NetworkList = ({ data, filters, focusedNode, setFocusedNodeId }) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const isItemActive = (item) => {\n    if (!activeFilters.length) return true;\n\n    const unsatisifiedActiveFilters = activeFilters.filter(\n      ({ type, value: filterValue }) => {\n        const value = getFilterFromItem(item, type);\n        if (!value.length) return true;\n        if (value.includes(filterValue)) return false;\n        return true;\n      }\n    );\n    return !unsatisifiedActiveFilters.length;\n  };\n\n  const parsedFilters = useMemo(\n    () =>\n      filters.map((filter) => {\n        const values = [\n          ...new Set(flatten(data.map((d) => getFilterFromItem(d, filter)))),\n        ];\n        return { name: filter, values };\n      }),\n    [data, filters]\n  );\n\n  const onSetFilter = (type, value) => {\n    const otherActiveFilters = activeFilters.filter(\n      (filter) => filter.type != type\n    );\n    if (!value) {\n      setActiveFilters(otherActiveFilters);\n    } else {\n      setActiveFilters([...otherActiveFilters, { type, value }]);\n    }\n  };\n\n  const getFilterValue = (type) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    return activeFilterOfType ? activeFilterOfType[\"value\"] : null;\n  };\n\n  const [actors, organizations] = useMemo(\n    () => [\n      data\n        .filter((d) => d[\"Person or Org\"] != \"Organization\" && isItemActive(d))\n        .sort((a, b) => (b.label > a.label ? -1 : 1)),\n      data\n        .filter((d) => d[\"Person or Org\"] == \"Organization\" && isItemActive(d))\n        .sort((a, b) => (b.label > a.label ? -1 : 1)),\n    ],\n    [data, activeFilters]\n  );\n\n  return (\n    <div className=\"NetworkList\">\n      {parsedFilters.map(({ name, values }) => (\n        <div className=\"NetworkList__filter\" key={name}>\n          <select\n            className=\"NetworkList__select\"\n            value={getFilterValue(name) || \"\"}\n            onChange={(e) => {\n              onSetFilter(name, e.target.value);\n            }}\n          >\n            <option value=\"\">\n              - Filter list by {fieldLabels[name] || name} -\n            </option>\n            {values.map((value) => {\n              return (\n                <option key={value} value={value}>\n                  {toTitleCase(value)}\n                </option>\n              );\n            })}\n          </select>\n          {getFilterValue(name) && (\n            <button\n              className=\"NetworkList__clear\"\n              onClick={() => onSetFilter(name, null)}\n            >\n              <Icon name=\"x\" size=\"s\" />\n            </button>\n          )}\n        </div>\n      ))}\n\n      <div className=\"NetworkList__filter\">\n        <h6>Individuals</h6>\n        {actors.map((d) => {\n          const isSelected = d.id == (focusedNode || {}).id;\n          return (\n            <div\n              className={`NetworkList__filter__item NetworkList__filter__item--is-${\n                isSelected ? \"selected\" : \"unselected\"\n              }`}\n              key={d.id}\n              onClick={() => setFocusedNodeId(d[\"id\"])}\n              // onMouseLeave={() => onMouseLeaveItem(name, null)}\n            >\n              {d.label}\n            </div>\n          );\n        })}\n\n        <br />\n        <h6>Organizations</h6>\n        {organizations.map((d) => {\n          const isSelected = d.id == (focusedNode || {}).id;\n          return (\n            <div\n              className={`NetworkList__filter__item NetworkList__filter__item--is-${\n                isSelected ? \"selected\" : \"unselected\"\n              }`}\n              key={d.id}\n              onClick={() => setFocusedNodeId(d[\"id\"])}\n              // onMouseLeave={() => onMouseLeaveItem(name, null)}\n            >\n              {d.label}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default NetworkList;\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import React from \"react\";\nimport { format } from \"d3\";\n\nimport { move, truncate } from \"./../../utils\";\nimport { typeColors } from \"./../../constants\";\n\nimport \"./NetworkTooltip.css\";\n\nconst NetworkTooltip = ({ data, groupType, isFocused, onFocus }) => {\n  return (\n    <div className={[\"NetworkTooltip\"].join(\" \")}>\n      <div className=\"NetworkTooltip__name\">\n        {!!data[\"year\"] && (\n          <div className=\"NetworkTooltip__year\">{data[\"year\"]}</div>\n        )}\n        {data[\"label\"]}\n      </div>\n      {/* <div className=\"NetworkTooltip__text\">{data[\"type\"].slice(0, -1)}</div> */}\n      {data[\"Amount\"] && (\n        <div className=\"NetworkTooltip__text\">\n          ${format(\",.0f\")(data[\"Amount\"])}\n        </div>\n      )}\n      {data[\"mainContributionArea\"] && (\n        <div className=\"NetworkTooltip__text\">\n          {data[\"mainContributionArea\"].join(\" & \")}\n        </div>\n      )}\n      {data[\"Entity Type\"] && (\n        <div className=\"NetworkTooltip__text\">\n          {data[\"Entity Type\"].join(\", \")}\n        </div>\n      )}\n      {/* {data[\"Focus\"] && (\n        <div className=\"NetworkTooltip__text\">{data[\"Focus\"]}</div>\n      )} */}\n      {/* <div className=\"NetworkTooltip__info \">\n        <span className={`NetworkTooltip__info actor actor--${data[\"actor\"]}`}>\n          {data[\"actors\"].join(\", \").replace(new RegExp(\" -- \", \"g\"), \", \")}\n        </span>\n      </div>\n      <div className={`NetworkTooltip__info`}>\n        {(data[\"Mission Type\"] || [])\n          .map((d) => d.toLowerCase().trim())\n          .map((type) => (\n            <span\n              key={type}\n              className=\"NetworkTooltip__type-name\"\n              style={{ color: typeColors[type] }}\n            >\n              {type}\n            </span>\n          ))}\n      </div>\n       */}\n      {/* <svg className=\"NetworkTooltip__arrow\" viewBox=\"0 0 3 2\">\n        <path d=\"M 1 0 L 3 0 L 0 2 Z\" fill=\"white\"></path>\n      </svg> */}\n\n      {groupType == \"Actors\" ? (\n        isFocused ? (\n          <button\n            className=\"NetworkTooltip__more\"\n            onClick={() => onFocus(data[\"id\"])}\n          >\n            More info\n          </button>\n        ) : (\n          <div className=\"NetworkTooltip__note\">Click to center</div>\n        )\n      ) : (\n        <div className=\"NetworkTooltip__note\">Click for more info</div>\n      )}\n    </div>\n  );\n};\nexport default NetworkTooltip;\n","import React from \"react\";\n\nimport { statusColors } from \"./../../constants\";\n\nimport \"./StatusPill.css\";\n\nconst StatusPill = ({ status }) => {\n  return (\n    <div\n      className=\"StatusPill\"\n      style={{\n        \"--status-color\": statusColors[status],\n        background: `${statusColors[status]}33`,\n      }}\n    >\n      {status}\n    </div>\n  );\n};\nexport default StatusPill;\n","import React from \"react\";\nimport { format } from \"d3-format\";\n\nimport StatusPill from \"./StatusPill\";\nimport Icon from \"./../Icon/Icon\";\n\nimport \"./NetworkModal.css\";\n\nconst NetworkModal = ({ info = {}, backCountry, backMitigationArea, onChangeState, onClose }) => {\n  console.log(backMitigationArea)\n  return (\n    <>\n      <div className=\"NetworkModal__background\" onClick={onClose}></div>\n      <div className=\"NetworkModal\">\n        <div className=\"NetworkModal__content\">\n          {!!backCountry && onChangeState && (<div className=\"NetworkModal__back\" onClick={() => {\n            onChangeState(\"country\", backCountry)\n            onChangeState(\"mitigation-area\", backMitigationArea)\n            onChangeState(\"back-country\", null)\n            onChangeState(\"back-mitigation-area\", null)\n            onChangeState(\"item\", null)\n          }}>\n            <Icon size=\"s\" name=\"arrow\" direction=\"w\" />\n          </div>\n          )}\n          <div className=\"NetworkModal__close\" onClick={onClose}>\n            <Icon size=\"s\" name=\"x\" />\n          </div>\n\n          <div className=\"NetworkModal__name\">\n            {info[\"label\"]}\n            {/* <div className=\"NetworkModal__year\">{info[\"year\"]}</div> */}\n          </div>\n\n          <div className=\"NetworkModal__status\">\n            {!!info[\"Status\"] && <StatusPill status={info[\"Status\"][0]} />}\n          </div>\n\n          {info[\"Link to More Info on Entity (bio or overview page)\"] && (\n            <a\n              href={info[\"Link to More Info on Entity (bio or overview page)\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )}\n          {info[\"URL for Context\"] && (\n            <a\n              href={info[\"URL for Context\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )}\n          {info[\"Big/Latest News\"] && (\n            <a\n              href={info[\"Big/Latest News\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              Latest news\n            </a>\n          )}\n\n          {info[\"Amount\"] && (\n            <div className=\"NetworkModal__info\">\n              <div className=\"NetworkModal__label\">Amount:</div>$\n              {format(\",.0f\")(info[\"Amount\"])}\n            </div>\n          )}\n          {[\n            \"Focus\",\n            \"Date\",\n            \"Topical Contribution Area\",\n            \"Rate-Limiting Feature\",\n            \"Entity Type\",\n            \"Year founded / Born\",\n            \"Funded by\",\n            \"Enacted/Undertaken By\",\n            \"Number of People Involved (to 3 sig digits)\",\n            \"Directly Associated Orgs (e.g., employment/parent org):\",\n            \"Partners With\",\n            \"Enacting/Undertaking XYZ Interventions\",\n            \"Funding XYZ Interventions\",\n            \"Made XYZ Investment(s)\",\n            \"Received XYZ Investment(s)\",\n            // \"Amount\",\n            \"Source\",\n            \"Recipient\",\n            \"Directly Associated Orgs (e.g., employment/parent org)\",\n          ].map(\n            (key) =>\n              info[key] && (\n                <div className=\"NetworkModal__info\" key={info[key]}>\n                  <div className=\"NetworkModal__label\">\n                    {key.split(\" (\")[0]}:\n                  </div>\n                  {Array.isArray(info[key])\n                    ? info[key].map((d) => <div key={d}>{d}</div>)\n                    : info[key]}\n                </div>\n              )\n          )}\n          {/* {info[\"mainContributionArea\"] && (\n            <div className=\"NetworkModal__info\">\n              {info[\"mainContributionArea\"].join(\" & \")}\n            </div>\n          )} */}\n          {info[\"Intervention(s) being addressed:\"] &&\n            !!info[\"Intervention(s) being addressed:\"].filter((d) => d)\n              .length && (\n              <div className=\"NetworkModal__info\">\n                <div className=\"NetworkModal__label\">\n                  Interventions being addressed:\n                </div>\n\n                {info[\"Intervention(s) being addressed:\"].join(\", \")}\n              </div>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NetworkModal;\n","import { max } from \"d3-array\";\nimport { scaleLog } from \"d3-scale\";\n\nimport { fromPairs } from \"./utils\";\nimport { data } from \"./constants\";\n\nconst amountSizeScale = scaleLog()\n  .domain([1, max(data[\"Investments\"], (d) => d[\"Amount\"])])\n  .range([0.01, 1.2])\n  .clamp(true);\n\nexport const groupOptions = [\n  {\n    label: \"Interventions\",\n    id: \"Interventions\",\n    pluralNoun: \"interventions\",\n    key: \"Interventions\",\n    accessor: (d) => d[\"Interventions\"],\n    getSize: (d) => 0.8,\n    clusterBy: \"mainContributionArea\",\n    getClusterName: (d) => d[\"mainContributionArea\"],\n    // getColor: (d) => contributionAreaColors[d[\"mainContributionArea\"]],\n    filters: [\n      \"mainContributionArea\",\n      \"Rate-Limiting Feature\",\n      \"Type (approach)\",\n    ],\n    links: [\n      [\"Associated Investments\", \"Investments\", \"equal\"],\n      [\"Associated Regulations\", \"Regulations\", \"equal\"],\n      [\"Enacted/Undertaken By\", \"Actors\", \"equal\"],\n      [\"Funded by\", \"Actors\", \"equal\"],\n    ],\n  },\n  {\n    label: \"Investments\",\n    id: \"Investments\",\n    pluralNoun: \"investments\",\n    key: \"Investments\",\n    accessor: (d) => d[\"Investments\"],\n    clusterBy: \"mainContributionArea\",\n    getClusterName: (d) => d[\"mainContributionArea\"],\n    // getColor: (d) => contributionAreaColors[d[\"mainContributionArea\"]],\n    getSize: (d) => amountSizeScale(d[\"Amount\"]) || 0.8,\n    filters: [\"mainContributionArea\"],\n\n    links: [\n      [\"Source\", \"Actors\", \"from\"],\n      [\"Recipient\", \"Actors\", \"to\"],\n      [\"Intervention(s) being addressed:\", \"Actors\", \"equal\"],\n    ],\n  },\n  {\n    label: \"Actors\",\n    id: \"Actors\",\n    pluralNoun: \"actors\",\n    key: \"Actors\",\n    accessor: (d) => d[\"Actors\"],\n    // clusterBy: \"Person or Org\",\n    // getClusterName: (d) => {\n    //   return d[\"Person or Org\"];\n    // },\n    // getColor: (d) =>\n    //   ({\n    //     \"Individual Person\": \"var(--accent-3)\",\n    //     Organization: \"var(--accent-2)\",\n    //   }[d[\"Person or Org\"]]),\n    // clusterBy: \"Entity Type\",\n    // getClusterName: (d) => {\n    //   return (d[\"Entity Type\"] || [])[0];\n    // },\n    // getColor: (d) =>\n    //   ({\n    //     \"Individual Person\": \"#89b792\",\n    //     Organization: \"#4d405a\",\n    //   }[d]),\n    getSize: (d) =>\n      d.type != \"Actors\"\n        ? 1.7\n        : d[\"Person or Org\"] == \"Individual Person\"\n          ? 2.1\n          : ([\n            \"Under 10\",\n            \"10-50\",\n            \"50-100\",\n            \"100-500\",\n            \"500-1000\",\n            \"1000+\",\n          ].indexOf(d[\"Number of People Involved (to 3 sig digits)\"]) +\n            8) *\n          0.23,\n    filters: [\n      // \"mainContributionArea\",\n      // \"Enacting/Undertaking XYZ Interventions\",\n      \"Entity Type\",\n      // \"Status\",\n    ],\n\n    links: [\n      [\n        \"Directly Associated Orgs (e.g., employment/parent org):\",\n        \"Actors\",\n        \"equal\",\n      ],\n      [\"Partners With\", \"Actors\", \"equal\"],\n      [\"Enacting/Undertaking XYZ Interventions\", \"Interventions\", \"equal\"],\n      [\"Funding XYZ Interventions\", \"Interventions\", \"to\"],\n      [\"Made XYZ Investment(s)\", \"Investments\", \"to\"],\n      [\"Received XYZ Investment(s)\", \"Investments\", \"from\"],\n    ],\n  },\n  // {\n  //   label: \"Regulations\",\n  //   id: \"Regulations\",\n  //   pluralNoun: \"regulations\",\n  //   key: \"Regulations\",\n  //   accessor: (d) => d[\"Regulations\"],\n  //   links: [[\"Impacts the Following Interventions\", \"Interventions\", \"equal\"]],\n  // },\n];\nexport const groupOptionsById = fromPairs(\n  groupOptions.map((group) => [group[\"id\"], group])\n);\n","import React, { useState, useCallback, useMemo } from \"react\";\n\nimport Icon from \"./../Icon/Icon\";\nimport NetworkSearch from \"./NetworkSearch\";\nimport NetworkBubbles from \"./NetworkBubbles\";\nimport NetworkFilters from \"./NetworkFilters\";\nimport NetworkList from \"./NetworkList\";\nimport NetworkTooltip from \"./NetworkTooltip\";\nimport NetworkModal from \"./NetworkModal\";\n\nimport {\n  typeShapes,\n  relationships,\n  directions,\n  contributionAreaDescriptions,\n} from \"./../../constants\";\nimport { groupOptions, groupOptionsById } from \"./../../group-options\";\n\nimport \"./Network.css\";\n\nconst Network = ({\n  data,\n  groupType,\n  focusedItem,\n  searchTerm,\n  onChangeState,\n  focusedNode,\n}) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [hoveredItem, onHoverItem] = useState(null);\n  const [areFiltersShowing, setAreFiltersShowing] = useState(false);\n  const [isAboutShowing, setIsAboutShowing] = useState(false);\n\n  const groupMeta = groupOptionsById[groupType];\n\n  const onFocusItem = useCallback((newItem) => {\n    onChangeState(\"item\", newItem);\n  });\n\n  const setFocusedNodeId = useCallback((newItem) => {\n    onChangeState(\"focused\", newItem);\n  });\n\n  const setSearchTerm = (newTerm) => {\n    onChangeState(\"search\", newTerm);\n  };\n\n  const onCloseFocusedItem = useCallback(() => {\n    onFocusItem(null);\n  }, []);\n\n  const contributionAreaText = [\n    `There are three main contribution areas: <ul>`,\n    Object.keys(contributionAreaDescriptions)\n      .map(\n        (areaName) =>\n          `<li style=\"margin-top: 1em\"><b>${areaName}</b>: ${contributionAreaDescriptions[areaName]}</li>`\n      )\n      .join(\"\\n\"),\n    `</ul>`,\n    `<br />`,\n    `<i>These are CCI's working definitions, subject to change, and we note there is still ample industry debate on the delineation of these framings.</i>`,\n  ].join(\"\\n\");\n\n  const about = useMemo(() => {\n    return `These are the current ${groupType}, linked to their ${relationships[groupType]}. <em>${directions[groupType]}</em>`;\n  }, [groupType]);\n\n  return (\n    <div className=\"Network__wrapper\">\n      <div className=\"Network__main\">\n        <div\n          className={`Network__sidebar Network__sidebar--filters-${areFiltersShowing ? \"showing\" : \"hidden\"\n            } Network__sidebar--about-${isAboutShowing ? \"showing\" : \"hidden\"}`}\n        >\n          <div className=\"Network__sidebar__top\">\n            <h1 className=\"Network__title\">The Climate Change Industry</h1>\n            <div\n              className=\"Network__info\"\n              dangerouslySetInnerHTML={{ __html: about }}\n            />\n            <div className=\"Network__type\">\n              <div className=\"Network__toggle\">\n                {groupOptions.map(({ label, id }) => {\n                  const shape = typeShapes[id]\n                  return (\n                    <button\n                      key={id}\n                      className={`Network__toggle__button Network__toggle__button--is-${groupType == id ? \"selected\" : \"unselected\"\n                        }`}\n                      onClick={() => {\n                        setActiveFilters([]);\n                        setSearchTerm(null);\n                        onHoverItem(null);\n                        onChangeState(\"group\", id);\n                        setFocusedNodeId(null);\n                      }}\n                    >\n                      <svg viewBox=\"-75 -75 150 150\">\n                        <g transform={`translate(${shape.x}, ${shape.y})`}>\n                          {shape.shapes.map((shape, i) => (\n                            typeof shape === \"string\" ? (\n                              <path\n                                key={i}\n                                d={shape}\n                              />\n                            ) : (\n                              <circle\n                                key={i}\n                                cx={shape.x}\n                                cy={shape.y}\n                                r={shape.r}\n                              />\n                            )\n                          ))}\n                        </g>\n                      </svg>\n                      {label}\n                    </button>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Network__about\">\n            <h1>The Climate Change Industry</h1>\n            <div dangerouslySetInnerHTML={{ __html: about }} />\n            <br />\n            <div dangerouslySetInnerHTML={{ __html: contributionAreaText }} />\n\n            <button\n              className=\"Network__sidebar__close\"\n              onClick={() => setIsAboutShowing(false)}\n            >\n              <Icon name=\"x\" size=\"s\" />\n            </button>\n          </div>\n\n          <div className=\"Network__mobile-buttons\">\n            <button\n              className=\"Network__button Network__mobile-button\"\n              onClick={() => setAreFiltersShowing(true)}\n            >\n              <Icon name=\"controls\" />\n            </button>\n            <button\n              className=\"Network__button Network__mobile-button\"\n              onClick={() => setIsAboutShowing(true)}\n            >\n              <Icon name=\"info\" />\n            </button>\n          </div>\n\n          <h6 className=\"Network__sidebar__bottom-label\">\n            {groupType == \"Actors\" ? \"Filter by actor\" : \"Filter by\"}\n          </h6>\n\n          <div className=\"Network__sidebar__bottom\">\n            <button\n              className=\"Network__sidebar__close\"\n              onClick={() => setAreFiltersShowing(false)}\n            >\n              <Icon name=\"x\" size=\"s\" />\n            </button>\n            {groupType == \"Actors\" ? (\n              <div className=\"Network__sidebar__section Network__filters\">\n                <NetworkList\n                  data={data[groupType]}\n                  filters={groupMeta[\"filters\"]}\n                  {...{ focusedNode, setFocusedNodeId }}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"Network__sidebar__section Network__search\">\n                  <NetworkSearch {...{ data, searchTerm, setSearchTerm }} />\n                </div>\n                <div className=\"Network__sidebar__section Network__filters\">\n                  <NetworkFilters\n                    filters={groupMeta[\"filters\"]}\n                    {...{ activeFilters }}\n                    data={data[groupType]}\n                    onUpdateFilters={setActiveFilters}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"Network__bubbles\">\n          <NetworkBubbles\n            {...{\n              data,\n              groupType,\n              groupMeta,\n              activeFilters,\n              focusedItem,\n              onFocusItem,\n              hoveredItem,\n              onHoverItem,\n              focusedNode,\n              setFocusedNodeId,\n            }}\n            searchTerm={searchTerm.toLowerCase()}\n          />\n        </div>\n      </div>\n\n      {!!hoveredItem && (\n        <NetworkTooltip\n          data={hoveredItem}\n          groupType={groupType}\n          isFocused={hoveredItem[\"id\"] == focusedNode[\"id\"]}\n          onFocus={onFocusItem}\n        />\n      )}\n\n      {focusedItem && (\n        <NetworkModal info={focusedItem} onClose={onCloseFocusedItem} />\n      )}\n    </div>\n  );\n};\n\nexport default Network;\n","import React from \"react\";\nimport { format } from \"d3\";\n\nimport \"./MapTooltip.css\";\n\nconst countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\n\nconst MapTooltip = ({ data }) => {\n  console.log(data.relationships);\n  const relationships = data.relationships.map((d) => ({\n    ...d,\n    type: !d.dashGap ? \"collaboration\" : d.fromId === data.id ? \"from\" : \"to\",\n  }));\n  return (\n    <div className={[\"MapTooltip\"].join(\" \")}>\n      <div className=\"MapTooltip__name\">\n        {!!data[\"year\"] && (\n          <div className=\"MapTooltip__year\">{data[\"year\"]}</div>\n        )}\n        {data[\"label\"]}\n      </div>\n      {countryAccessor(data) && (\n        <div className=\"MapTooltip__text\">{countryAccessor(data)}</div>\n      )}\n      {data[\"Amount\"] && (\n        <div className=\"MapTooltip__text\">\n          ${format(\",.0f\")(data[\"Amount\"])}\n        </div>\n      )}\n      {data[\"mainContributionArea\"] && (\n        <div className=\"MapTooltip__text\">\n          {data[\"mainContributionArea\"].join(\" & \")}\n        </div>\n      )}\n      {data[\"Entity Type\"] && (\n        <div className=\"MapTooltip__text\">{data[\"Entity Type\"].join(\", \")}</div>\n      )}\n      {!!relationships.length && (\n        <div className=\"MapTooltip__text\">\n          {relationships.map((d) => (\n            <div key={d.id}>\n              {d.type === \"collaboration\"\n                ? \"Collaborates with\"\n                : d.type === \"from\"\n                  ? \"Invested in\"\n                  : \"Received investment from\"}{\" \"}\n              <b>{[d.toName, d.fromName].find((d) => d != data.label)}</b>\n            </div>\n          ))}\n        </div>\n      )}\n      {/* {data[\"Focus\"] && (\n        <div className=\"MapTooltip__text\">{data[\"Focus\"]}</div>\n      )} */}\n      {/* <div className=\"MapTooltip__info \">\n        <span className={`MapTooltip__info actor actor--${data[\"actor\"]}`}>\n          {data[\"actors\"].join(\", \").replace(new RegExp(\" -- \", \"g\"), \", \")}\n        </span>\n      </div>\n      <div className={`MapTooltip__info`}>\n        {(data[\"Mission Type\"] || [])\n          .map((d) => d.toLowerCase().trim())\n          .map((type) => (\n            <span\n              key={type}\n              className=\"MapTooltip__type-name\"\n              style={{ color: typeColors[type] }}\n            >\n              {type}\n            </span>\n          ))}\n      </div>\n       */}\n      {/* <svg className=\"MapTooltip__arrow\" viewBox=\"0 0 3 2\">\n        <path d=\"M 1 0 L 3 0 L 0 2 Z\" fill=\"white\"></path>\n      </svg> */}\n\n      <div className=\"MapTooltip__note\">Click for more info</div>\n    </div>\n  );\n};\nexport default MapTooltip;\n","import React, { Fragment, useMemo, useRef, useState } from \"react\";\n// import { MeshPhongMaterial, Color } from \"three\";\n\nimport countryShapes from \"./countries.json\";\nimport countryCentersMap from \"./country-centers.json\";\nimport { getSpiralPositions } from \"./../../utils\";\nimport Globe from \"react-globe.gl\";\n// import BlankMap from \"./BlankMap\";\nimport MapTooltip from \"./MapTooltip\";\nimport countryNamesMap from \"./countryNamesMap.json\"\nimport mapImageUrl from \"./map.png\";\n\nimport \"./Globe.css\";\nimport { contributionAreaColors, contributionAreas } from \"../../constants\";\n\nconst countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\nconst spiralPositions = getSpiralPositions(100, 5, 2, 1.1);\n\nconst getCentroid = (country) => countryCentersMap[country];\n\nconst GlobeWrapper = ({ allData, data, setFocusedItem, imageName }) => {\n  const [hoveredItem, setHoveredItem] = useState();\n  // const [blankMapTextureImage, setBlankMapTextureImage] = useState();\n  const globeElement = useRef();\n\n  // const canvasElement = useRef();\n\n  // const width = useMemo(() => Math.min(1400, dms.height * 1.3, dms.width), [\n  //   dms.width,\n  //   dms.height,\n  // ]);\n\n  // const getCentroid = (country) => {\n  //   const centroid = geoPath(projection).centroid(country);\n  //   return centroid;\n  // };\n\n  // const rScale = useMemo(\n  //   () =>\n  //     scaleSqrt()\n  //       .domain([0, Math.max(...data.map((d) => d[1].length))])\n  //       .range([0.1, width * 0.06]),\n  //   [width, data]\n  // );\n\n  // const globeMaterial = useMemo(() => {\n  //   if (!blankMapTextureImage) return;\n  //   const globeMaterial = new MeshPhongMaterial();\n  //   globeMaterial.specularMap = blankMapTextureImage;\n  //   globeMaterial.specular = new Color(\"grey\");\n  //   globeMaterial.shininess = 15;\n  //   return globeMaterial;\n  // }, [blankMapTextureImage]);\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     // wait for scene to be populated (asynchronously)\n  //     const directionalLight = globeElement.current\n  //       .scene()\n  //       .children.find((obj3d) => obj3d.type === \"DirectionalLight\");\n  //     directionalLight && directionalLight.position.set(1, 1, 1); // change light position to see the specularMap's effect\n  //   });\n  // }, []);\n\n  const onGlobeLoad = () => {\n    const scene = globeElement.current.scene();\n    // ambient light\n    scene.children[1].intensity = 1.36;\n    // directional light\n    scene.children[2].intensity = 0.1;\n\n    scene.rotation.y = 0.5 * Math.PI;\n    scene.rotation.x = 0.15 * Math.PI;\n  };\n\n  const xScale = 0.26;\n  const yScale = 0.2;\n\n  const arcOpacity = 0.8;\n  const { bubbles, arcs } = useMemo(() => {\n    // const heightScale = scaleLinear()\n    //   .domain(extent(data.map((d) => d[1].length)))\n    //   .range([0.1, 0.6]);\n\n    let bubbles = [];\n    data.forEach(([countryName, actors]) => {\n      const lookupName = countryNamesMap[countryName] || countryName;\n      const country = Object.values(countryShapes).find(\n        (d) => d.properties.geounit == lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      if (!centroid) return;\n\n      // bubbles.push({\n      //   lat: centroid[1],\n      //   lng: centroid[0],\n      //   alt: heightScale(actors.length),\n      // });\n      actors.forEach((d, i) => {\n        const spiralPosition = spiralPositions[i];\n        const color =\n          d[\"Person or Org\"] === \"Individual Person\"\n            ? `rgba(239, 209, 201, ${d.opacity})`\n            : imageName === \"day\"\n              ? `rgba(236, 243, 250, ${d.opacity})`\n              : `rgba(255, 255, 255, ${d.opacity})`;\n        // ? `rgba(91, 156, 121, ${d.opacity})`\n        // : `rgba(49, 63, 83, ${d.opacity})`;\n\n        bubbles.push({\n          ...d,\n          name: \"\",\n          // name: d[\"label\"],\n          lng: centroid[0] + spiralPosition.x * xScale,\n          lat: centroid[1] + spiralPosition.y * yScale,\n          // alt: heightScale(actors.length),\n          alt: 0.03,\n          color,\n          // ...d,\n          // country,\n          // x: centroid[0] + spiralPosition.x,\n          // y: centroid[1] + spiralPosition.y,\n        });\n      });\n    });\n    const getActorObject = (actorName) => {\n      const actorObject = allData[\"Actors\"].find(\n        (d) => d[\"label\"] == actorName\n      );\n      return actorObject;\n    };\n    const getActorCountry = (actorObject) => {\n      const name = countryAccessor(actorObject);\n      if (!name) return;\n      const lookupName = countryNamesMap[name] || name;\n      const country = Object.values(countryShapes).find(\n        (d) => d[\"properties\"][\"geounit\"] == lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      return { name, centroid };\n    };\n    const getCountryOffset = (source) => {\n      const filteredCountries = data.find(\n        ([country]) => country == countryAccessor(source)\n      );\n      if (!filteredCountries) return [0, 0];\n\n      const index = filteredCountries[1].findIndex((d) => d.id == source.id);\n      const spiralPosition = spiralPositions[index];\n\n      return [spiralPosition.x * xScale, spiralPosition.y * yScale];\n    };\n\n    const investments = allData[\"Investments\"]\n      .map((investment) => {\n        const fromObject = (investment[\"Source\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        const toObject = (investment[\"Recipient\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        if (!fromObject || !toObject) return;\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n\n        if (!from || !to) return;\n        const fromOffset = getCountryOffset(fromObject);\n        const toOffset = getCountryOffset(toObject);\n\n        return {\n          from: { ...from, offset: fromOffset },\n          to: { ...to, offset: toOffset },\n          startLat: from.centroid[1] + fromOffset[1],\n          startLng: from.centroid[0] + fromOffset[0],\n          endLat: to.centroid[1] + toOffset[1],\n          endLng: to.centroid[0] + toOffset[0],\n          fromId: fromObject[\"id\"],\n          toId: toObject[\"id\"],\n          fromName: fromObject[\"label\"],\n          toName: toObject[\"label\"],\n          animatedTime: 5100,\n          dashLength: 0.4,\n          dashGap: 0.1,\n          altitudeAutoScale: 0.6,\n          initialColor: [\n            `rgba(32, 190, 201, ${arcOpacity})`,\n            `rgba(134, 111, 172, ${arcOpacity})`,\n            // `rgba(255, 0, 0, ${arcOpacity})`,\n          ],\n        };\n      })\n      .filter((d) => d);\n\n    let collaborations = [];\n\n    allData[\"Actors\"].forEach((actor) => {\n      const collaboratorNames = [\n        ...(actor[\"Directly Associated Orgs (e.g., employment/parent org):\"] ||\n          []),\n        ...(actor[\"Partners With\"] || []),\n      ];\n\n      collaboratorNames.forEach((collaborator) => {\n        const fromObject = actor;\n        const toObject = getActorObject(collaborator);\n        if (!toObject) return;\n\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n        if (!from || !to) return;\n\n        const fromOffset = getCountryOffset(fromObject);\n        const toOffset = getCountryOffset(toObject);\n\n        collaborations = [\n          ...collaborations,\n          {\n            from: { ...from, offset: fromOffset },\n            to: { ...to, offset: toOffset },\n            startLat: from.centroid[1] + fromOffset[1],\n            startLng: from.centroid[0] + fromOffset[0],\n            endLat: to.centroid[1] + toOffset[1],\n            endLng: to.centroid[0] + toOffset[0],\n            fromId: fromObject[\"id\"],\n            toId: toObject[\"id\"],\n            fromName: fromObject[\"label\"],\n            toName: toObject[\"label\"],\n            animatedTime: 0,\n            dashLength: undefined,\n            dashGap: 0,\n            altitudeAutoScale: 0.3,\n            initialColor: [\n              `rgba(188, 135, 151, ${arcOpacity})`,\n              `rgba(239, 209, 201, ${arcOpacity})`,\n            ],\n          },\n        ];\n      });\n    });\n\n    const arcs = [...investments, ...collaborations];\n\n    return { bubbles, arcs };\n  }, [data]);\n\n  const filteredArcs = React.useMemo(() => {\n    return arcs\n      .map((arc) => {\n        const isHighlighted =\n          !hoveredItem ||\n          arc.fromId === hoveredItem.id ||\n          arc.toId === hoveredItem.id;\n        return {\n          ...arc,\n          sortOrder: isHighlighted ? 1 : 0,\n          color: isHighlighted\n            ? arc.initialColor.map((d) => multiplyRgbaOpacity(d, 1))\n            : arc.initialColor.map((d) => multiplyRgbaOpacity(d, 0)),\n        };\n      })\n      .sort((a, b) => b.sortOrder - a.sortOrder);\n  }, [arcs, hoveredItem]);\n\n  const onPointHover = (e, f) => {\n    if (!e) {\n      setHoveredItem(null);\n      return;\n    }\n    const relationships = arcs\n      .map((arc) => {\n        const isHighlighted = arc.fromId === e.id || arc.toId === e.id;\n        if (!isHighlighted) return;\n        return {\n          ...arc,\n        };\n      })\n      .filter(Boolean);\n    setHoveredItem({ ...e, relationships });\n  };\n\n  return (\n    <div className=\"Globe\">\n      {!!hoveredItem && <MapTooltip data={hoveredItem} />}\n      {/* <BlankMap onImageUpdate={setBlankMapTextureImage} /> */}\n\n      <Globe\n        ref={globeElement}\n        globeImageUrl={\n          imageName === \"day\"\n            ? `//unpkg.com/three-globe/example/img/earth-day.jpg`\n            : `//unpkg.com/three-globe/example/img/earth-blue-marble.jpg`\n        }\n        // globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n        // globeImageUrl={mapImageUrl}\n        // globeMaterial={globeMaterial}\n        bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n        // backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n        backgroundColor=\"#E2E8EE\"\n        pointsData={bubbles}\n        pointAltitude={(d) => d[\"alt\"]}\n        pointRadius={0.5}\n        pointColor={(d) => d.color}\n        // pointsMerge={true}\n        onPointHover={onPointHover}\n        arcsData={filteredArcs}\n        // arcColor={() => \"#45aeb1\"}\n        arcColor={(d) => d.color}\n        arcStroke={0.5}\n        arcAltitudeAutoScale={(d) => d.altitudeAutoScale}\n        arcDashLength={(d) => d.dashLength}\n        arcDashGap={(d) => d.dashGap}\n        arcDashAnimateTime={(d) => d.animatedTime}\n        arcsTransitionDuration={1}\n        onGlobeReady={onGlobeLoad}\n        onPointClick={setFocusedItem}\n      // pointOfView={{ lat: 38, lng: -97, altitude: 2.5 }}\n      // ref={globeElement}\n      // onMapReady={() => {\n      //   globeElement.current.pointOfView({\n      //     lat: 39.6,\n      //     lng: -98.5,\n      //     altitude: 2,\n      //   });\n      // }}\n\n      // pointsData={myData}\n      />\n    </div>\n  );\n};\n\nexport default GlobeWrapper;\n\nconst multiplyRgbaOpacity = (rgb, opacityMultiplier) => {\n  const currentOpacity = +rgb.split(/[\\,\\)]/g)[3];\n  const newOpacity = currentOpacity * opacityMultiplier;\n  return rgb.split(\",\").slice(0, -1).join(\",\") + \", \" + newOpacity + \")\";\n};\n","import React from \"react\";\n// import { format } from \"d3\";\nimport countryNamesMap from \"./countryNamesMap.json\"\n\nimport \"./MapTooltip.css\";\n\n// const countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\n\nconst maxActorsInList = 10\nconst MapTooltip = ({ data }) => {\n  // const relationships = data.relationships.map((d) => ({\n  //   ...d,\n  //   type: !d.dashGap ? \"collaboration\" : d.fromId === data.id ? \"from\" : \"to\",\n  // }));\n  return (\n    <div className={[\"MapTooltip\"].join(\" \")}>\n      <div className=\"MapTooltip__name\">\n        {countryNamesMap[data[\"countryName\"]] || data[\"countryName\"]} working on {data[\"mitigationArea\"]}\n      </div>\n      <div className=\"MapTooltip__text\">\n        {data[\"relevantActors\"].slice(0, maxActorsInList).map(actor => (\n          <div key={actor[\"label\"]} className=\"MapTooltip__text__actor\">\n            {actor[\"label\"]}\n          </div>\n        ))}\n        {data[\"relevantActors\"].length > maxActorsInList && (\n          <div>+ {data[\"relevantActors\"].length - maxActorsInList} more</div>\n        )}\n      </div>\n      {/* {countryAccessor(data) && (\n        <div className=\"MapTooltip__text\">{countryAccessor(data)}</div>\n      )}\n      {data[\"Amount\"] && (\n        <div className=\"MapTooltip__text\">\n          ${format(\",.0f\")(data[\"Amount\"])}\n        </div>\n      )}\n      {data[\"mainContributionArea\"] && (\n        <div className=\"MapTooltip__text\">\n          {data[\"mainContributionArea\"].join(\" & \")}\n        </div>\n      )}\n      {data[\"Entity Type\"] && (\n        <div className=\"MapTooltip__text\">{data[\"Entity Type\"].join(\", \")}</div>\n      )} */}\n      {/* {!!relationships.length && (\n        <div className=\"MapTooltip__text\">\n          {relationships.map((d) => (\n            <div key={d.id}>\n              {d.type === \"collaboration\"\n                ? \"Collaborates with\"\n                : d.type === \"from\"\n                ? \"Invested in\"\n                : \"Received investment from\"}{\" \"}\n              <b>{[d.toName, d.fromName].find((d) => d != data.label)}</b>\n            </div>\n          ))}\n        </div>\n      )} */}\n      {/* {data[\"Focus\"] && (\n        <div className=\"MapTooltip__text\">{data[\"Focus\"]}</div>\n      )} */}\n      {/* <div className=\"MapTooltip__info \">\n        <span className={`MapTooltip__info actor actor--${data[\"actor\"]}`}>\n          {data[\"actors\"].join(\", \").replace(new RegExp(\" -- \", \"g\"), \", \")}\n        </span>\n      </div>\n      <div className={`MapTooltip__info`}>\n        {(data[\"Mission Type\"] || [])\n          .map((d) => d.toLowerCase().trim())\n          .map((type) => (\n            <span\n              key={type}\n              className=\"MapTooltip__type-name\"\n              style={{ color: typeColors[type] }}\n            >\n              {type}\n            </span>\n          ))}\n      </div>\n       */}\n      {/* <svg className=\"MapTooltip__arrow\" viewBox=\"0 0 3 2\">\n        <path d=\"M 1 0 L 3 0 L 0 2 Z\" fill=\"white\"></path>\n      </svg> */}\n\n      <div className=\"MapTooltip__note\">Click for more info</div>\n    </div>\n  );\n};\nexport default MapTooltip;\n","import React, { Fragment, useMemo, useRef, useState } from \"react\";\nimport uniq from \"lodash/uniq\";\nimport flatten from \"lodash/flatten\";\nimport fromPairs from \"lodash/fromPairs\";\n// import { MeshPhongMaterial, Color } from \"three\";\n\nimport countryShapes from \"./countries.json\";\nimport countryCentersMap from \"./country-centers.json\";\nimport { getSpiralPositions } from \"../../utils\";\nimport Globe from \"react-globe.gl\";\n// import BlankMap from \"./BlankMap\";\nimport MapTooltipCountry from \"./MapTooltipCountry\";\nimport countryNamesMap from \"./countryNamesMap.json\"\nimport mapImageUrl from \"./map.png\";\n\nimport \"./Globe.css\";\nimport { contributionAreaColors, contributionAreas } from \"../../constants\";\n\nconst countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\nconst spiralPositions = getSpiralPositions(100, 5, 2, 1.1);\n\nconst getCentroid = (country) => countryCentersMap[country];\n\nconst GlobeWrapper = ({ allData, data, setFocusedItem, imageName }) => {\n  const [hoveredItem, setHoveredItem] = useState();\n  // const [blankMapTextureImage, setBlankMapTextureImage] = useState();\n  const globeElement = useRef();\n\n  const onGlobeLoad = () => {\n    const scene = globeElement.current.scene();\n    // ambient light\n    scene.children[1].intensity = 1.36;\n    // directional light\n    scene.children[2].intensity = 0.1;\n\n    scene.rotation.y = 0.5 * Math.PI;\n    scene.rotation.x = 0.15 * Math.PI;\n  };\n\n  const xScale = 0.26;\n  const yScale = 0.2;\n\n  const { bubbles, arcs } = useMemo(() => {\n    // const heightScale = scaleLinear()\n    //   .domain(extent(data.map((d) => d[1].length)))\n    //   .range([0.1, 0.6]);\n\n    let bubbles = [];\n    const mitigationAreaPositions = fromPairs(contributionAreas.map((d, i) => [d, spiralPositions[i]]))\n    data.forEach(([countryName, actors]) => {\n      const lookupName = countryNamesMap[countryName] || countryName;\n      const country = Object.values(countryShapes).find(\n        (d) => d.properties.geounit === lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      if (!centroid) return;\n\n      contributionAreas.forEach((mitigationArea) => {\n        const offset = mitigationAreaPositions[mitigationArea]\n        const relevantActors = actors.filter(actor => (actor[\"mainContributionArea\"] || []).includes(mitigationArea) && !(actor.opacity < 1))\n        const count = relevantActors.length;\n        if (!count) return\n\n        bubbles.push({\n          countryName,\n          mitigationArea,\n          // name: `${countryName} working on ${mitigationArea}`,\n          name: \"\",\n          lng: centroid[0] + offset.x * xScale,\n          lat: centroid[1] + offset.y * yScale,\n          alt: count * 0.01,\n          color: contributionAreaColors[mitigationArea],\n          relevantActors,\n        });\n      })\n\n    });\n\n    const getActorObject = (actorName) => {\n      const actorObject = allData[\"Actors\"].find(\n        (d) => d[\"label\"] == actorName\n      );\n      return actorObject;\n    };\n    const getActorCountry = (actorObject) => {\n      const name = countryAccessor(actorObject);\n      if (!name) return;\n      const lookupName = countryNamesMap[name] || name;\n      const country = Object.values(countryShapes).find(\n        (d) => d[\"properties\"][\"geounit\"] == lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      return { name, centroid };\n    };\n    const getCountryOffset = (source, mitigationArea) => {\n      const filteredCountries = data.find(\n        ([country]) => country === countryAccessor(source)\n      );\n      if (!filteredCountries) return [0, 0];\n\n      const spiralPosition = mitigationAreaPositions[mitigationArea]\n      if (!spiralPosition) return [0, 0]\n\n      return [spiralPosition.x * xScale, spiralPosition.y * yScale];\n    };\n\n    const investments = allData[\"Investments\"]\n      .map((investment) => {\n        const fromObject = (investment[\"Source\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        const toObject = (investment[\"Recipient\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        if (!fromObject || !toObject) return;\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n\n        if (!from || !to) return;\n        if (!(fromObject[\"mainContributionArea\"] || []).length || !(toObject[\"mainContributionArea\"] || []).length) return;\n        const fromOffset = getCountryOffset(fromObject, fromObject[\"mainContributionArea\"][0]);\n        const toOffset = getCountryOffset(toObject, toObject[\"mainContributionArea\"][0]);\n        const fromColor = contributionAreaColors[fromObject[\"mainContributionArea\"][0]];\n        const toColor = contributionAreaColors[toObject[\"mainContributionArea\"][0]];\n\n        return {\n          from: { ...from, offset: fromOffset, mainContributionArea: fromObject[\"mainContributionArea\"][0] },\n          to: { ...to, offset: toOffset, mainContributionArea: toObject[\"mainContributionArea\"][0] },\n          startLat: from.centroid[1] + fromOffset[1],\n          startLng: from.centroid[0] + fromOffset[0],\n          endLat: to.centroid[1] + toOffset[1],\n          endLng: to.centroid[0] + toOffset[0],\n          fromId: fromObject[\"id\"],\n          toId: toObject[\"id\"],\n          fromName: fromObject[\"label\"],\n          toName: toObject[\"label\"],\n          animatedTime: 5100,\n          dashLength: 0.4,\n          dashGap: 0.1,\n          altitudeAutoScale: 0.6,\n          initialColor: [\n            fromColor,\n            toColor,\n          ],\n        };\n      })\n      .filter((d) => d);\n\n    let collaborations = [];\n\n    allData[\"Actors\"].forEach((actor) => {\n      const collaboratorNames = [\n        ...(actor[\"Directly Associated Orgs (e.g., employment/parent org):\"] ||\n          []),\n        ...(actor[\"Partners With\"] || []),\n      ];\n\n      collaboratorNames.forEach((collaborator) => {\n        const fromObject = actor;\n        const toObject = getActorObject(collaborator);\n        if (!toObject) return;\n\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n        if (!from || !to) return;\n        if (!(fromObject[\"mainContributionArea\"] || []).length || !(toObject[\"mainContributionArea\"] || []).length) return;\n\n        const fromOffset = getCountryOffset(fromObject, fromObject[\"mainContributionArea\"]);\n        const toOffset = getCountryOffset(toObject, toObject[\"mainContributionArea\"]);\n\n        const fromColor = contributionAreaColors[fromObject[\"mainContributionArea\"][0]];\n        const toColor = contributionAreaColors[toObject[\"mainContributionArea\"][0]];\n        collaborations = [\n          ...collaborations,\n          {\n            from: { ...from, offset: fromOffset, mainContributionArea: fromObject[\"mainContributionArea\"][0] },\n            to: { ...to, offset: toOffset, mainContributionArea: toObject[\"mainContributionArea\"][0] },\n            startLat: from.centroid[1] + fromOffset[1],\n            startLng: from.centroid[0] + fromOffset[0],\n            endLat: to.centroid[1] + toOffset[1],\n            endLng: to.centroid[0] + toOffset[0],\n            fromId: fromObject[\"id\"],\n            toId: toObject[\"id\"],\n            fromName: fromObject[\"label\"],\n            toName: toObject[\"label\"],\n            animatedTime: 0,\n            dashLength: undefined,\n            dashGap: 0,\n            altitudeAutoScale: 0.3,\n            initialColor: [\n              fromColor,\n              toColor,\n            ],\n          },\n        ];\n      });\n    });\n\n    const arcs = [...investments, ...collaborations].filter(d => !(d.startLat === d.endLat && d.startLng === d.endLng));\n    return { bubbles, arcs };\n  }, [data]);\n\n  const filteredArcs = React.useMemo(() => {\n    return arcs\n      .map((arc) => {\n        const isHighlighted =\n          !hoveredItem ||\n          ((\n            (arc.from.name === hoveredItem.countryName && arc.from.mainContributionArea === hoveredItem.mitigationArea)\n            ||\n            (arc.to.name === hoveredItem.countryName && arc.to.mainContributionArea === hoveredItem.mitigationArea)\n          ));\n        return {\n          ...arc,\n          sortOrder: isHighlighted ? 1 : 0,\n          color: isHighlighted ? arc.initialColor : [\"transparent\", \"transparent\"]\n        };\n      })\n      .sort((a, b) => b.sortOrder - a.sortOrder);\n  }, [arcs, hoveredItem]);\n\n  const onPointHover = (e, f) => {\n    if (!e) {\n      setHoveredItem(null);\n      return;\n    }\n    const relationships = arcs\n      .map((arc) => {\n        const isHighlighted = arc.fromId === e.id || arc.toId === e.id;\n        if (!isHighlighted) return;\n        return {\n          ...arc,\n        };\n      })\n      .filter(Boolean);\n    setHoveredItem({ ...e, relationships });\n  };\n\n  return (\n    <div className=\"Globe\">\n      {!!hoveredItem && <MapTooltipCountry data={hoveredItem} />}\n      {/* <BlankMap onImageUpdate={setBlankMapTextureImage} /> */}\n\n      <Globe\n        ref={globeElement}\n        globeImageUrl={\n          imageName === \"day\"\n            ? `//unpkg.com/three-globe/example/img/earth-day.jpg`\n            : `//unpkg.com/three-globe/example/img/earth-blue-marble.jpg`\n        }\n        // globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n        // globeImageUrl={mapImageUrl}\n        // globeMaterial={globeMaterial}\n        bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n        // backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n        backgroundColor=\"#E2E8EE\"\n        pointsData={bubbles}\n        pointAltitude={(d) => d[\"alt\"]}\n        pointRadius={0.5}\n        pointColor={(d) => d.color}\n        // pointsMerge={true}\n        onPointHover={onPointHover}\n        arcsData={filteredArcs}\n        // arcColor={() => \"#45aeb1\"}\n        arcColor={(d) => d.color}\n        arcStroke={0.5}\n        arcAltitudeAutoScale={(d) => d.altitudeAutoScale}\n        arcDashLength={(d) => d.dashLength}\n        arcDashGap={(d) => d.dashGap}\n        arcDashAnimateTime={(d) => d.animatedTime}\n        arcsTransitionDuration={1}\n        onGlobeReady={onGlobeLoad}\n        onPointClick={setFocusedItem}\n      // pointOfView={{ lat: 38, lng: -97, altitude: 2.5 }}\n      // ref={globeElement}\n      // onMapReady={() => {\n      //   globeElement.current.pointOfView({\n      //     lat: 39.6,\n      //     lng: -98.5,\n      //     altitude: 2,\n      //   });\n      // }}\n\n      // pointsData={myData}\n      />\n\n      <div className=\"Globe__legend\">\n        Each bar represents organizations within a country that are focused on {contributionAreas.map((area, i) => (\n          <Fragment key={area}>\n            <span style={{\n              fontWeight: 600,\n              color: contributionAreaColors[area]\n            }}>{area}</span>\n            {i !== contributionAreas.length - 2 ? ', ' : ', and '}\n          </Fragment>\n        ))}growing taller with more organizations.\n        <br />\n        The arcs show collaborations between countries.\n      </div>\n    </div>\n  );\n};\n\nexport default GlobeWrapper;\n\nconst multiplyRgbaOpacity = (rgb, opacityMultiplier) => {\n  const currentOpacity = +rgb.split(/[\\,\\)]/g)[3];\n  const newOpacity = currentOpacity * opacityMultiplier;\n  return rgb.split(\",\").slice(0, -1).join(\",\") + \", \" + newOpacity + \")\";\n};\n","import React from \"react\";\nimport Icon from \"./../Icon/Icon\";\nimport countryNamesMap from \"./../Map/countryNamesMap.json\"\n\nimport \"./NetworkModal.css\";\nimport { contributionAreaColors } from \"../../constants\";\n\nconst NetworkModal = ({ country = {}, mitigationArea, actors = [], onChangeState, onClose }) => {\n  console.log(country, mitigationArea, actors)\n  return (\n    <>\n      <div className=\"NetworkModal__background\" onClick={onClose}></div>\n      <div className=\"NetworkModal\">\n        <div className=\"NetworkModal__content\">\n          <div className=\"NetworkModal__close\" onClick={onClose}>\n            <Icon size=\"s\" name=\"x\" />\n          </div>\n\n          <div className=\"NetworkModal__name\">\n            <div>\n\n              Individuals & Organizations in {countryNamesMap[country] || country}{!!mitigationArea && <> working on <span style={{ color: contributionAreaColors[mitigationArea] }}>{mitigationArea}</span></>}\n            </div>\n          </div>\n\n\n          <div className=\"NetworkModal__info\">\n            {actors.map(actor => (\n              <div key={actor[\"id\"]}>\n                <button className=\"plain NetworkModal__info__item\" onClick={() => {\n                  onChangeState(\"item\", actor[\"id\"])\n                  onChangeState(\"country\", null)\n                  onChangeState(\"mitigation-area\", null)\n                  onChangeState(\"back-country\", country)\n                  onChangeState(\"back-mitigation-area\", mitigationArea)\n                }}>\n                  {actor[\"label\"]}\n                </button>\n              </div>\n            ))}\n          </div>\n          {/*\n          <div className=\"NetworkModal__status\">\n            {!!info[\"Status\"] && <StatusPill status={info[\"Status\"][0]} />}\n          </div>\n\n          {info[\"Link to More Info on Entity (bio or overview page)\"] && (\n            <a\n              href={info[\"Link to More Info on Entity (bio or overview page)\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )}\n          {info[\"URL for Context\"] && (\n            <a\n              href={info[\"URL for Context\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )} */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NetworkModal;\n","import React, { Fragment, useEffect, useMemo, useRef, useState } from \"react\";\nimport countryCentersMap from \"./country-centers.json\";\n\nimport {\n  geoNaturalEarth1,\n  geoMercator,\n  geoPath,\n  geoGraticule10,\n  Delaunay,\n  pointer,\n  geoEqualEarth,\n} from \"d3\";\nimport {\n  geoArmadillo,\n  geoBaker,\n  geoBerghaus,\n  geoEckert3,\n  geoFahey,\n  geoGilbert,\n  geoGingery,\n  geoGinzburg9,\n  geoHealpix,\n  geoHufnagel,\n  geoInterruptedHomolosine,\n  geoInterruptedMollweideHemispheres,\n  geoPolyhedralWaterman,\n} from \"d3-geo-projection\";\n// import verticalProjection from \"./vertical-projection\";\n\nimport {\n  getDistanceFromXY,\n  getSpiralPositions,\n  scaleCanvas,\n  useChartDimensions,\n} from \"./../../utils\";\nimport countryShapes from \"./countries.json\";\nimport countryNamesMap from \"./countryNamesMap.json\"\nimport MapTooltipCountry from \"./MapTooltipCountry\";\n\nimport \"./Map.css\";\nimport { fromPairs } from \"lodash\";\nimport { contributionAreaColors, contributionAreas } from \"../../constants\";\n\nconst sphere = { type: \"Sphere\" };\nconst countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\nconst spiralPositions = getSpiralPositions(100, 5, 2, 1.2);\n\nconst MapWrapper = ({ allData, data, projectionName, setFocusedItem }) => {\n  const [ref, dms] = useChartDimensions();\n  const [blankMap, setBlankMap] = useState();\n  const [hoveredItem, setHoveredItem] = useState();\n  const arcsRef = useRef([]);\n  const canvasElement = useRef();\n\n  const projectionFunction = projectionNameOptionsMap[projectionName];\n\n  const width = useMemo(() => Math.min(1400, dms.height * 1.3, dms.width), [\n    dms.width,\n    dms.height,\n  ]);\n\n  const { height, projection } = useMemo(() => {\n    const maxHeight = window.innerHeight - 100;\n    try {\n      const projection = projectionFunction().fitSize(\n        [width, maxHeight],\n        sphere\n      );\n\n      const pathGenerator = geoPath(projection);\n      const [[x0, y0], [x1, y1]] = pathGenerator.bounds(sphere);\n      const height = y1;\n\n      return {\n        height,\n        projection,\n      };\n    } catch (e) {\n      console.log(e);\n      return {};\n    }\n  }, [width, projectionFunction]);\n\n  const draw = () => {\n    if (!canvasElement.current) return;\n    const ctx = canvasElement.current.getContext(\"2d\");\n    scaleCanvas(canvasElement.current, ctx, width, height);\n    const pathGenerator = geoPath(projection, ctx);\n\n    const drawMap = () => {\n      const drawPath = (shape) => {\n        ctx.beginPath();\n        pathGenerator(shape);\n      };\n      drawPath(sphere);\n      ctx.save();\n      ctx.clip();\n\n      const fill = (color) => {\n        ctx.fillStyle = color;\n        ctx.fill();\n      };\n      const stroke = (color) => {\n        ctx.strokeStyle = color;\n        ctx.stroke();\n      };\n      drawPath(sphere);\n      fill(\"#fff\");\n      stroke(\"#bbb\");\n      drawPath(geoGraticule10());\n      stroke(\"#eee\");\n\n      Object.values(countryShapes).forEach((shape) => {\n        // countryShapes.forEach((shape) => {\n        drawPath(shape);\n        fill(\"#f8f8f8\");\n        stroke(\"#ccc\");\n      });\n      ctx.restore(); // stop clipping\n\n      drawPath(sphere);\n      stroke(\"#ccc\");\n      // ctx.fillRect(10, 10, 100, 100);\n    };\n    drawMap();\n\n    // bubbleSizes.set(new Array(20).fill(0).map((d) => [0, 0]));\n\n    if (width > 0) {\n      setBlankMap(ctx.getImageData(0, 0, width * 2, height * 2));\n    }\n  };\n  useEffect(draw, [projection, width]);\n\n  const getCentroid = (country) => projection(countryCentersMap[country]);\n\n  // const rScale = useMemo(\n  //   () =>\n  //     scaleSqrt()\n  //       .domain([0, Math.max(...data.map((d) => d[1].length))])\n  //       .range([0.1, width * 0.06]),\n  //   [width, data]\n  // );\n\n  const { bubbles, arcs } = useMemo(() => {\n    // const heightScale = scaleLinear()\n    //   .domain(extent(data.map((d) => d[1].length)))\n    //   .range([0.1, 0.6]);\n\n    let bubbles = [];\n    const mitigationAreaPositions = fromPairs(contributionAreas.map((d, i) => [d, [\n      [-width * 0.008, width * 0.004],\n      [0, -width * 0.008],\n      [width * 0.008, width * 0.004],\n    ][i]]))\n    data.forEach(([countryName, actors]) => {\n      const lookupName = countryNamesMap[countryName] || countryName;\n      const country = Object.values(countryShapes).find(\n        (d) => d.properties.geounit === lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      if (!centroid) return;\n\n      contributionAreas.forEach((mitigationArea) => {\n        const offset = mitigationAreaPositions[mitigationArea]\n        const relevantActors = actors.filter(actor => (actor[\"mainContributionArea\"] || []).includes(mitigationArea) && !(actor.opacity < 1))\n        const count = relevantActors.length;\n        if (!count) return\n\n        bubbles.push({\n          countryName,\n          mitigationArea,\n          // name: `${countryName} working on ${mitigationArea}`,\n          name: \"\",\n          x: centroid[0] + offset[0],\n          y: centroid[1] + offset[1],\n          r: width * 0.06,\n          alt: count * 0.01,\n          color: contributionAreaColors[mitigationArea],\n          relevantActors,\n        });\n      })\n\n    });\n\n    const getActorObject = (actorName) => {\n      const actorObject = allData[\"Actors\"].find(\n        (d) => d[\"label\"] == actorName\n      );\n      return actorObject;\n    };\n    const getActorCountry = (actorObject) => {\n      const name = countryAccessor(actorObject);\n      if (!name) return;\n      const lookupName = countryNamesMap[name] || name;\n      const country = Object.values(countryShapes).find(\n        (d) => d[\"properties\"][\"geounit\"] == lookupName\n      );\n      if (!country) return;\n      const centroid = getCentroid(country.properties.geounit);\n      return { name, centroid };\n    };\n    const getCountryOffset = (source, mitigationArea) => {\n      const filteredCountries = data.find(\n        ([country]) => country === countryAccessor(source)\n      );\n      if (!filteredCountries) return [0, 0];\n\n      const spiralPosition = mitigationAreaPositions[mitigationArea]\n      if (!spiralPosition) return [0, 0]\n\n      return [spiralPosition.x, spiralPosition.y];\n    };\n\n    const investments = allData[\"Investments\"]\n      .map((investment) => {\n        const fromObject = (investment[\"Source\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        const toObject = (investment[\"Recipient\"] || [])\n          .map(getActorObject)\n          .find((d) => d);\n        if (!fromObject || !toObject) return;\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n\n        if (!from || !to) return;\n        if (!(fromObject[\"mainContributionArea\"] || []).length || !(toObject[\"mainContributionArea\"] || []).length) return;\n        const fromOffset = mitigationAreaPositions[fromObject[\"mainContributionArea\"][0]]\n        const toOffset = mitigationAreaPositions[toObject[\"mainContributionArea\"][0]]\n        const fromColor = contributionAreaColors[fromObject[\"mainContributionArea\"][0]];\n        const toColor = contributionAreaColors[toObject[\"mainContributionArea\"][0]];\n\n        return {\n          from: { ...from, offset: fromOffset, mainContributionArea: fromObject[\"mainContributionArea\"][0] },\n          to: { ...to, offset: toOffset, mainContributionArea: toObject[\"mainContributionArea\"][0] },\n          startLat: from.centroid[1] + fromOffset[1],\n          startLng: from.centroid[0] + fromOffset[0],\n          endLat: to.centroid[1] + toOffset[1],\n          endLng: to.centroid[0] + toOffset[0],\n          fromId: fromObject[\"id\"],\n          toId: toObject[\"id\"],\n          fromName: fromObject[\"label\"],\n          toName: toObject[\"label\"],\n          animatedTime: 5100,\n          dashLength: 0.4,\n          dashGap: 0.1,\n          altitudeAutoScale: 0.6,\n          initialColor: [\n            fromColor,\n            toColor,\n          ],\n        };\n      })\n      .filter((d) => d);\n\n    let collaborations = [];\n\n    allData[\"Actors\"].forEach((actor) => {\n      const collaboratorNames = [\n        ...(actor[\"Directly Associated Orgs (e.g., employment/parent org):\"] ||\n          []),\n        ...(actor[\"Partners With\"] || []),\n      ];\n\n      collaboratorNames.forEach((collaborator) => {\n        const fromObject = actor;\n        const toObject = getActorObject(collaborator);\n        if (!toObject) return;\n\n        if (fromObject.opacity < 0.5 || toObject.opacity < 0.5) return;\n\n        const from = getActorCountry(fromObject);\n        const to = getActorCountry(toObject);\n        if (!from || !to) return;\n        if (!(fromObject[\"mainContributionArea\"] || []).length || !(toObject[\"mainContributionArea\"] || []).length) return;\n\n        const fromOffset = mitigationAreaPositions[fromObject[\"mainContributionArea\"][0]]\n        const toOffset = mitigationAreaPositions[toObject[\"mainContributionArea\"][0]]\n        const fromColor = contributionAreaColors[fromObject[\"mainContributionArea\"][0]];\n        const toColor = contributionAreaColors[toObject[\"mainContributionArea\"][0]];\n        collaborations = [\n          ...collaborations,\n          {\n            from: { ...from, offset: fromOffset, mainContributionArea: fromObject[\"mainContributionArea\"][0] },\n            to: { ...to, offset: toOffset, mainContributionArea: toObject[\"mainContributionArea\"][0] },\n            startLat: from.centroid[1] + fromOffset[1],\n            startLng: from.centroid[0] + fromOffset[0],\n            endLat: to.centroid[1] + toOffset[1],\n            endLng: to.centroid[0] + toOffset[0],\n            fromId: fromObject[\"id\"],\n            toId: toObject[\"id\"],\n            fromName: fromObject[\"label\"],\n            toName: toObject[\"label\"],\n            animatedTime: 0,\n            dashLength: undefined,\n            dashGap: 0,\n            altitudeAutoScale: 0.3,\n            initialColor: [\n              fromColor,\n              toColor,\n            ],\n          },\n        ];\n      });\n    });\n\n    const arcs = [...investments, ...collaborations].filter(d => !(d.startLat === d.endLat && d.startLng === d.endLng));\n    return { bubbles, arcs };\n  }, [data, projection]);\n\n  const filteredArcs = React.useMemo(() => {\n    return arcs\n      .map((arc) => {\n        const isHighlighted =\n          !hoveredItem ||\n          ((\n            (arc.from.name === hoveredItem.countryName && arc.from.mainContributionArea === hoveredItem.mitigationArea)\n            ||\n            (arc.to.name === hoveredItem.countryName && arc.to.mainContributionArea === hoveredItem.mitigationArea)\n          ));\n        return {\n          ...arc,\n          sortOrder: isHighlighted ? 1 : 0,\n          color: isHighlighted ? arc.initialColor : [\"transparent\", \"transparent\"]\n        };\n      })\n      .sort((a, b) => b.sortOrder - a.sortOrder);\n  }, [arcs, hoveredItem]);\n\n  const voronoi = useMemo(() => Delaunay.from(bubbles.map((d) => [d.x, d.y])), [\n    bubbles,\n  ]);\n\n  const drawBubbles = () => {\n    if (!canvasElement.current) return;\n    if (!blankMap) return;\n\n    const ctx = canvasElement.current.getContext(\"2d\");\n\n    ctx.putImageData(blankMap, 0, 0);\n\n    ctx.globalCompositeOperation = \"multiply\";\n    ctx.fillStyle = \"#5da17c\";\n    const r = 3;\n    bubbles.forEach(({ id, color, opacity, x, y }) => {\n      ctx.beginPath();\n      ctx.globalAlpha = opacity\n      ctx.fillStyle = color\n      ctx.arc(x, y, r, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n    ctx.globalAlpha = 1\n\n    arcsRef.current = arcs;\n\n    const pathGenerator = geoPath(projection, ctx);\n\n    ctx.beginPath();\n    pathGenerator(sphere);\n    ctx.save();\n    ctx.clip();\n\n    filteredArcs.forEach(({ startLat, startLng, endLat, endLng, color }) => {\n      try {\n        ctx.beginPath();\n        pathGenerator({\n          type: \"LineString\",\n          coordinates: [\n            projection.invert([startLng, startLat]),\n            projection.invert([endLng, endLat]),\n          ],\n        });\n      } catch (e) {\n        console.log(e);\n      }\n      ctx.strokeWidth = 2;\n      const gradient = ctx.createLinearGradient(startLng, startLat, endLng, endLat);\n      gradient.addColorStop(0, color[0]);\n      gradient.addColorStop(1, color[1]);\n      ctx.strokeStyle = gradient;\n      ctx.stroke();\n    });\n    ctx.restore(); // stop clipping\n\n    ctx.globalCompositeOperation = \"normal\";\n  };\n\n  useEffect(drawBubbles, [blankMap, data, width, projection, hoveredItem]);\n\n  const onMouseMove = (e) => {\n    const [x, y] = pointer(e);\n    const pointIndex = voronoi.find(x, y);\n    const point = bubbles[pointIndex];\n    const distance = getDistanceFromXY([point.x - x, point.y - y]);\n    if (distance > 100) {\n      setHoveredItem();\n    } else {\n      const relationships = arcsRef.current\n        .map((arc) => {\n          const isHighlighted =\n            arc.fromId === point.id || arc.toId === point.id;\n          if (!isHighlighted) return;\n          return {\n            ...arc,\n          };\n        })\n        .filter(Boolean);\n      setHoveredItem({ ...point, relationships });\n    }\n  };\n  const onClick = (e) => {\n    const [x, y] = pointer(e);\n    const pointIndex = voronoi.find(x, y);\n    const point = bubbles[pointIndex];\n    const distance = getDistanceFromXY([point.x - x, point.y - y]);\n    if (distance > 100) {\n      setFocusedItem();\n    } else {\n      setFocusedItem(point);\n    }\n  };\n\n  return (\n    <div className=\"Map\" ref={ref}>\n      {/* <div className=\"Map__controls\" style={{ width: \"20em\" }}>\n        <Select\n          options={projectionNameOptionsParsed}\n          value={projectionNameOptionsParsed.find(\n            (d) => d.label === projectionName\n          )}\n          onChange={({ value }) => setProjectionName(value)}\n        />\n      </div> */}\n      <canvas\n        onMouseMove={onMouseMove}\n        onMouseLeave={() => setHoveredItem()}\n        onClick={onClick}\n        ref={canvasElement}\n        style={{ width: `${width}px`, height: `${height}px` }}\n      />\n      {!!hoveredItem && <MapTooltipCountry data={hoveredItem} />}\n\n      <div className=\"Map__legend\">\n        Each bar represents organizations within a country that are focused on {contributionAreas.map((area, i) => (\n          <Fragment key={area}>\n            <span style={{\n              fontWeight: 600,\n              color: contributionAreaColors[area]\n            }}>{area}</span>\n            {i !== contributionAreas.length - 2 ? ', ' : ', and '}\n          </Fragment>\n        ))}growing taller with more organizations.\n        <br />\n        The arcs show collaborations between countries.\n      </div>\n    </div>\n  );\n};\n\nexport default MapWrapper;\n\nconst projectionNameOptionsMap = {\n  // vertical: verticalProjection,\n  \"natural earth\": geoNaturalEarth1,\n  mercator: geoMercator,\n  \"equal earth\": geoEqualEarth,\n  armadillo: geoArmadillo,\n  baker: geoBaker,\n  berghaus: geoBerghaus,\n  eckert: geoEckert3,\n  fahey: geoFahey,\n  gilbert: geoGilbert,\n  gingery: geoGingery,\n  healpix: geoHealpix,\n  ginzberg: geoGinzburg9,\n  hufnagel: geoHufnagel,\n  \"interrupted homolosine\": geoInterruptedHomolosine,\n  \"mollweide split\": geoInterruptedMollweideHemispheres,\n  \"polyhedral waterman\": geoPolyhedralWaterman,\n};\nconst projectionNameOptions = Object.keys(projectionNameOptionsMap);\nexport const projectionNameOptionsParsed = projectionNameOptions.map(\n  (projectionNameOption) => ({\n    label: projectionNameOption,\n    value: projectionNameOption,\n  })\n);\n\nconst multiplyRgbaOpacity = (rgb, opacityMultiplier) => {\n  const currentOpacity = +rgb.split(/[\\,\\)]/g)[3];\n  const newOpacity = currentOpacity * opacityMultiplier;\n  return rgb.split(\",\").slice(0, -1).join(\",\") + \", \" + newOpacity + \")\";\n};\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport Select from \"react-select\";\nimport { active, group } from \"d3\";\n\nimport Globe from \"./Globe\";\nimport GlobeCountry from \"./GlobeCountry\";\nimport NetworkModal from \"./../Network/NetworkModal\";\nimport CountryModal from \"./../Network/CountryModal\";\nimport Map, { projectionNameOptionsParsed } from \"./MapCountry\";\nimport NetworkFilters from \"../Network/NetworkFilters\";\n\nimport \"./MapWrapper.css\";\n\nconst MapWrapper = ({\n  data = {},\n  projectionName,\n  focusedCountry,\n  focusedMitigationArea,\n  focusedItem,\n  backCountry,\n  backMitigationArea,\n  onChangeState,\n}) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  const countryAccessor = (d) => d[\"Primary Operating Geography (Country)\"];\n\n  const setMapProjection = (newProjection) => {\n    onChangeState(\"projection\", newProjection.label);\n  };\n  const projection =\n    typeOptions.find((d) => d.label === projectionName) || typeOptions[0];\n\n  const parsedData = useMemo(() => {\n    return {\n      ...data,\n      Actors: (data[\"Actors\"] || [])\n        .map((item) => {\n          const unsatisifiedActiveFilters = activeFilters.filter(\n            ({ type, value: filterValue }) => {\n              const value = getFilterFromItem(item, type) || [];\n              if (!value.length) return true;\n              // if (source) {\n              //   const sourceValue = getFilterFromItem(source, type);\n              //   if (!sourceValue.includes(filterValue)) return true;\n              //   return false;\n              // }\n              if (value.includes(filterValue)) return false;\n              return true;\n            }\n          );\n          const opacity = unsatisifiedActiveFilters.length ? 0.13 : 1;\n          return { ...item, opacity };\n        })\n        .sort((a, b) => {\n          const aValue = a[\"Person or Org\"] === \"Individual Person\" ? 1 : 0;\n          const bValue = b[\"Person or Org\"] === \"Individual Person\" ? 1 : 0;\n          return aValue - bValue;\n        }),\n    };\n  }, [data, activeFilters]);\n\n  const groupedData = useMemo(\n    () => Array.from(group(parsedData[\"Actors\"], countryAccessor)),\n    [parsedData]\n  );\n\n  const setFocusedCountry = useCallback((newCountry) => {\n    onChangeState(\"country\", newCountry && newCountry.countryName);\n    onChangeState(\"mitigation-area\", newCountry && newCountry.mitigationArea);\n  });\n  const setFocusedItem = useCallback((newItem) => {\n    onChangeState(\"item\", newItem && newItem.id);\n  });\n\n  const onCloseFocusedItem = useCallback(() => {\n    setFocusedItem(null);\n    setFocusedCountry(null);\n    onChangeState(\"back-country\", null);\n    onChangeState(\"back-mitigation-area\", null);\n  }, []);\n\n  return (\n    <div className=\"MapWrapper\">\n      <div className=\"MapWrapper__controls\">\n        <Select\n          options={typeOptions}\n          value={projection}\n          onChange={setMapProjection}\n        />\n        {/* <Toggle options={toggleOptions} value={projection} onChange={setView} /> */}\n\n        <h6 className=\"MapWrapper__sidebar__bottom-label\">Filter by</h6>\n\n        <div className=\"MapWrapper__sidebar\">\n          <NetworkFilters\n            filters={filterFields}\n            {...{ activeFilters }}\n            data={data[\"Actors\"]}\n            onUpdateFilters={setActiveFilters}\n          />\n        </div>\n      </div>\n\n      <div className=\"MapWrapper__main\">\n        {projection.value === \"globe\" ? (\n          <Globe\n            data={groupedData}\n            allData={parsedData}\n            {...{ focusedItem, setFocusedItem }}\n          />\n        ) : projection.value === \"globe-country\" ? (\n          <GlobeCountry\n            data={groupedData}\n            allData={parsedData}\n            {...{ focusedItem, setFocusedItem: setFocusedCountry }}\n          />\n        ) : projection.value === \"globe-day\" ? (\n          <Globe\n            data={groupedData}\n            allData={parsedData}\n            imageName=\"day\"\n            {...{ focusedItem, setFocusedItem }}\n          />\n        ) : (\n          <Map\n            data={groupedData}\n            allData={parsedData}\n            projectionName={projection.value}\n            {...{ focusedItem, setFocusedItem: setFocusedCountry }}\n          />\n        )}\n      </div>\n\n      {focusedItem && (\n        <NetworkModal info={focusedItem} backCountry={backCountry} backMitigationArea={backMitigationArea} onChangeState={onChangeState} onClose={onCloseFocusedItem} />\n      )}\n      {focusedCountry && (\n        <CountryModal country={focusedCountry} mitigationArea={focusedMitigationArea} actors={data[\"Actors\"].filter(actor => (\n          countryAccessor(actor) === focusedCountry\n          && (!focusedMitigationArea || (actor[\"mainContributionArea\"] || []).includes(focusedMitigationArea))\n        ))} onChangeState={onChangeState} onClose={onCloseFocusedItem} />\n      )}\n    </div>\n  );\n};\n\nexport default MapWrapper;\n\nconst typeOptions = [\n  {\n    label: \"Globe\",\n    value: \"globe-country\",\n  },\n  // {\n  //   label: \"Globe\",\n  //   value: \"globe\",\n  // },\n  // {\n  //   label: \"Globe (light theme)\",\n  //   value: \"globe-day\",\n  // },\n  ...projectionNameOptionsParsed,\n];\n\nconst filterFields = [\n  \"mainContributionArea\",\n  \"Entity Type\",\n  \"Topical Contribution Area\",\n  \"Person or Org\",\n];\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import seaLevelData from \"./../../data/sea_levels.json\"\nimport co2Data from \"./../../data/co2_levels.json\"\nimport ch4Data from \"./../../data/ch4_levels.json\"\nimport tempData from \"./../../data/temperature.json\"\nimport forestData from \"./../../data/global_forest_area.json\"\n\nexport const benchmarkData = { seaLevels: seaLevelData, co2: co2Data, ch4: ch4Data, temp: tempData, forest: forestData };\n\nexport const benchmarkInfo = {\n  seaLevels: {\n    name: \"Sea Level Rise\",\n    source: \"NASA\",\n    sourceUrl: \"https://climate.nasa.gov/vital-signs/sea-level/\",\n  },\n  co2: {\n    name: \"Atmospheric CO2 levels\",\n    source: \"NOAA\",\n    sourceUrl: \"https://sos.noaa.gov/catalog/datasets/carbon-dioxide-concentration-geos-5-model/\",\n  },\n  ch4: {\n    name: \"Atmospheric methane levels\",\n    source: \"NOAA\",\n    sourceUrl: \"https://gml.noaa.gov/ccgg/trends_ch4/\",\n    fact: \"Methane will trap 84x more heat than the same amount of CO2 would over a 20 year time period.\"\n  },\n  temp: {\n    name: \"Global Temperature Rise\",\n    source: \"NASA\",\n    sourceUrl: \"https://climate.nasa.gov/vital-signs/global-temperature/\",\n    fact: \"If the climate stabilizes at 2C above pre-industrial levels, over 40% of current permafrost could melt. Stabilizing at 1.5C instead of 2C would save ~2 million square kilometers of permafrost.\"\n  }\n}","import React, { useMemo } from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { scaleLinear, scaleTime, extent, max, line, area, curveMonotoneX, curveStep } from \"d3\"\nimport { useChartDimensions } from \"../../utils\";\nimport \"./Timeline.css\";\nimport { min } from \"lodash\";\n\nconst Timeline = ({ data, xAccessor, yAccessor, yMinAccessor, yMaxAccessor }) => {\n  const [ref, dms] = useChartDimensions();\n  const deltaHeight = 20\n  const timelineId = useMemo(() => uniqueId(), [])\n\n  const deltaAccessor = (d, i) => data[i - 1] && (yAccessor(d, i) - yAccessor(data[i - 1])) / (xAccessor(d, i) - xAccessor(data[i - 1]))\n\n  const { lineD, areaD, deltaZero, areaUndertaintyD, lineDeltaD, areaDeltaD, xTicks, yearsExtent } = useMemo(() => {\n    const xExtent = extent(data, xAccessor)\n    const yearsExtent = xExtent.map(x => x.getFullYear())\n    const xScale = scaleTime()\n      .domain(xExtent)\n      .range([0, dms.width])\n\n    const numberOfDecades = Math.floor((yearsExtent[1] - yearsExtent[0]) / 10)\n    const xTicks = xScale.ticks(numberOfDecades).map(d => ([xScale(d), d.getFullYear()]))\n\n    const yExtent = extent([...data.map(yMinAccessor), ...data.map(yMaxAccessor)])\n    const yScale = scaleLinear()\n      // .domain(extent(data, yAccessor))\n      .domain(yExtent[0] > 0 ? [0, max(data, yMaxAccessor)] : yExtent)\n      .range([dms.height, 0])\n\n    const maxDelta = max([Math.abs(min(data, deltaAccessor)), max(data, deltaAccessor)])\n    const deltaScale = scaleLinear()\n      .domain([-maxDelta, maxDelta])\n      .range([deltaHeight, 0])\n\n    const areaUndertaintyD = area()\n      .x(d => xScale(xAccessor(d)))\n      .y0(d => yScale(yMinAccessor(d)))\n      .y1(d => yScale(yMaxAccessor(d)))\n      .curve(curveMonotoneX)(data)\n\n    const lineD = line()\n      .x(d => xScale(xAccessor(d)))\n      .y(d => yScale(yAccessor(d)))\n      .curve(curveMonotoneX)(data)\n\n    const areaD = area()\n      .x(d => xScale(xAccessor(d)))\n      .y0(yScale(0))\n      .y1(d => yScale(yAccessor(d)))\n      .curve(curveMonotoneX)(data)\n\n    const lineDeltaD = area()\n      .x(d => xScale(xAccessor(d)))\n      .y((d, i) => deltaScale(deltaAccessor(d, i + 1)))\n      .curve(curveStep)(data.slice(1))\n\n    const deltaZero = deltaScale(0)\n    const areaDeltaD = area()\n      .x(d => xScale(xAccessor(d)))\n      .y0(deltaZero)\n      .y1((d, i) => deltaScale(deltaAccessor(d, i + 1)))\n      .curve(curveStep)(data.slice(1))\n\n    return { lineD, areaD, deltaZero, lineDeltaD, areaUndertaintyD, areaDeltaD, xTicks, yearsExtent }\n  }, [dms, data, xAccessor, yAccessor])\n\n  return (\n    <div className=\"Timeline\">\n      <div className=\"Timeline__wrapper\" ref={ref}>\n        <svg width={dms.width} height={dms.height} className=\"Timeline__svg\">\n          <path d={areaD} className=\"Timeline__area\" />\n          <path d={areaUndertaintyD} className=\"Timeline__uncertainty-area\" />\n          <path d={lineD} className=\"Timeline__line\" />\n        </svg>\n        <div className=\"Timeline__x-ticks\">\n          {xTicks.map(([offset, year]) => (\n            <div key={year} className=\"Timeline__x-tick\" style={{\n              transform: `translateX(${offset}px)`\n            }} />\n          ))}\n        </div>\n      </div>\n      <div className=\"Timeline__x\">\n        {yearsExtent.map(year => <div key={year} className=\"Timeline__year\">{year}</div>)}\n      </div>\n      <svg width={dms.width} height={deltaHeight} className=\"Timeline__delta\">\n        <defs>\n          <linearGradient id={`Timeline__line-gradient--${timelineId}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0\" stopColor=\"transparent\" />\n            <stop offset={(deltaZero * 100 / deltaHeight) + \"%\"} stopColor=\"transparent\" />\n            <stop offset={(deltaZero * 100 / deltaHeight) + \"%\"} stopColor=\"#afb9c5\" />\n            <stop offset=\"100%\" stopColor=\"#afb9c5\" />\n          </linearGradient>\n        </defs>\n        <path d={lineDeltaD} fill=\"var(--accent-2)\" stroke=\"var(--accent-2)\" />\n        <path d={areaDeltaD} fill=\"var(--accent-2)\" />\n        <path d={lineDeltaD} fill={`url(#Timeline__line-gradient--${timelineId})`} stroke={`url(#Timeline__line-gradient--${timelineId})`} />\n        <path d={areaDeltaD} fill={`url(#Timeline__line-gradient--${timelineId})`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Timeline","import React from \"react\";\nimport { timeFormat } from \"d3\"\nimport { benchmarkData, benchmarkInfo } from \"./constants\"\nimport { getOrdinal } from \"./../../utils\"\nimport Timeline from \"./Timeline\"\nimport \"./Benchmarks.css\"\n\nconst xAccessor = d => new Date([d.month || 1, d.day || 1, d.year].join(\"/\"))\nconst yAccessor = d => d.level\nconst yMinAccessor = d => d.min || d.level\nconst yMaxAccessor = d => d.max || d.level\nconst Benchmarks = ({ data }) => {\n  console.log(benchmarkData)\n  console.log(data)\n  const benchmarks = Object.keys(benchmarkInfo)\n  console.log(benchmarks)\n\n  const formatDate = d => [\n    timeFormat(\"%B %-d\")(d),\n    getOrdinal(d.getDate(d)),\n    timeFormat(\", %Y\")(d),\n  ].join(\"\")\n  const getDate = d => formatDate(xAccessor(d))\n\n  return (\n    <div className=\"Benchmarks\">\n      <h1>Earth Health KPIs</h1>\n      <div className=\"Benchmarks__grid\">\n        {benchmarks.map(benchmarkName => {\n          const data = benchmarkData[benchmarkName].levels\n          const latestValue = data[data.length - 1]\n          const info = benchmarkInfo[benchmarkName]\n          return (\n            <div className=\"Benchmarks__card\" key={benchmarkName}>\n              <div className=\"Benchmarks__card__top\">\n                <h2>{info.name}</h2>\n                <div className=\"Benchmarks__card__top__value\">\n                  <div className=\"Benchmarks__value\">\n                    {latestValue.level.toLocaleString()} {benchmarkData[benchmarkName].unit}\n                  </div>\n                </div>\n              </div>\n              <div className=\"Benchmarks__chart\">\n                <Timeline data={data} xAccessor={xAccessor} yAccessor={yAccessor} yMinAccessor={yMinAccessor} yMaxAccessor={yMaxAccessor} />\n              </div>\n              <div className=\"Benchmarks__note\">\n                <div>Last updated: {getDate(latestValue)}</div>\n                <div>Data from <a href={info.sourceUrl}>{info.source}</a></div>\n              </div>\n              <div className=\"Benchmarks__fact\">\n                {info.fact}\n              </div>\n            </div>\n          )\n        })}\n\n        <div className=\"Benchmarks__card Benchmarks__card--metrics\">\n          <h2>Extreme weather</h2>\n          <div className=\"Benchmarks__metric-row\">\n            <div>\n              Climate-related disasters in the past 20 years, <em>compared to the previous 20-year period</em>\n            </div>\n            <div className=\"Benchmarks__value\">\n              +83%\n            </div>\n          </div>\n          <div className=\"Benchmarks__metric-row\">\n            <div>\n              Change in number of wildfires in California <em>since the early 1970s</em>\n            </div>\n            <div className=\"Benchmarks__value\">\n              +500%\n            </div>\n          </div>\n          <div className=\"Benchmarks__note\">\n            <div>Data from <a href=\"https://e360.yale.edu/digest/extreme-weather-events-have-increased-significantly-in-the-last-20-years\">the Yale School of the Environment</a> & <a href=\"https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2019EF001210\">AGU</a></div>\n          </div>\n          <div className=\"Benchmarks__fact\">\n          </div>\n        </div>\n        <div className=\"Benchmarks__card Benchmarks__card--metrics\">\n          <h2>Global forest area</h2>\n          <div className=\"Benchmarks__metric-row\">\n            <div>\n              Change in forest area <em>per year</em> (past 5 years)\n            </div>\n            <div className=\"Benchmarks__value\">\n              -0.12%\n            </div>\n          </div>\n          <div className=\"Benchmarks__metric-row\">\n            <div>\n              Change in forest area <em>in the past 20 years</em>\n            </div>\n            <div className=\"Benchmarks__value\">\n              -6.3%\n            </div>\n          </div>\n          <div className=\"Benchmarks__metric-row\">\n            <div>\n              Change in tree cover in <em>2020</em>\n            </div>\n            <div className=\"Benchmarks__value\">\n              -25.8 Mha\n            </div>\n          </div>\n          <div className=\"Benchmarks__note\">\n            <div>Data from <a href=\"http://www.fao.org/forest-resources-assessment/en/\">the Food and Agriculture Organization of the UN</a> & <a href=\"https://www.globalforestwatch.org/dashboards/global/\">Global Forest Watch</a></div>\n          </div>\n          <div className=\"Benchmarks__fact\">\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Benchmarks","import React, { useMemo } from \"react\";\n\nimport { data } from \"./../constants\";\nimport { useQueryParams } from \"./../utils\";\nimport Network from \"./Network/Network\";\nimport MapWrapper from \"./Map/MapWrapper\";\nimport Benchmarks from \"./Benchmarks/Benchmarks\";\n\nimport \"./App.css\";\n\nconsole.log(data);\n\nfunction App() {\n  const [params, updateParams] = useQueryParams();\n\n  const onChangeState = (type, newState) => {\n    updateParams({ [type]: newState });\n  };\n\n  const viz = params[\"viz\"] || \"network\";\n  const groupType = params[\"group\"] || \"Interventions\";\n  const searchTerm = params[\"search\"] || \"\";\n  const isEmbed = !!params[\"embed\"];\n  const projectionName = params[\"projection\"];\n  const focusedMitigationArea = params[\"mitigation-area\"];\n  const focusedCountry = params[\"country\"];\n  const backCountry = params[\"back-country\"];\n  const backMitigationArea = params[\"back-mitigation-area\"];\n\n  const focusedItem = useMemo(() => {\n    if (!params[\"item\"]) return null;\n    const itemGroupType = params[\"item\"].split(\"--\")[0];\n    const matchingItem = (data[itemGroupType || groupType] || []).find(\n      (d) => d[\"id\"] === params[\"item\"]\n    );\n    if (!matchingItem) return null;\n    return matchingItem;\n  }, [params[\"item\"], data]);\n\n  const focusedNode = useMemo(() => {\n    if (!params[\"focused\"] || typeof params[\"focused\"] != \"string\") return null;\n    const itemGroupType = params[\"focused\"].split(\"--\")[0];\n    const matchingItem = (data[itemGroupType || groupType] || []).find(\n      (d) => d[\"id\"] === params[\"focused\"]\n    );\n    if (!matchingItem) return null;\n    return matchingItem;\n  }, [params[\"focused\"], data]);\n\n  const onChangeViz = (viz, e) => {\n    e.preventDefault()\n    // change the url param\n    onChangeState(\"viz\", viz);\n  }\n\n  return (\n    <div className={`App App--is-${isEmbed ? \"embed\" : \"normal\"}`}>\n      <div className=\"App__nav\">\n        {[\n          [\"Network\", \"network\"],\n          [\"Map\", \"map\"],\n          [\"Benchmarks\", \"benchmarks\"],\n        ].map(([label, slug]) => (\n          <a\n            key={slug}\n            href={`?viz=${slug}`}\n            className={viz === slug ? \"active\" : \"inactive\"}\n            onClick={(e) => onChangeViz(slug, e)}\n          >\n            {label}\n          </a>\n        ))}\n      </div>\n      {viz === \"network\" ? (\n        <Network\n          {...{\n            data,\n            groupType,\n            focusedItem,\n            focusedNode,\n            searchTerm,\n            onChangeState,\n          }}\n        />\n      ) : viz === \"benchmarks\" ? (\n        <Benchmarks\n          data={data}\n        />\n\n      ) : (\n        <MapWrapper\n          data={data}\n          {...{\n            focusedItem,\n            focusedCountry,\n            focusedMitigationArea,\n            backCountry,\n            backMitigationArea,\n            projectionName,\n            onChangeState,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}