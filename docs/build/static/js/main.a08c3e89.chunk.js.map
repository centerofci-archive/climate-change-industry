{"version":3,"sources":["utils.js","constants.js","components/Icon/Icon.jsx","components/Network/NetworkSearch.jsx","components/CircleText.jsx","components/Network/NetworkBubbles.jsx","components/Network/NetworkFilters.jsx","components/Network/NetworkList.jsx","components/Network/NetworkTooltip.jsx","components/Network/StatusPill.jsx","components/Network/NetworkModal.jsx","group-options.js","components/Network/Network.jsx","components/App.js","index.js"],"names":["move","x","y","arguments","length","undefined","isAttr","transform","concat","runningId","getUniqueId","flatten","arr","reduce","a","b","Object","toConsumableArray","getPointFromAngleAndDistance","angle","distance","Math","cos","PI","sin","getAngleFromPoints","p1","p2","atan2","keepBetween","value","min","max","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","combineChartDimensions","dimensions","parsedDimensions","objectSpread","marginTop","marginRight","marginBottom","marginLeft","boundedHeight","height","boundedWidth","width","fromPairs","res","forEach","d","getUrlParams","parts","window","location","search","slice","split","params","part","_part$split","_part$split2","slicedToArray","key","decodeURIComponent","paramsObjectToString","obj","keys","values","map","i","encodeURIComponent","join","filter","useQueryParams","_useState5","useState","_useState6","localParams","setLocalParams","currentParams","useRef","useEffect","current","setParams","newParams","newUrl","protocol","host","pathname","history","pushState","path","types","getContributionArea","Set","sort","data","type","rawData","mainContributionArea","colors","typeColors","contributionAreas","contributionAreaColorsList","contributionAreaColors","contributionArea","contributionAreaColorCombos","handleCombo","areaNames","slug","push","otherContributionArea","statusColors","Active","fieldLabels","Entity Type","typeShapes","Interventions","react_default","createElement","Investments","Actors","cx","cy","r","Organizations","style","Regulations","sizes","xs","s","m","l","xl","Icon","_ref","name","_ref$size","size","_ref$direction","direction","className","props","objectWithoutProperties","dimension","assign","viewBox","iconPaths","arrow","pause","Fragment","play","refresh","NetworkSearch","searchTerm","setSearchTerm","_useState","_useState2","searchTermLocal","setSearchTermLocal","_useState3","_useState4","isOpen","setIsOpen","allItems","useMemo","debouncedSearchTerm","delay","_useState7","_useState8","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","didMount","setDidMount","uniqueStringsPerField","fields","field","items","collection","func","object","create","item","countBy","fieldToAccessorMap","searchTermLocalLower","filteredStringsPerField","includes","onKeydown","e","addEventListener","removeEventListener","onChange","newSearchTerm","target","placeholder","onFocus","components_Icon_Icon","onClick","CircleText","_ref$r","_ref$rotate","rotate","children","id","fill","pointerEvents","textAnchor","href","startOffset","NetworkBubbles","groupType","groupMeta","activeFilters","onFocusItem","focusedItem","hoveredItem","onHoverItem","focusedNode","setFocusedNodeId","_useChartDimensions","passedSettings","ref","changeWidth","changeHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","_useChartDimensions2","dms","timeout","simulation","simulationData","groups","links","cachedGroupPositions","forceUpdate","setValue","useForceUpdate","clusterByKey","getClusterName","getSize","baseCircleSize","_useMemo","clusters","clusterName","group","count","area","sqrt","numberOfGroups","groupPositions","1","2","3","n","pointRadius","angleDiff","points","_","radius","asin","centerX","apply","centerY","getSpiralPositions","clusterPositions","_ref2","getClusterPosition","positions","avg","stop","linkKeys","initialLinks","_ref3","_ref4","tableName","typeOfLink","targetId","find","source","index","nodes","isMain","link","getId","getMatches","investments","startsWith","has","_objectSpread2","cachedPosition","clusterPosition","matchTypes","matches","getMatchTypes","color","getColor","numberOfLinks","defineProperty","newFocusedNode","matchingLinks","matchingIds","nextLevelMatchingLinks","nextLevelMatchingIds","getDistanceFromFocusedNode","isAttachedToFocusedNode","forceSimulation","force","forceX","strength","forceY","forceLink","forceCollide","iterations","alphaMin","alpha","on","onTick","groupBubbles","_ref5","_ref5$items","position","hull","polygonHull","top","updateTooltip","getLinkPath","_ref6","reverseAngle","startDiff","targetDiff","reverse","getItemOpacity","label","Number","isFinite","isInHoveredPointNetwork","_ref7","filterValue","getFilterFromItem","stopColor","offset","_ref8","refX","refY","markerWidth","markerHeight","orient","baseFrequency","result","numOctaves","in","in2","scale","xChannelSelector","yChannelSelector","_ref9","strokeWidth","markerStart","opacity","onMouseEnter","onMouseLeave","components_CircleText","len","truncate","floor","_ref10","NetworkFilters","filters","onUpdateFilters","parsedFilters","state","activeFilterOfType","getFilterState","otherActiveFilters","newFilters","onClickItem","--override-color","NetworkList","setActiveFilters","isItemActive","onSetFilter","getFilterValue","_useMemo2","actors","organizations","isSelected","NetworkTooltip","isFocused","format","StatusPill","status","--status-color","background","NetworkModal","_ref$info","info","onClose","components_Network_StatusPill","rel","amountSizeScale","scaleLog","domain","range","clamp","groupOptions","pluralNoun","accessor","clusterBy","indexOf","groupOptionsById","Network","onChangeState","useCallback","newItem","newTerm","onCloseFocusedItem","components_Network_NetworkList","components_Network_NetworkSearch","components_Network_NetworkFilters","components_Network_NetworkBubbles","components_Network_NetworkTooltip","components_Network_NetworkModal","console","log","App","_useQueryParams","_useQueryParams2","updateParams","viz","itemGroupType","matchingItem","components_Network_Network","newState","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a08c3e89.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { format } from \"d3-format\";\nimport { timeParse } from \"d3-time-format\";\n\nexport const move = (x, y = 0, isAttr = false) => ({\n  transform: `translate(${x}${isAttr ? \"\" : \"px\"}, ${y}${isAttr ? \"\" : \"px\"})`,\n});\n\nexport const moveCentered = (x, y = 0) => ({\n  transform: `translate(calc(${x}px - 50%), calc(${y}px - 50%))`,\n});\n\nexport const moveTooltip = (x, y = 0) => ({\n  transform: `translate(calc(${x}px - 50%), calc(${y}px - 100%))`,\n});\n\nexport const getSpiralPositions = (\n  n = 100,\n  pointRadius = 5,\n  angleDiff = 2,\n  distance = 1.5\n) => {\n  let angle = 0;\n  let points = new Array(n).fill(0).map((_, i) => {\n    const radius = Math.sqrt(i + 0.6) * pointRadius * distance;\n    angle += Math.asin(1 / radius) * pointRadius * angleDiff;\n    angle = angle % (Math.PI * 2);\n    const x = Math.cos(angle) * radius;\n    const y = Math.sin(angle) * radius;\n    return {\n      x: i ? x : x * 0.3,\n      y: i ? y : y * 1,\n      angle,\n      r: radius,\n    };\n  });\n  // let firstPoint = points[0];\n  return points.map((d, i) => ({\n    ...d,\n    // x: d[\"x\"] - firstPoint[\"x\"],\n    // y: d[\"y\"] - firstPoint[\"y\"],\n    centerX:\n      (Math.min(...points.slice(0, i).map((d) => d[\"x\"])) +\n        Math.max(...points.slice(0, i).map((d) => d[\"x\"]))) /\n      2,\n    centerY:\n      (Math.min(...points.slice(0, i).map((d) => d[\"y\"])) +\n        Math.max(...points.slice(0, i).map((d) => d[\"y\"]))) /\n      2,\n  }));\n};\n\nlet runningId = 0;\nexport const getUniqueId = () => {\n  runningId++;\n  return runningId;\n};\n\nexport const flatten = (arr) => arr.reduce((a, b) => [...a, ...b], []);\n\nexport const getPointFromAngleAndDistance = (angle, distance) => ({\n  x: Math.cos((angle * Math.PI) / 180) * distance,\n  y: Math.sin((angle * Math.PI) / 180) * distance,\n});\n\nexport const getAngleFromPoints = (p1, p2) =>\n  Math.atan2(p1.y - p2.y, p1.x - p2.x) * (180 / Math.PI);\n\nexport const getAngleFromRadiusAndDistance = (r, distance) =>\n  Math.atan(distance / (2 * r)) * 2 * (180 / Math.PI);\n\nexport const sum = (arr) => arr.reduce((a, b) => a + b, 0);\n\nexport const getDistanceFromXY = ([x, y]) =>\n  Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\nexport const getNumberWithUnits = (d, numDecimals = 1) => {\n  const siUnits = Math.floor((d / 10).toFixed(0).toString().length);\n  return siUnits >= 15\n    ? format(`.${numDecimals}f`)(d / 1000000000000000) + \" quadrillion\"\n    : siUnits >= 12\n    ? format(`.${numDecimals}f`)(d / 1000000000000) + \" trillion\"\n    : siUnits >= 9\n    ? format(`.${numDecimals}f`)(d / 1000000000) + \" billion\"\n    : siUnits >= 6\n    ? format(`.${numDecimals}f`)(d / 1000000) + \" million\"\n    : siUnits >= 3\n    ? format(`.${numDecimals}f`)(d / 1000) + \" thousand\"\n    : d < 0.001\n    ? 0\n    : d < 0.1\n    ? format(`,.2f`)(d)\n    : format(`,.02f`)(d);\n};\n\n// grabbed from https://gist.github.com/callumlocke/cc258a193839691f60dd\nexport const scaleCanvas = (canvas, context, width, height) => {\n  // assume the device pixel ratio is 1 if the browser doesn't specify it\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // determine the 'backing store ratio' of the canvas context\n  const backingStoreRatio =\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  // determine the actual ratio we want to draw at\n  const ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    // set the 'real' canvas size to the higher width/height\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n\n    // ...then scale it back down with CSS\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n  } else {\n    // this is a normal 1:1 device; just scale it simply\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = \"\";\n    canvas.style.height = \"\";\n  }\n\n  // scale the drawing context so everything will work at the higher ratio\n  context.scale(ratio, ratio);\n};\n\n// from https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport const debounce = (func, wait, immediate) => {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport const getDomainNameFromUrl = (url) => {\n  var hostname;\n  //find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf(\"//\") > -1) {\n    hostname = url.split(\"/\")[2];\n  } else {\n    hostname = url.split(\"/\")[0];\n  }\n\n  //find & remove port number\n  hostname = hostname.split(\":\")[0];\n  hostname = hostname.replace(\"www.\", \"\");\n  //find & remove \"?\"\n  hostname = hostname.split(\"?\")[0];\n\n  return hostname;\n};\n\nexport const groupBy = function (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n\nexport const parseDate = (date) => {\n  if (!date) return null;\n  const numberOfSlashes = date.split(/\\//g).length - 1;\n  const dateFormat = numberOfSlashes === 2 ? \"%m/%d/%Y\" : \"%Y\";\n  return timeParse(dateFormat)(date);\n};\n\nexport const sortBy = (arr, key) =>\n  arr.sort((a, b) =>\n    (typeof key === \"function\" ? key(a) : a[key]) >\n    (typeof key === \"function\" ? key(b) : b[key])\n      ? 1\n      : -1\n  );\nexport const sortByFunction = (key) => (a, b) =>\n  (typeof key === \"function\" ? key(a) : a[key]) >\n  (typeof key === \"function\" ? key(b) : b[key])\n    ? 1\n    : -1;\n\nexport const keepBetween = (value, min, max) =>\n  Math.max(min, Math.min(max, value));\n\nexport function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nexport const combineChartDimensions = (dimensions) => {\n  let parsedDimensions = {\n    marginTop: 0,\n    marginRight: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    ...dimensions,\n  };\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nexport const useChartDimensions = (passedSettings) => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n\n  const [width, changeWidth] = useState(0);\n  const [height, changeHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n\n      const entry = entries[0];\n\n      if (width !== entry.contentRect.width)\n        changeWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        changeHeight(entry.contentRect.height);\n    });\n\n    resizeObserver.observe(element);\n\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n\nexport const fromPairs = (arr) => {\n  let res = {};\n  arr.forEach((d) => {\n    res[d[0]] = d[1];\n  });\n  return res;\n};\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport const getUrlParams = () => {\n  const parts = window.location.search.slice(1).split(\"&\");\n  if (!parts) return;\n  let params = {};\n  parts.forEach((part) => {\n    const [key, value] = part.split(\"=\");\n    if (!key) return;\n    params[key] = decodeURIComponent(value);\n  });\n  return params;\n};\n\nconst paramsObjectToString = (obj) => {\n  const keys = Object.keys(obj);\n  const values = Object.values(obj);\n  return keys\n    .map((key, i) => [key, values[i]].map(encodeURIComponent).join(\"=\"))\n    .filter((d, i) => values[i] != null)\n    .join(\"&\");\n};\n\nexport const useQueryParams = () => {\n  const [localParams, setLocalParams] = useState(getUrlParams);\n  const currentParams = useRef({});\n\n  useEffect(() => {\n    const params = getUrlParams();\n    setLocalParams(params);\n    currentParams.current = params;\n  }, []);\n\n  const updateParams = (newParams) => {\n    setParams({\n      ...currentParams.current,\n      ...newParams,\n    });\n  };\n\n  const setParams = (newParams) => {\n    const newUrl = [\n      window.location.protocol,\n      \"//\",\n      window.location.host,\n      window.location.pathname,\n      \"?\",\n      paramsObjectToString(newParams),\n    ].join(\"\");\n    window.history.pushState({ path: newUrl }, \"\", newUrl);\n    setLocalParams(newParams);\n    currentParams.current = newParams;\n  };\n\n  return [localParams, updateParams, setParams];\n};\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function countBy(collection, func) {\n  var object = Object.create(null);\n\n  collection.forEach(function (item) {\n    var key = func(item);\n    if (key in object) {\n      ++object[key];\n    } else {\n      object[key] = 1;\n    }\n  });\n\n  return object;\n}\n\nexport const truncate = (str, len = 23) =>\n  str.length > len - 2 ? str.slice(0, len) + \"...\" : str;\n","import React from \"react\";\nimport rawData from \"./data.json\";\nimport { fromPairs } from \"./utils\";\n\nexport const types = [\"Interventions\", \"Investments\", \"Actors\"];\n\nconst getContributionArea = (d) => {\n  return [\n    ...new Set(d[\"Topical Contribution Area\"].map((d) => d.split(\":\")[0])),\n  ].sort();\n  // .join(\" & \");\n};\nexport const data = fromPairs(\n  types.map((type) => [\n    type,\n    rawData[type].map((d) => ({\n      ...d,\n      mainContributionArea: d[\"Topical Contribution Area\"]\n        ? getContributionArea(d)\n        : null,\n    })),\n  ])\n);\n\nconst colors = [\"#4d405a\", \"#4d405a\", \"#4d405a\", \"#4d405a\"];\n\nlet typeColors = {};\ntypes.forEach((type, i) => {\n  typeColors[type] = colors[i % colors.length];\n});\nexport { typeColors };\n\nexport const contributionAreas = [\"Mitigation\", \"Geoengineering\", \"Adaptation\"];\n// const contributionAreaColorsList = [\"#89b792\", \"#4d405a\", \"#F79F1F\"];\nconst contributionAreaColorsList = [\n  \"var(--accent-2)\",\n  \"var(--accent-3)\",\n  \"var(--accent-4)\",\n];\nlet contributionAreaColors = {};\ncontributionAreas.forEach((contributionArea, i) => {\n  contributionAreaColors[contributionArea] =\n    contributionAreaColorsList[i % colors.length];\n});\nlet contributionAreaColorCombos = [];\nconst handleCombo = (areaNames) => {\n  const slug = areaNames.sort().join(\"--\");\n  contributionAreaColorCombos.push({\n    slug,\n    colors: areaNames.map((d) => contributionAreaColors[d]),\n  });\n  contributionAreaColors[slug] = `url(#${slug})`;\n};\ncontributionAreas.forEach((contributionArea, i) => {\n  contributionAreas.slice(i + 1).forEach((otherContributionArea) => {\n    const areaNames = [contributionArea, otherContributionArea];\n    handleCombo(areaNames);\n  });\n});\nhandleCombo(contributionAreas);\nexport { contributionAreaColors, contributionAreaColorCombos };\n\nexport const statusColors = {\n  Active: \"#89b792\",\n};\n\nexport const fieldLabels = {\n  mainContributionArea: \"Main contribution area\",\n  \"Entity Type\": \"actor type\",\n};\n\nexport const typeShapes = {\n  Interventions: (\n    <g transform=\"translate(-50, -50)\">\n      {/* <path d=\"M78.4,37.6l-3.1,3.1c2.2,4.5,3.4,9.6,3.4,15c0,19-15.4,34.4-34.4,34.4C25.5,90,10,74.6,10,55.6c0-19,15.4-34.4,34.4-34.4     c5.4,0,10.4,1.2,14.9,3.4l3.1-3.1v-3.8c-5.5-2.6-11.6-4.1-18-4.1c-23.1,0-41.9,18.8-41.9,41.9c0,23.1,18.8,41.9,41.9,41.9     c23.1,0,41.9-18.8,41.9-41.9c0-6.4-1.5-12.5-4.1-18H78.4z\" />\n      <path d=\"M44.4,36.7c0.9,0,1.8,0.1,2.7,0.2l6.2-6.2c-2.8-1.1-5.7-1.6-8.9-1.6C29.8,29.2,18,41,18,55.6c0,14.6,11.8,26.5,26.5,26.5     c14.6,0,26.5-11.9,26.5-26.5c0-3.1-0.6-6.1-1.6-8.9l-6.2,6.2c0.2,0.9,0.2,1.8,0.2,2.7c0,10.4-8.5,18.9-18.9,18.9     C34,74.5,25.5,66,25.5,55.6S34,36.7,44.4,36.7z\" />\n      <path d=\"M97.3,16.7c-0.4-1.1-1.5-1.7-2.6-1.7h-9.6V5.3c0-1.1-0.7-2.2-1.7-2.6c-1.1-0.4-2.3-0.2-3.1,0.6l-9.5,9.5     c-0.5,0.5-0.8,1.2-0.8,2v9.9L49,45.6c-1.4-0.7-3-1.1-4.6-1.1c-6.1,0-11,4.9-11,11s4.9,11,11,11s11-4.9,11-11     c0-1.7-0.4-3.2-1.1-4.6L75.3,30h9.9c0.7,0,1.5-0.3,2-0.8l9.5-9.5C97.5,18.9,97.7,17.7,97.3,16.7z\" /> */}\n      <path d=\"M50,5C25.2,5,5,25.2,5,50s20.2,45,45,45s45-20.2,45-45S74.8,5,50,5z M50,85c-19.3,0-35-15.7-35-35s15.7-35,35-35   s35,15.7,35,35S69.3,85,50,85z\" />\n      <path d=\"M50,20c-16.5,0-30,13.5-30,30s13.5,30,30,30s30-13.5,30-30S66.5,20,50,20z M50,70c-11,0-20-9-20-20s9-20,20-20s20,9,20,20   S61,70,50,70z\" />\n      <path d=\"M50,35c-8.3,0-15,6.7-15,15s6.7,15,15,15s15-6.7,15-15S58.3,35,50,35z M50,55c-2.8,0-5-2.2-5-5s2.2-5,5-5s5,2.2,5,5   S52.8,55,50,55z\" />\n    </g>\n  ),\n  Investments: (\n    <g transform=\"translate(-50, -50)\">\n      <path d=\"M68.27,28.08H31.73S6.15,50,6.15,75.58c0,14.61,11,21.92,18.27,21.92H75.58c7.3,0,18.27-7.31,18.27-21.92C93.85,50,68.27,28.08,68.27,28.08ZM53.65,78.86v5.85h-7.3V78.88c-5.38-1-8.76-4.32-9-9.14h6.33c.31,2.53,2.86,4.16,6.55,4.16,3.4,0,5.81-1.65,5.81-4,0-2-1.56-3.14-5.4-4l-4.07-.87c-5.7-1.19-8.5-4.16-8.5-8.93s3.18-8.21,8.24-9.34V40.87h7.3v5.9c4.94,1.1,8.23,4.47,8.39,9H55.89c-.31-2.47-2.61-4.12-5.77-4.12s-5.44,1.52-5.44,3.9c0,1.93,1.49,3,5.16,3.82l3.77.8c6.29,1.32,9,4,9,8.89C62.61,74.29,59.25,77.79,53.65,78.86Z\" />\n      <path d=\"M68.27,6.15H58.17a11,11,0,0,0-16.34,0H31.73a3.66,3.66,0,0,0-3.39,5l3.39,9.61H68.27l3.39-9.61A3.66,3.66,0,0,0,68.27,6.15Z\" />\n    </g>\n  ),\n  Actors: (\n    <g transform=\"translate(-50, -50)\">\n      <circle cx=\"47.5\" cy=\"30.028\" r=\"22.623\" />\n      <path d=\"M68.213,49.752c-5.217,5.477-12.57,8.898-20.713,8.898s-15.496-3.422-20.713-8.898c-8.004,3.217-13.162,8.25-13.162,13.911   c0,9.712,15.166,23.932,33.875,23.932s33.875-14.22,33.875-23.932C81.375,58.002,76.217,52.969,68.213,49.752z\" />\n    </g>\n  ),\n  Organizations: (\n    <g style={{ transform: \"scale(4) translate(-12.5px, -12.5px)\" }}>\n      <path d=\"M18,22 L22,22 L22,13 L18,13 L18,22 Z M13,10 L11,10 C10.447,10 10,9.552 10,9 C10,8.448 10.447,8 11,8 L13,8 C13.553,8 14,8.448 14,9 C14,9.552 13.553,10 13,10 L13,10 Z M13,14 L11,14 C10.447,14 10,13.552 10,13 C10,12.448 10.447,12 11,12 L13,12 C13.553,12 14,12.448 14,13 C14,13.552 13.553,14 13,14 L13,14 Z M13,18 L11,18 C10.447,18 10,17.552 10,17 C10,16.448 10.447,16 11,16 L13,16 C13.553,16 14,16.448 14,17 C14,17.552 13.553,18 13,18 L13,18 Z M2,22 L6,22 L6,8 L2,8 L2,22 Z M23,11 L22,11 L22,9 C22,8.448 21.553,8 21,8 C20.447,8 20,8.448 20,9 L20,11 L18,11 L18,4 C18,3.448 17.553,3 17,3 L13,3 L13,1 C13,0.448 12.553,0 12,0 C11.447,0 11,0.448 11,1 L11,3 L7,3 C6.447,3 6,3.448 6,4 L6,6 L4,6 L4,4 C4,3.448 3.553,3 3,3 C2.447,3 2,3.448 2,4 L2,6 L1,6 C0.447,6 0,6.448 0,7 L0,23 C0,23.552 0.447,24 1,24 L7,24 L17,24 L23,24 C23.553,24 24,23.552 24,23 L24,12 C24,11.448 23.553,11 23,11 L23,11 Z\" />\n    </g>\n  ),\n  Regulations: (\n    <g transform=\"translate(-50, -50)\">\n      <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    </g>\n  ),\n};\n","import React from \"react\";\n\nimport \"./Icon.css\";\n\nconst sizes = {\n  xs: 9,\n  s: 12,\n  m: 19,\n  l: 25,\n  xl: 45,\n};\nconst Icon = ({ name, size = \"m\", direction = \"e\", className, ...props }) => {\n  const dimension = sizes[size];\n\n  return (\n    <svg\n      className={`Icon Icon--direction-${direction} ${className}`}\n      width={dimension}\n      height={dimension}\n      viewBox=\"0 0 25 25\"\n      {...props}\n    >\n      {iconPaths[name]}\n    </svg>\n  );\n};\n\nexport default Icon;\n\nconst iconPaths = {\n  arrow: (\n    <path d=\"M12.1454 0.796729C13.1125 -0.0711128 14.5999 0.00929699 15.4678 0.976329L24.3983 10.9276C25.2006 11.8216 25.2006 13.1763 24.3983 14.0703L15.4678 24.0216C14.5999 24.9886 13.1125 25.069 12.1454 24.2012C11.1784 23.3333 11.098 21.8459 11.9658 20.8788L17.0146 15.253H2.35268C1.05333 15.253 0 14.1996 0 12.9003C0 11.601 1.05333 10.5476 2.35268 10.5476H17.735L11.9658 4.11906C11.098 3.15203 11.1784 1.66457 12.1454 0.796729Z\" />\n  ),\n  pause: (\n    <>\n      <path d=\"M9.5 21.9092V3.15918C9.5 1.43329 8.10089 0.0341797 6.375 0.0341797C4.64911 0.0341797 3.25 1.43329 3.25 3.15918V21.9092C3.25 23.6351 4.64911 25.0342 6.375 25.0342C8.10089 25.0342 9.5 23.6351 9.5 21.9092Z\" />\n      <path d=\"M22 21.9092V3.15918C22 1.43329 20.6009 0.0341797 18.875 0.0341797C17.1491 0.0341797 15.75 1.43329 15.75 3.15918V21.9092C15.75 23.6351 17.1491 25.0342 18.875 25.0342C20.6009 25.0342 22 23.6351 22 21.9092Z\" />\n    </>\n  ),\n  play: (\n    <path d=\"M2.15039 4.29245C2.15039 1.59772 5.1315 -0.029815 7.39825 1.42738L21.5358 10.5158C23.6214 11.8565 23.6214 14.9052 21.5358 16.2459L7.39825 25.3343C5.1315 26.7915 2.15039 25.164 2.15039 22.4693V4.29245Z\" />\n  ),\n  refresh: (\n    <path d=\"M6.97937 3.40529C8.70577 2.45337 10.6948 2.08834 12.6467 2.36521C14.5986 2.64207 16.4076 3.54582 17.8012 4.94028C17.8093 4.94841 17.8176 4.95642 17.8259 4.9643L21.0026 7.95574H17.048C16.4203 7.95574 15.9115 8.4646 15.9115 9.09231C15.9115 9.72002 16.4203 10.2289 17.048 10.2289H23.8643H23.8675C24.0269 10.2289 24.1787 10.196 24.3165 10.1367C24.4544 10.0775 24.5828 9.98985 24.6925 9.874C24.7014 9.86462 24.7102 9.85508 24.7187 9.8454C24.9095 9.62998 25.0041 9.36088 25.004 9.09232C25.004 9.09121 25.004 9.09009 25.004 9.08898V2.27288C25.004 1.64517 24.4952 1.13631 23.8675 1.13631C23.2397 1.13631 22.7309 1.64517 22.7309 2.27288V6.46082L19.3966 3.32095C17.6563 1.58497 15.4 0.45984 12.9659 0.11459C10.526 -0.231487 8.03977 0.224801 5.88178 1.4147C3.72379 2.60459 2.01099 4.46363 1.00148 6.71166C-0.00803095 8.9597 -0.259554 11.4749 0.284811 13.8784C0.829176 16.2818 2.13994 18.4432 4.01957 20.0368C5.89921 21.6305 8.24589 22.5701 10.706 22.714C13.1661 22.8579 15.6063 22.1984 17.6589 20.8347C19.7116 19.4711 21.2654 17.4773 22.0863 15.1538C22.2954 14.5619 21.9851 13.9126 21.3933 13.7035C20.8014 13.4944 20.1521 13.8047 19.943 14.3966C19.2863 16.2554 18.0432 17.8504 16.4011 18.9413C14.759 20.0322 12.8068 20.5599 10.8387 20.4447C8.87066 20.3296 6.99332 19.5779 5.48961 18.303C3.9859 17.0281 2.93729 15.299 2.5018 13.3762C2.06631 11.4535 2.26753 9.44129 3.07513 7.64286C3.88274 5.84443 5.25298 4.35721 6.97937 3.40529Z\" />\n  ),\n  x: (\n    <path d=\"M24.7678 4.76777C25.7441 3.79146 25.7441 2.20854 24.7678 1.23223C23.7915 0.255922 22.2085 0.255922 21.2322 1.23223L13 9.46447L4.76777 1.23223C3.79146 0.255922 2.20854 0.255922 1.23223 1.23223C0.255923 2.20854 0.255923 3.79146 1.23223 4.76777L9.46447 13L1.23223 21.2322C0.255923 22.2085 0.255923 23.7915 1.23223 24.7678C2.20854 25.7441 3.79146 25.7441 4.76777 24.7678L13 16.5355L21.2322 24.7678C22.2085 25.7441 23.7915 25.7441 24.7678 24.7678C25.7441 23.7915 25.7441 22.2085 24.7678 21.2322L16.5355 13L24.7678 4.76777Z\" />\n  ),\n};\n","import React, { useEffect, useState, useMemo } from \"react\";\n\nimport {\n  countBy,\n  flatten,\n  useDebounce,\n  sortByFunction,\n  fromPairs,\n} from \"./../../utils\";\nimport { types } from \"./../../constants\";\nimport Icon from \"./../Icon/Icon\";\n\nimport \"./NetworkSearch.css\";\n\nconst NetworkSearch = ({ data, searchTerm, setSearchTerm }) => {\n  const [searchTermLocal, setSearchTermLocal] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const allItems = useMemo(\n    () => flatten(types.map((type) => data[type].map((d) => ({ ...d, type })))),\n    [data]\n  );\n\n  useEffect(() => {\n    setSearchTermLocal(searchTerm);\n  }, [searchTerm]);\n\n  const debouncedSearchTerm = useDebounce(searchTermLocal, 300);\n\n  const [didMount, setDidMount] = useState(false);\n  useEffect(() => {\n    if (!didMount) {\n      setDidMount(true);\n      return;\n    }\n    setSearchTerm(searchTermLocal ? searchTermLocal : null);\n  }, [debouncedSearchTerm]);\n\n  const onSearchTermChange = (e) => {\n    const newSearchTerm = e.target.value;\n    setSearchTermLocal(newSearchTerm);\n  };\n\n  const uniqueStringsPerField = useMemo(() => {\n    let uniqueStringsPerField = {};\n    fields.forEach((field) => {\n      const items = countBy(allItems, fieldToAccessorMap[field]);\n      uniqueStringsPerField[field] = Object.keys(items)\n        .filter((d) => d)\n        .sort(sortByFunction((d) => -items[d]));\n    });\n    return uniqueStringsPerField;\n  }, [allItems]);\n\n  const searchTermLocalLower = searchTermLocal.toLowerCase();\n\n  const filteredStringsPerField = fromPairs(\n    fields.map((field) => [\n      field,\n      uniqueStringsPerField[field].filter((d) =>\n        d.toLowerCase().includes(searchTermLocalLower)\n      ),\n    ])\n  );\n\n  useEffect(() => {\n    const onKeydown = (e) => {\n      if (e.key !== \"Escape\") return;\n      setIsOpen(false);\n    };\n    window.addEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, []);\n\n  return (\n    <div className=\"NetworkSearch\">\n      <div className=\"NetworkSearch__input\">\n        <input\n          value={searchTermLocal}\n          onChange={onSearchTermChange}\n          placeholder=\"Search for a name\"\n          onFocus={() => setIsOpen(true)}\n        />\n        {!!searchTermLocal && (\n          <Icon\n            className=\"NetworkSearch__input__close\"\n            name=\"x\"\n            size=\"s\"\n            onClick={() => setSearchTerm(\"\")}\n          />\n        )}\n      </div>\n      {isOpen && (\n        <>\n          <div className=\"NetworkSearch__modal\">\n            {fields.map((field) => (\n              <div className=\"NetworkSearch__field\" key={field}>\n                <h6>{field}</h6>\n                <div className=\"NetworkSearch__options\">\n                  {filteredStringsPerField[field].slice(0, 5).map((item) => (\n                    <button\n                      className=\"NetworkSearch__option\"\n                      key={item}\n                      onClick={() => setSearchTerm(item)}\n                    >\n                      {item}\n                    </button>\n                  ))}\n                  {filteredStringsPerField[field].length > 4 && (\n                    <div className=\"NetworkSearch__more\">\n                      + {filteredStringsPerField[field].length - 4} more\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"NetworkSearch__modal__background\"\n            onClick={() => setIsOpen(false)}\n          ></div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NetworkSearch;\n\nconst fieldToAccessorMap = {\n  Interventions: (d) => [d[\"type\"] == \"Interventions\" ? d[\"label\"] : undefined],\n  Investments: (d) => [d[\"type\"] == \"Investments\" ? d[\"label\"] : undefined],\n  Actors: (d) => [d[\"type\"] == \"Actors\" ? d[\"label\"] : undefined],\n  Regulations: (d) => [d[\"type\"] == \"Regulations\" ? d[\"label\"] : undefined],\n};\nconst fields = Object.keys(fieldToAccessorMap);\n","import React, { useMemo } from \"react\";\nimport { getUniqueId } from \"./../utils\";\n\nconst CircleText = ({ r = 10, rotate = 0, children, ...props }) => {\n  const id = useMemo(getUniqueId, []);\n\n  return (\n    <>\n      <path\n        fill=\"transparent\"\n        d={[\n          [\"M\", 0, r].join(\" \"),\n          [\"A\", r, r, 0, 0, 1, 0, -r].join(\" \"),\n          [\"A\", r, r, 0, 0, 1, 0, r].join(\" \"),\n        ].join(\" \")}\n        id={id}\n        transform={`rotate(${rotate})`}\n        style={{ pointerEvents: \"none\" }}\n      ></path>\n      <text textAnchor=\"middle\" {...props}>\n        <textPath href={`#${id}`} startOffset=\"50%\">\n          {children}\n        </textPath>\n      </text>\n    </>\n  );\n};\n\nexport default CircleText;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  forceSimulation,\n  forceX,\n  forceY,\n  forceCollide,\n  forceLink,\n} from \"d3-force\";\nimport { scaleLinear } from \"d3-scale\";\nimport { polygonHull } from \"d3\";\n\nimport {\n  keepBetween,\n  truncate,\n  move,\n  getAngleFromPoints,\n  getPointFromAngleAndDistance,\n  flatten,\n  fromPairs,\n  getSpiralPositions,\n  sortBy,\n  useChartDimensions,\n} from \"./../../utils\";\nimport {\n  types,\n  contributionAreaColors,\n  contributionAreaColorCombos,\n  typeShapes,\n} from \"./../../constants\";\nimport CircleText from \"./../CircleText\";\n\nimport \"./NetworkBubbles.css\";\n\nconst NetworkBubbles = ({\n  data,\n  groupType,\n  groupMeta,\n  searchTerm,\n  activeFilters,\n  focusedItem,\n  onFocusItem,\n  hoveredItem,\n  onHoverItem,\n  focusedNode,\n  setFocusedNodeId,\n}) => {\n  const [ref, dms] = useChartDimensions();\n  const timeout = useRef();\n  const simulation = useRef();\n  const simulationData = useRef();\n  const groups = useRef([]);\n  const links = useRef([]);\n  const cachedGroupPositions = useRef({});\n  const forceUpdate = useForceUpdate();\n  const clusterByKey = (groupMeta || {})[\"clusterBy\"];\n  const getClusterName =\n    (groupMeta || {})[\"getClusterName\"] || ((d) => d[clusterByKey]);\n  const getColor = (d) =>\n    contributionAreaColors[d[\"mainContributionArea\"].sort().join(\"--\")] ||\n    \"#888\";\n  const getSize = (groupMeta || {})[\"getSize\"] || (() => 1);\n  const fromColor = \"#92C8C6\";\n  const toColor = \"#EEA969\";\n\n  const baseCircleSize =\n    (dms.width * dms.height * 0.001) / (data[groupType].length + 30);\n\n  const { clusters, clusterPositions } = useMemo(() => {\n    if (!data) return [];\n    let groups = {};\n    let clusters = [];\n    if (!clusterByKey) {\n      clusters = [\n        {\n          clusters: data[groupType].map((d) => ({\n            ...d,\n            name: \"\",\n            group: 1,\n            value: 10,\n          })),\n        },\n      ];\n    } else {\n      data[groupType].forEach((d) => {\n        let clusterName = getClusterName(d);\n        if (clusterName && clusterName.length > 1) return;\n        if (!groups[clusterName]) groups[clusterName] = [];\n        groups[clusterName].push({ ...d, group: clusterName, value: 10 });\n      });\n      Object.keys(groups).forEach((group) => {\n        const items = groups[group];\n        const count = items.length;\n        const area = items.reduce((a, b) => (a.value || 0) + (b.value || 0), 0);\n        clusters.push({\n          name: group,\n          count,\n          r: Math.sqrt(area / Math.PI),\n          items,\n        });\n      });\n    }\n    const numberOfGroups = clusters.length;\n    const groupPositions =\n      {\n        1: [[dms.width / 2, dms.height / 2]],\n        2: [\n          [dms.width / 5, dms.height / 2],\n          [(dms.width / 5) * 4, dms.height / 2],\n        ],\n        3: [\n          [dms.width / 3, (dms.height / 3) * 2],\n          [(dms.width / 3) * 2, dms.height / 3],\n          [(dms.width / 3) * 2, (dms.height / 3) * 2],\n        ],\n      }[numberOfGroups] ||\n      getSpiralPositions(numberOfGroups, baseCircleSize * 3, 10, 4).map((d) => [\n        d.x + dms.width / 2,\n        d.y + dms.height / 2,\n      ]);\n    let clusterPositions = {};\n    clusters.forEach(({ name }, i) => {\n      clusterPositions[name] = groupPositions[i] || [0, 0];\n    });\n    return { clusters, clusterPositions };\n  }, [data, dms.width + dms.height, groupMeta]);\n\n  const getClusterPosition = (d = {}) => {\n    const clusterName = getClusterName(d);\n    if (clusterName && clusterName.length > 1) {\n      const positions = clusterName\n        .map((name) => clusterPositions[name])\n        .filter((d) => d);\n      const avg = (arr) => arr.reduce((a, b) => a + b, 0) / arr.length;\n      return [avg(positions.map((d) => d[0])), avg(positions.map((d) => d[1]))];\n    }\n    const position = clusterPositions[clusterName];\n    return position || [dms.width / 2, dms.height / 2];\n  };\n\n  useEffect(() => {\n    cachedGroupPositions.current = {};\n  }, [dms.width, dms.height]);\n\n  useEffect(() => {\n    if (!data) return;\n    if (!dms.width) return;\n    if (!groupMeta) return;\n    // if (focusedItem) return;\n\n    if (simulation.current) {\n      simulation.current.stop();\n    }\n\n    const linkKeys = groupMeta[\"links\"];\n\n    let initialLinks = [];\n    data[groupType].map((d) => {\n      linkKeys.map(([key, tableName, typeOfLink]) => {\n        const targetIds = d[key] || [];\n        targetIds.forEach((targetId) => {\n          const id = `${tableName}--${targetId}`;\n          const target = data[tableName].find((d) => d[\"id\"] == id);\n          if (!target) return;\n          initialLinks.push({\n            source: d[\"id\"],\n            target: id,\n            index: initialLinks.length,\n            type: typeOfLink,\n          });\n        });\n      });\n    });\n\n    let nodes = flatten(\n      types.map((type) =>\n        data[type].map((d) => ({ ...d, type, isMain: type == groupType }))\n      )\n    ).filter(\n      (d) =>\n        d[\"type\"] == groupType ||\n        initialLinks.find((link) => link[\"target\"] == d[\"id\"])\n    );\n\n    // const spiralPositions = getSpiralPositions(\n    //   nodes.length,\n    //   baseCircleSize,\n    //   Math.sqrt(baseCircleSize) * 1,\n    //   Math.sqrt(baseCircleSize) * 0.56\n    // );\n\n    const getId = (d) => (typeof d == \"object\" ? d[\"id\"] : d);\n    const getMatches = (d = {}) => {\n      if (!d) return [];\n      let links = initialLinks.filter(\n        (link) =>\n          getId(link[\"target\"]) == d[\"id\"] || getId(link[\"source\"]) == d[\"id\"]\n      );\n      // grab the investment targets as well\n      const investments = new Set(\n        links\n          .map((d) => getId(d[\"target\"]))\n          .filter((d) => d.startsWith(\"Investments--\"))\n      );\n\n      links = [\n        ...links,\n        ...initialLinks.filter(\n          (link) =>\n            investments.has(getId(link[\"target\"])) ||\n            investments.has(getId(link[\"source\"]))\n        ),\n      ];\n      return links;\n    };\n    const getMatchTypes = (d) => {\n      const matches = initialLinks.filter((link) => link[\"target\"] == d[\"id\"]);\n      return [...new Set(matches.map((d) => d[\"type\"]))].sort();\n    };\n\n    nodes = nodes\n      .map((d, i) => {\n        let cachedPosition = cachedGroupPositions.current[d[\"id\"]];\n        if (!cachedPosition)\n          cachedPosition = d.clusterPosition || [dms.width / 2, dms.height / 2];\n        const matchTypes = getMatchTypes(d).join(\"--\");\n        const color = d.isMain ? getColor(d) : \"var(--accent-1)\";\n        const clusterPosition = getClusterPosition(d);\n        // {\n        //     from: fromColor,\n        //     to: toColor,\n        //     \"from--to\": \"url(#from-to)\",\n        //   }[matchTypes] || \"#95afc0\";\n        return {\n          ...d,\n          // x: dms.width / 2 + spiralPositions[i].x,\n          // y: dms.height / 2 + spiralPositions[i].y,\n          x: cachedPosition[0],\n          y: cachedPosition[1],\n          r:\n            (d[\"type\"] == groupType\n              ? baseCircleSize * 1.5\n              : baseCircleSize * 0.7) * getSize(d),\n          numberOfLinks: getMatches(d).length,\n          color,\n          matchTypes,\n          clusterPosition,\n          x: clusterPosition[0],\n          y: clusterPosition[1],\n        };\n      })\n      .sort((a, b) => b.numberOfLinks - a.numberOfLinks);\n\n    const newFocusedNode = focusedNode || nodes.find((d) => d.isMain);\n    if (!hoveredItem && groupType == \"Actors\") {\n      onHoverItem(newFocusedNode);\n    }\n    setFocusedNodeId(newFocusedNode[\"id\"]);\n\n    // filter to just 2nd & 3rd relatives\n    if (groupType == \"Actors\") {\n      const matchingLinks = getMatches(newFocusedNode);\n      const matchingIds = new Set([\n        ...matchingLinks.map((d) => d[\"source\"]),\n        ...matchingLinks.map((d) => d[\"target\"]),\n      ]);\n      const nextLevelMatchingLinks = initialLinks.filter(\n        (link) => matchingIds.has(link.target) || matchingIds.has(link.source)\n      );\n      const nextLevelMatchingIds = new Set([\n        ...nextLevelMatchingLinks.map((d) => d[\"source\"]),\n        ...nextLevelMatchingLinks.map((d) => d[\"target\"]),\n      ]);\n      const getDistanceFromFocusedNode = (d) =>\n        d.id == newFocusedNode.id ? 0 : matchingIds.has(d.id) ? 1 : 2;\n      const isAttachedToFocusedNode = (d) => nextLevelMatchingIds.has(d);\n      nodes = nodes\n        .filter((d) => isAttachedToFocusedNode(d[\"id\"]))\n        .map((d) => ({ ...d, distance: getDistanceFromFocusedNode(d) }));\n      initialLinks = initialLinks.filter(\n        (link) =>\n          isAttachedToFocusedNode(link[\"source\"]) &&\n          isAttachedToFocusedNode(link[\"target\"])\n      );\n    }\n\n    links.current = [...initialLinks];\n    simulationData.current = [...nodes];\n    simulation.current = forceSimulation(simulationData.current)\n      .force(\n        \"x\",\n        forceX((d) => d.clusterPosition[0]).strength(\n          groupType == \"Actors\" ? 0.5 : (d) => (d.isMain ? 0.3 : 0)\n        )\n      )\n      .force(\n        \"y\",\n        forceY(\n          (d) =>\n            d.clusterPosition[1] +\n            (d.matchTypes == \"from\" ? -30 : d.matchTypes == \"to\" ? 30 : 0)\n        ).strength(groupType == \"Actors\" ? 0.5 : (d) => (d.isMain ? 0.3 : 0))\n      )\n      .force(\n        \"link\",\n        forceLink(links.current)\n          .id((d) => d[\"id\"])\n          .distance(baseCircleSize * 2)\n          .strength(0.6)\n      )\n      .force(\n        \"collide\",\n        forceCollide(\n          (d) =>\n            d[\"r\"] +\n            baseCircleSize *\n              (groupType == \"Actors\" ? 3 : 1.2) *\n              (d.isMain ? 1.3 : 0.6)\n        )\n          .strength(0.7)\n          // .iterations(groupType == \"Actors\" ? 10 : 6)\n          .iterations(1)\n      )\n      .alphaMin(0.001)\n      .alpha(groupType == \"Actors\" ? 0.1 : 1)\n      .on(\"tick\", onTick);\n  }, [\n    dms.width,\n    dms.height,\n    data,\n    groupType,\n    // !!focusedItem,\n    groupType == \"Actors\" ? focusedNode : \"\",\n  ]);\n\n  const groupBubbles =\n    groupType == \"Actors\"\n      ? []\n      : clusters.map(({ name, items = [] }) => {\n          const position = getClusterPosition(items[0]);\n          if (!position) return [];\n          const points = groups.current\n            .filter((d) => getClusterName(d) == name && d.isMain)\n            .map((d) => [d.x, d.y]);\n          let hull = polygonHull(points) || [];\n          if (!hull.length) hull = points;\n          const top = [\n            keepBetween(\n              points.map((d) => d[0]).reduce((a, b) => a + b, 0) /\n                points.length,\n              50,\n              dms.width - 50\n            ),\n            keepBetween(\n              Math.min(...points.map((d) => d[1])) - baseCircleSize * 5,\n              10,\n              dms.height - 10\n            ),\n          ];\n          return {\n            name,\n            path: \"M\" + hull.map((d) => d.join(\" \")).join(\" L \") + \"Z\",\n            top,\n            position,\n          };\n        });\n\n  function onTick(d) {\n    const padding = 20;\n    simulationData.current.forEach((d) => {\n      d[\"x\"] = keepBetween(\n        d[\"x\"],\n        d[\"r\"] + padding,\n        dms.width - d[\"r\"] - padding\n      );\n      d[\"y\"] = keepBetween(\n        d[\"y\"],\n        d[\"r\"] + padding,\n        dms.height - d[\"r\"] - padding\n      );\n    });\n    groups.current = simulationData.current;\n\n    cachedGroupPositions.current = {\n      ...cachedGroupPositions.current,\n      ...fromPairs(\n        groups.current.map((item) => [item[\"id\"], [item[\"x\"], item[\"y\"]]])\n      ),\n    };\n    forceUpdate();\n    // setGroups(simulationData.current);\n  }\n\n  const updateTooltip = (item) => {\n    // if (groupType == \"Actors\") return;\n    if (item) {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n        timeout.current = null;\n      }\n      onHoverItem(item);\n    } else {\n      timeout.current = setTimeout(() => {\n        onHoverItem(null);\n        timeout.current = null;\n      }, 300);\n    }\n  };\n\n  const getLinkPath = ({ source, target, type }) => {\n    const angle = getAngleFromPoints(source, target);\n    const reverseAngle = getAngleFromPoints(target, source);\n    const startDiff = getPointFromAngleAndDistance(angle, source.r + 2);\n    const targetDiff = getPointFromAngleAndDistance(reverseAngle, target.r + 2);\n    let points = [\n      [source.x - startDiff.x, source.y - startDiff.y],\n      [target.x - targetDiff.x, target.y - targetDiff.y],\n    ];\n    if (type == \"to\") points.reverse();\n    return `M ${points[0].join(\" \")} L ${points[1].join(\" \")}`;\n  };\n\n  const isInHoveredPointNetwork = (item, source) => {\n    if (item.id == hoveredItem.id) return 1;\n    const inNetworkMatches = links.current.filter(\n      (d) => d.source.id == hoveredItem.id || d.target.id == hoveredItem.id\n    );\n    const doesHaveAMatch = !!inNetworkMatches.find(\n      (d) =>\n        (d.target.id == item.id || d.source.id == item.id) &&\n        (!source || d.source.id == source.id)\n    );\n    return doesHaveAMatch ? 0.9 : 0.13;\n  };\n\n  const getItemOpacity = (item, source = null) => {\n    if (searchTerm)\n      return item.label.toLowerCase().includes(searchTerm) ? 1 : 0.13;\n    if (Number.isFinite(item.distance)) {\n      return [1, 0.9, 0.3][item.distance];\n    }\n    if (hoveredItem) return isInHoveredPointNetwork(item, source);\n    if (!activeFilters.length) return 1;\n\n    const unsatisifiedActiveFilters = activeFilters.filter(\n      ({ type, value: filterValue }) => {\n        const value = getFilterFromItem(item, type);\n        if (!value.length) return true;\n        if (source) {\n          const sourceValue = getFilterFromItem(source, type);\n          if (!sourceValue.includes(filterValue)) return true;\n          return false;\n        }\n        if (value.includes(filterValue)) return false;\n        return true;\n      }\n    );\n    return unsatisifiedActiveFilters.length ? 0.13 : 1;\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={`NetworkBubbles NetworkBubbles--${\n        activeFilters.length || searchTerm ? \"is\" : \"is-not\"\n      }-hovering`}\n    >\n      <div className=\"NetworkBubbles__wrapper\">\n        {groups.current && (\n          <>\n            {/* {topLeftDot && (\n              <div\n                className=\"NetworkBubbles__annotation\"\n                style={move(\n                  topLeftDot[\"position\"][0] + topLeftGroup[\"x\"],\n                  topLeftDot[\"position\"][1] + topLeftGroup[\"y\"]\n                )}\n              >\n                <svg\n                  className=\"NetworkBubbles__annotation-line\"\n                  viewBox=\"0 0 1 1\"\n                  preserveAspectRatio=\"none\"\n                >\n                  <path\n                    vectorEffect=\"non-scaling-stroke\"\n                    d=\"M 0 0 C 0 0.5 0.5 1 1 1\"\n                  ></path>\n                </svg>\n                <div className=\"NetworkBubbles__annotation-text\">\n                  Each dot is a Item\n                  <br />\n                  <i>hover to see details</i>\n                </div>\n              </div>\n            )} */}\n            <svg width={dms.width} height={dms.height}>\n              <defs>\n                <linearGradient id={`from-to`}>\n                  {[fromColor, toColor].map((color, i) => (\n                    <stop key={i} stopColor={color} offset={i * 100 + \"%\"} />\n                  ))}\n                </linearGradient>\n\n                {contributionAreaColorCombos.map(({ slug, colors }) => (\n                  <linearGradient key={slug} id={slug}>\n                    {colors.map((color, i) => (\n                      <stop key={i} stopColor={color} offset={i * 100 + \"%\"} />\n                    ))}\n                  </linearGradient>\n                ))}\n\n                <marker\n                  id=\"NetworkBubbles__arrow\"\n                  className=\"NetworkBubbles__arrow\"\n                  viewBox=\"0 0 10 10\"\n                  refX=\"5\"\n                  refY=\"5\"\n                  markerWidth=\"12\"\n                  markerHeight=\"12\"\n                  orient=\"auto-start-reverse\"\n                >\n                  <path d=\"M 0 1 L 6 5 L 0 9 z\" />\n                </marker>\n\n                <filter\n                  id=\"noise\"\n                  x={-dms.width}\n                  y={-dms.height}\n                  // width=\"600%\"\n                  // height=\"600%\"\n                  width={dms.width * 2}\n                  height={dms.height * 2}\n                >\n                  <feTurbulence\n                    baseFrequency=\"0.03 0.03\"\n                    result=\"NOISE\"\n                    numOctaves=\"2\"\n                  ></feTurbulence>\n                  <feDisplacementMap\n                    in=\"SourceGraphic\"\n                    in2=\"NOISE\"\n                    scale=\"13\"\n                    xChannelSelector=\"R\"\n                    yChannelSelector=\"R\"\n                  ></feDisplacementMap>\n                </filter>\n              </defs>\n\n              {groupBubbles.map(({ name, path, top }, i) => (\n                <path\n                  key={name}\n                  className={`NetworkBubbles__cluster`}\n                  style={{ strokeWidth: baseCircleSize * 7 }}\n                  filter=\"url(#noise)\"\n                  d={path}\n                ></path>\n              ))}\n\n              {links.current.map((link, i) => (\n                <g key={i}>\n                  <path\n                    className={`NetworkBubbles__link NetworkBubbles__link--${link[\"type\"]}`}\n                    d={getLinkPath(link)}\n                    markerStart={\n                      link[\"type\"] == \"equal\"\n                        ? null\n                        : \"url(#NetworkBubbles__arrow)\"\n                    }\n                    style={{\n                      opacity: getItemOpacity(link.target, link.source),\n                    }}\n                  ></path>\n                  {link[\"type\"] != \"equal\" && (\n                    <path\n                      className={`NetworkBubbles__link__pulse NetworkBubbles__link__pulse--${link[\"type\"]}`}\n                      d={getLinkPath(link)}\n                      style={{\n                        opacity: getItemOpacity(link.target, link.source),\n                      }}\n                    ></path>\n                  )}\n                </g>\n              ))}\n\n              {groups.current.map((item) => (\n                <g\n                  key={item[\"id\"]}\n                  className={`NetworkBubbles__group-g`}\n                  style={{\n                    ...move(item[\"x\"], item[\"y\"]),\n                    opacity: getItemOpacity(item),\n                  }}\n                  onClick={() =>\n                    groupType == \"Actors\"\n                      ? setFocusedNodeId(item[\"id\"])\n                      : onFocusItem(item[\"id\"])\n                  }\n                >\n                  <g\n                    onMouseEnter={() => updateTooltip(item)}\n                    onMouseLeave={() =>\n                      groupType == \"Actors\"\n                        ? updateTooltip(focusedNode)\n                        : updateTooltip(null)\n                    }\n                  >\n                    <circle\n                      fill={\n                        groupType == \"Actors\" &&\n                        item[\"id\"] == (focusedNode || {})[\"id\"]\n                          ? \"white\"\n                          : \"transparent\"\n                      }\n                      r={item[\"r\"] * 1.6}\n                    />\n                    <g\n                      style={{\n                        // fill: typeColors[item[\"type\"]],\n                        fill: item[\"color\"],\n                        transform: `scale(${item[\"r\"] / 50})`,\n                      }}\n                    >\n                      {item[\"type\"] == \"Actors\" &&\n                      item[\"Person or Org\"] == \"Organization\"\n                        ? typeShapes[\"Organizations\"]\n                        : typeShapes[item[\"type\"]]}\n                    </g>\n                  </g>\n\n                  {groupType == item[\"type\"] && (\n                    <CircleText r={item[\"r\"] + 6}>\n                      {truncate(item[\"label\"], Math.floor(item[\"r\"] * 0.36))}\n                    </CircleText>\n                  )}\n                </g>\n              ))}\n\n              {groupBubbles.map(({ name, path, top }, i) => (\n                <text\n                  key={name}\n                  style={move(...top)}\n                  className={`NetworkBubbles__cluster-name`}\n                >\n                  {name}\n                </text>\n              ))}\n            </svg>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkBubbles;\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n}\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import React, { useMemo } from \"react\";\n\nimport Icon from \"./../Icon/Icon\";\n\nimport { fieldLabels, contributionAreaColors } from \"./../../constants\";\nimport { flatten, toTitleCase } from \"./../../utils\";\n\nimport \"./NetworkFilters.css\";\n\nconst NetworkFilters = ({ data, filters, activeFilters, onUpdateFilters }) => {\n  const parsedFilters = useMemo(\n    () =>\n      filters.map((filter) => {\n        const values = [\n          ...new Set(flatten(data.map((d) => getFilterFromItem(d, filter)))),\n        ];\n        return { name: filter, values };\n      }),\n    [data, filters]\n  );\n\n  const onClickItem = (type, value) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    if (!activeFilterOfType) {\n      onUpdateFilters([...activeFilters, { type, value }]);\n      return;\n    }\n    const otherActiveFilters = activeFilters.filter(\n      (filter) => filter.type != type\n    );\n\n    const isActiveFilter = activeFilterOfType[\"value\"] == value;\n    const newFilters = isActiveFilter\n      ? otherActiveFilters\n      : [...otherActiveFilters, { type, value }];\n\n    onUpdateFilters(newFilters);\n  };\n  // const onMouseLeaveItem = (type, item) => {\n  //   onUpdateFilters(type, item);\n  // };\n\n  const getFilterState = (type, value) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    if (!activeFilterOfType) return \"normal\";\n    return activeFilterOfType[\"value\"] == value ? \"selected\" : \"unselected\";\n  };\n\n  return (\n    <div className=\"NetworkFilters\">\n      {parsedFilters.map(({ name, values }) => (\n        <div className=\"NetworkFilters__filter\">\n          <h6>{fieldLabels[name] || name}</h6>\n          {values.map((value) => {\n            const state = getFilterState(name, value);\n            return (\n              <div\n                className={`NetworkFilters__filter__item NetworkFilters__filter__item--is-${state}`}\n                key={value}\n                onClick={() => onClickItem(name, value)}\n                style={\n                  name == \"mainContributionArea\"\n                    ? { \"--override-color\": contributionAreaColors[value] }\n                    : {}\n                }\n                // onMouseLeave={() => onMouseLeaveItem(name, null)}\n              >\n                {toTitleCase(value)}\n                {state == \"selected\" && <Icon name=\"x\" size=\"s\" />}\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default NetworkFilters;\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import React, { useMemo, useState } from \"react\";\n\nimport Icon from \"./../Icon/Icon\";\n\nimport { fieldLabels } from \"./../../constants\";\nimport { flatten, toTitleCase } from \"./../../utils\";\n\nimport \"./NetworkList.css\";\n\nconst NetworkList = ({ data, filters, focusedNode, setFocusedNodeId }) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const isItemActive = (item) => {\n    if (!activeFilters.length) return true;\n\n    const unsatisifiedActiveFilters = activeFilters.filter(\n      ({ type, value: filterValue }) => {\n        const value = getFilterFromItem(item, type);\n        if (!value.length) return true;\n        if (value.includes(filterValue)) return false;\n        return true;\n      }\n    );\n    return !unsatisifiedActiveFilters.length;\n  };\n\n  const parsedFilters = useMemo(\n    () =>\n      filters.map((filter) => {\n        const values = [\n          ...new Set(flatten(data.map((d) => getFilterFromItem(d, filter)))),\n        ];\n        return { name: filter, values };\n      }),\n    [data, filters]\n  );\n\n  const onSetFilter = (type, value) => {\n    const otherActiveFilters = activeFilters.filter(\n      (filter) => filter.type != type\n    );\n    if (!value) {\n      setActiveFilters(otherActiveFilters);\n    } else {\n      setActiveFilters([...otherActiveFilters, { type, value }]);\n    }\n  };\n\n  const getFilterValue = (type) => {\n    const activeFilterOfType = activeFilters.find(\n      (filter) => filter[\"type\"] == type\n    );\n    return activeFilterOfType ? activeFilterOfType[\"value\"] : null;\n  };\n\n  const [actors, organizations] = useMemo(\n    () => [\n      data\n        .filter((d) => d[\"Person or Org\"] != \"Organization\" && isItemActive(d))\n        .sort((a, b) => (b.label > a.label ? -1 : 1)),\n      data\n        .filter((d) => d[\"Person or Org\"] == \"Organization\" && isItemActive(d))\n        .sort((a, b) => (b.label > a.label ? -1 : 1)),\n    ],\n    [data, activeFilters]\n  );\n\n  return (\n    <div className=\"NetworkList\">\n      {parsedFilters.map(({ name, values }) => (\n        <div className=\"NetworkList__filter\">\n          <select\n            className=\"NetworkList__select\"\n            value={getFilterValue(name) || \"\"}\n            onChange={(e) => {\n              onSetFilter(name, e.target.value);\n            }}\n          >\n            <option value=\"\">\n              - Filter list by {fieldLabels[name] || name} -\n            </option>\n            {values.map((value) => {\n              return (\n                <option key={value} value={value}>\n                  {toTitleCase(value)}\n                </option>\n              );\n            })}\n          </select>\n          {getFilterValue(name) && (\n            <button\n              className=\"NetworkList__clear\"\n              onClick={() => onSetFilter(name, null)}\n            >\n              <Icon name=\"x\" size=\"s\" />\n            </button>\n          )}\n        </div>\n      ))}\n\n      <div className=\"NetworkList__filter\">\n        <h6>Individuals</h6>\n        {actors.map((d) => {\n          const isSelected = d.id == (focusedNode || {}).id;\n          return (\n            <div\n              className={`NetworkList__filter__item NetworkList__filter__item--is-${\n                isSelected ? \"selected\" : \"unselected\"\n              }`}\n              key={d.id}\n              onClick={() => setFocusedNodeId(d[\"id\"])}\n              // onMouseLeave={() => onMouseLeaveItem(name, null)}\n            >\n              {d.label}\n            </div>\n          );\n        })}\n\n        <br />\n        <h6>Organizations</h6>\n        {organizations.map((d) => {\n          const isSelected = d.id == (focusedNode || {}).id;\n          return (\n            <div\n              className={`NetworkList__filter__item NetworkList__filter__item--is-${\n                isSelected ? \"selected\" : \"unselected\"\n              }`}\n              key={d.id}\n              onClick={() => setFocusedNodeId(d[\"id\"])}\n              // onMouseLeave={() => onMouseLeaveItem(name, null)}\n            >\n              {d.label}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default NetworkList;\n\nconst getFilterFromItem = (d, filter) => {\n  const value = d[filter];\n  if (!value) return [];\n  if (typeof value == \"object\") return value;\n  return [value];\n};\n","import React from \"react\";\nimport { format } from \"d3\";\n\nimport { move, truncate } from \"./../../utils\";\nimport { typeColors } from \"./../../constants\";\n\nimport \"./NetworkTooltip.css\";\n\nconst NetworkTooltip = ({ data, groupType, isFocused, onFocus }) => {\n  return (\n    <div className={[\"NetworkTooltip\"].join(\" \")}>\n      <div className=\"NetworkTooltip__name\">\n        {!!data[\"year\"] && (\n          <div className=\"NetworkTooltip__year\">{data[\"year\"]}</div>\n        )}\n        {data[\"label\"]}\n      </div>\n      {/* <div className=\"NetworkTooltip__text\">{data[\"type\"].slice(0, -1)}</div> */}\n      {data[\"Amount\"] && (\n        <div className=\"NetworkTooltip__text\">\n          ${format(\",.0f\")(data[\"Amount\"])}\n        </div>\n      )}\n      {data[\"mainContributionArea\"] && (\n        <div className=\"NetworkTooltip__text\">\n          {data[\"mainContributionArea\"].join(\" & \")}\n        </div>\n      )}\n      {data[\"Entity Type\"] && (\n        <div className=\"NetworkTooltip__text\">\n          {data[\"Entity Type\"].join(\", \")}\n        </div>\n      )}\n      {/* {data[\"Focus\"] && (\n        <div className=\"NetworkTooltip__text\">{data[\"Focus\"]}</div>\n      )} */}\n      {/* <div className=\"NetworkTooltip__info \">\n        <span className={`NetworkTooltip__info actor actor--${data[\"actor\"]}`}>\n          {data[\"actors\"].join(\", \").replace(new RegExp(\" -- \", \"g\"), \", \")}\n        </span>\n      </div>\n      <div className={`NetworkTooltip__info`}>\n        {(data[\"Mission Type\"] || [])\n          .map((d) => d.toLowerCase().trim())\n          .map((type) => (\n            <span\n              key={type}\n              className=\"NetworkTooltip__type-name\"\n              style={{ color: typeColors[type] }}\n            >\n              {type}\n            </span>\n          ))}\n      </div>\n       */}\n      {/* <svg className=\"NetworkTooltip__arrow\" viewBox=\"0 0 3 2\">\n        <path d=\"M 1 0 L 3 0 L 0 2 Z\" fill=\"white\"></path>\n      </svg> */}\n\n      {groupType == \"Actors\" ? (\n        isFocused ? (\n          <button\n            className=\"NetworkTooltip__more\"\n            onClick={() => onFocus(data[\"id\"])}\n          >\n            More info\n          </button>\n        ) : (\n          <div className=\"NetworkTooltip__note\">Click to center</div>\n        )\n      ) : (\n        <div className=\"NetworkTooltip__note\">Click for more info</div>\n      )}\n    </div>\n  );\n};\nexport default NetworkTooltip;\n","import React from \"react\";\n\nimport { statusColors } from \"./../../constants\";\n\nimport \"./StatusPill.css\";\n\nconst StatusPill = ({ status }) => {\n  return (\n    <div\n      className=\"StatusPill\"\n      style={{\n        \"--status-color\": statusColors[status],\n        background: `${statusColors[status]}33`,\n      }}\n    >\n      {status}\n    </div>\n  );\n};\nexport default StatusPill;\n","import React, { useMemo } from \"react\";\nimport { format } from \"d3-format\";\n\nimport StatusPill from \"./StatusPill\";\nimport Icon from \"./../Icon/Icon\";\n\nimport \"./NetworkModal.css\";\n\nconst NetworkModal = ({ info = {}, onClose }) => {\n  return (\n    <>\n      <div className=\"NetworkModal__background\" onClick={onClose}></div>\n      <div className=\"NetworkModal\">\n        <div className=\"NetworkModal__content\">\n          <div className=\"NetworkModal__close\" onClick={onClose}>\n            <Icon size=\"s\" name=\"x\" />\n          </div>\n\n          <div className=\"NetworkModal__name\">\n            {info[\"label\"]}\n            <div className=\"NetworkModal__year\">{info[\"year\"]}</div>\n          </div>\n\n          <div className=\"NetworkModal__status\">\n            {!!info[\"Status\"] && <StatusPill status={info[\"Status\"][0]} />}\n          </div>\n\n          {info[\"Amount\"] && (\n            <div className=\"NetworkModal__info\">\n              ${format(\",.0f\")(info[\"Amount\"])}\n            </div>\n          )}\n          {info[\"mainContributionArea\"] && (\n            <div className=\"NetworkModal__info\">\n              {info[\"mainContributionArea\"].join(\" & \")}\n            </div>\n          )}\n          {info[\"Entity Type\"] && (\n            <div className=\"NetworkModal__info\">\n              {info[\"Entity Type\"].join(\", \")}\n            </div>\n          )}\n          {info[\"Focus\"] && (\n            <div className=\"NetworkModal__info\">{info[\"Focus\"]}</div>\n          )}\n          {info[\"Link to More Info on Entity (bio or overview page)\"] && (\n            <a\n              href={info[\"Link to More Info on Entity (bio or overview page)\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )}\n          {info[\"URL for Context\"] && (\n            <a\n              href={info[\"URL for Context\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              More info\n            </a>\n          )}\n          {info[\"Big/Latest News\"] && (\n            <a\n              href={info[\"Big/Latest News\"]}\n              target=\"_blank\"\n              rel=\"noopener\"\n              className=\"NetworkModal__link\"\n            >\n              Latest news\n            </a>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NetworkModal;\n","import { max } from \"d3-array\";\nimport { scaleLog } from \"d3-scale\";\n\nimport { fromPairs } from \"./utils\";\nimport { data } from \"./constants\";\n\nconst amountSizeScale = scaleLog()\n  .domain([1, max(data[\"Investments\"], (d) => d[\"Amount\"])])\n  .range([0.01, 1.2])\n  .clamp(true);\n\nexport const groupOptions = [\n  {\n    label: \"Interventions\",\n    id: \"Interventions\",\n    pluralNoun: \"interventions\",\n    key: \"Interventions\",\n    accessor: (d) => d[\"Interventions\"],\n    clusterBy: \"mainContributionArea\",\n    getClusterName: (d) => d[\"mainContributionArea\"],\n    // getColor: (d) => contributionAreaColors[d[\"mainContributionArea\"]],\n    filters: [\n      \"mainContributionArea\",\n      \"Rate-Limiting Feature\",\n      \"Type (approach)\",\n    ],\n    links: [\n      [\"Associated Investments\", \"Investments\", \"equal\"],\n      [\"Associated Regulations\", \"Regulations\", \"equal\"],\n      [\"Enacted/Undertaken By\", \"Actors\", \"equal\"],\n      [\"Funded by\", \"Actors\", \"equal\"],\n    ],\n  },\n  {\n    label: \"Investments\",\n    id: \"Investments\",\n    pluralNoun: \"investments\",\n    key: \"Investments\",\n    accessor: (d) => d[\"Investments\"],\n    clusterBy: \"mainContributionArea\",\n    getClusterName: (d) => d[\"mainContributionArea\"],\n    // getColor: (d) => contributionAreaColors[d[\"mainContributionArea\"]],\n    getSize: (d) => amountSizeScale(d[\"Amount\"]) || 0.8,\n    filters: [\"mainContributionArea\"],\n\n    links: [\n      [\"Source\", \"Actors\", \"from\"],\n      [\"Recipient\", \"Actors\", \"to\"],\n      [\"Intervention(s) being addressed:\", \"Actors\", \"equal\"],\n    ],\n  },\n  {\n    label: \"Actors\",\n    id: \"Actors\",\n    pluralNoun: \"actors\",\n    key: \"Actors\",\n    accessor: (d) => d[\"Actors\"],\n    // clusterBy: \"Person or Org\",\n    // getClusterName: (d) => {\n    //   return d[\"Person or Org\"];\n    // },\n    // getColor: (d) =>\n    //   ({\n    //     \"Individual Person\": \"var(--accent-3)\",\n    //     Organization: \"var(--accent-2)\",\n    //   }[d[\"Person or Org\"]]),\n    // clusterBy: \"Entity Type\",\n    // getClusterName: (d) => {\n    //   return (d[\"Entity Type\"] || [])[0];\n    // },\n    // getColor: (d) =>\n    //   ({\n    //     \"Individual Person\": \"#89b792\",\n    //     Organization: \"#4d405a\",\n    //   }[d]),\n    getSize: (d) =>\n      d.type != \"Actors\"\n        ? 1.7\n        : d[\"Person or Org\"] == \"Individual Person\"\n        ? 2.1\n        : ([\n            \"Under 10\",\n            \"10-50\",\n            \"50-100\",\n            \"100-500\",\n            \"500-1000\",\n            \"1000+\",\n          ].indexOf(d[\"Number of People Involved (to 3 sig digits)\"]) +\n            8) *\n          0.23,\n    filters: [\n      // \"mainContributionArea\",\n      // \"Enacting/Undertaking XYZ Interventions\",\n      \"Entity Type\",\n      // \"Status\",\n    ],\n\n    links: [\n      [\n        \"Directly Associated Orgs (e.g., employment/parent org):\",\n        \"Actors\",\n        \"equal\",\n      ],\n      [\"Partners With\", \"Actors\", \"equal\"],\n      [\"Enacting/Undertaking XYZ Interventions\", \"Interventions\", \"equal\"],\n      [\"Funding XYZ Interventions\", \"Interventions\", \"to\"],\n      [\"Made XYZ Investment(s)\", \"Investments\", \"to\"],\n      [\"Received XYZ Investment(s)\", \"Investments\", \"from\"],\n    ],\n  },\n  // {\n  //   label: \"Regulations\",\n  //   id: \"Regulations\",\n  //   pluralNoun: \"regulations\",\n  //   key: \"Regulations\",\n  //   accessor: (d) => d[\"Regulations\"],\n  //   links: [[\"Impacts the Following Interventions\", \"Interventions\", \"equal\"]],\n  // },\n];\nexport const groupOptionsById = fromPairs(\n  groupOptions.map((group) => [group[\"id\"], group])\n);\n","import React, { useState, useCallback } from \"react\";\n\nimport NetworkSearch from \"./NetworkSearch\";\nimport NetworkBubbles from \"./NetworkBubbles\";\nimport NetworkFilters from \"./NetworkFilters\";\nimport NetworkList from \"./NetworkList\";\nimport NetworkTooltip from \"./NetworkTooltip\";\nimport NetworkModal from \"./NetworkModal\";\n\nimport { typeShapes } from \"./../../constants\";\nimport { groupOptions, groupOptionsById } from \"./../../group-options\";\n\nimport \"./Network.css\";\n\nconst Network = ({\n  data,\n  groupType,\n  focusedItem,\n  searchTerm,\n  onChangeState,\n  focusedNode,\n}) => {\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [hoveredItem, onHoverItem] = useState(null);\n\n  const groupMeta = groupOptionsById[groupType];\n\n  const onFocusItem = useCallback((newItem) => {\n    onChangeState(\"item\", newItem);\n  });\n\n  const setFocusedNodeId = useCallback((newItem) => {\n    onChangeState(\"focused\", newItem);\n  });\n\n  const setSearchTerm = (newTerm) => {\n    onChangeState(\"search\", newTerm);\n  };\n\n  const onCloseFocusedItem = useCallback(() => {\n    onFocusItem(null);\n  }, []);\n\n  return (\n    <div className=\"Network__wrapper\">\n      <div className=\"Network__main\">\n        <div className=\"Network__sidebar\">\n          <div className=\"Network__sidebar__top\">\n            <h1>The Climate Change Industry</h1>\n            <div className=\"Network__type\">\n              <div className=\"Network__toggle\">\n                {groupOptions.map(({ label, id }) => (\n                  <button\n                    className={`Network__toggle__button Network__toggle__button--is-${\n                      groupType == id ? \"selected\" : \"unselected\"\n                    }`}\n                    onClick={() => {\n                      setActiveFilters([]);\n                      setSearchTerm(null);\n                      onHoverItem(null);\n                      onChangeState(\"group\", id);\n                      setFocusedNodeId(null);\n                    }}\n                  >\n                    <svg viewBox=\"-75 -75 150 150\">{typeShapes[id]}</svg>\n                    {label}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <h6 className=\"Network__sidebar__bottom-label\">\n            {groupType == \"Actors\" ? \"Filter by actor\" : \"Filter by\"}\n          </h6>\n\n          <div className=\"Network__sidebar__bottom\">\n            {groupType == \"Actors\" ? (\n              <div className=\"Network__sidebar__section Network__filters\">\n                <NetworkList\n                  data={data[groupType]}\n                  filters={groupMeta[\"filters\"]}\n                  {...{ focusedNode, setFocusedNodeId }}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"Network__sidebar__section Network__search\">\n                  <NetworkSearch {...{ data, searchTerm, setSearchTerm }} />\n                </div>\n                <div className=\"Network__sidebar__section Network__filters\">\n                  <NetworkFilters\n                    filters={groupMeta[\"filters\"]}\n                    {...{ activeFilters }}\n                    data={data[groupType]}\n                    onUpdateFilters={setActiveFilters}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"Network__bubbles\">\n          <NetworkBubbles\n            {...{\n              data,\n              groupType,\n              groupMeta,\n              activeFilters,\n              focusedItem,\n              onFocusItem,\n              hoveredItem,\n              onHoverItem,\n              focusedNode,\n              setFocusedNodeId,\n            }}\n            searchTerm={searchTerm.toLowerCase()}\n          />\n        </div>\n      </div>\n\n      {!!hoveredItem && (\n        <NetworkTooltip\n          data={hoveredItem}\n          groupType={groupType}\n          isFocused={hoveredItem[\"id\"] == focusedNode[\"id\"]}\n          onFocus={onFocusItem}\n        />\n      )}\n\n      {focusedItem && (\n        <NetworkModal info={focusedItem} onClose={onCloseFocusedItem} />\n      )}\n    </div>\n  );\n};\n\nexport default Network;\n","import React, { useEffect, useMemo, useState } from \"react\";\n\nimport { data } from \"./../constants\";\nimport { useQueryParams } from \"./../utils\";\nimport Network from \"./Network/Network\";\n\nimport \"./App.css\";\nconsole.log(data);\n\nfunction App() {\n  const [params, updateParams] = useQueryParams();\n\n  const onChangeState = (type, newState) => {\n    console.log(\"change\", type);\n    updateParams({ [type]: newState });\n  };\n\n  const viz = params[\"viz\"] || \"network\";\n  const groupType = params[\"group\"] || \"Interventions\";\n  const searchTerm = params[\"search\"] || \"\";\n\n  const focusedItem = useMemo(() => {\n    if (!params[\"item\"]) return null;\n    const itemGroupType = params[\"item\"].split(\"--\")[0];\n    const matchingItem = (data[itemGroupType || groupType] || []).find(\n      (d) => d[\"id\"] === params[\"item\"]\n    );\n    if (!matchingItem) return null;\n    return matchingItem;\n  }, [params[\"item\"], data]);\n\n  const focusedNode = useMemo(() => {\n    if (!params[\"focused\"] || typeof params[\"focused\"] != \"string\") return null;\n    const itemGroupType = params[\"focused\"].split(\"--\")[0];\n    const matchingItem = (data[itemGroupType || groupType] || []).find(\n      (d) => d[\"id\"] === params[\"focused\"]\n    );\n    if (!matchingItem) return null;\n    return matchingItem;\n  }, [params[\"focused\"], data]);\n\n  return (\n    <div className={`App`}>\n      {viz === \"network\" ? (\n        <Network\n          {...{\n            data,\n            groupType,\n            focusedItem,\n            focusedNode,\n            searchTerm,\n            onChangeState,\n          }}\n        />\n      ) : // <Objectives\n      //   data={data[\"Objectives\"]}\n      //   investigations={data[\"Investigations\"]}\n      //   instruments={data[\"Instruments/Payloads\"]}\n      //   missions={data[\"Missions\"]}\n      //   focusedObjective={focusedObjective}\n      //   onChangeState={onChangeState}\n      // />\n      null}\n      {/* <SvgPatterns /> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// const SvgPatterns = () => (\n//   <svg width=\"0\" height=\"0\">\n//     <defs>\n//       <pattern\n//         id=\"stripes\"\n//         patternUnits=\"userSpaceOnUse\"\n//         width=\"7\"\n//         height=\"7\"\n//         patternTransform=\"rotate(45)\"\n//       >\n//         <line y2=\"7\" stroke=\"#fff\" strokeWidth=\"5\"></line>\n//       </pattern>\n//       <pattern\n//         id=\"x\"\n//         patternContentUnits=\"objectBoundingBox\"\n//         width=\"100%\"\n//         height=\"100%\"\n//       >\n//         <line\n//           style={{ strokeLinecap: \"round\" }}\n//           x1=\"0.33\"\n//           x2=\"0.67\"\n//           y1=\"0.33\"\n//           y2=\"0.67\"\n//           stroke=\"#fff\"\n//           strokeWidth=\"0.13\"\n//         ></line>\n//         <line\n//           style={{ strokeLinecap: \"round\" }}\n//           x1=\"0.67\"\n//           x2=\"0.33\"\n//           y1=\"0.33\"\n//           y2=\"0.67\"\n//           stroke=\"#fff\"\n//           strokeWidth=\"0.13\"\n//         ></line>\n//       </pattern>\n//     </defs>\n//   </svg>\n// );\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}